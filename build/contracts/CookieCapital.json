{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "stakedTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Eat",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Harvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_cookiePower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_lastStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_staked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_stakedTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_totalCookiesEaten",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "calculateProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "eat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyUnstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "earnedCookies",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestAndEat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/worms/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "1": "/Users/worms/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/worms/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "/Users/worms/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "4": "contracts/cookie.sol"
  },
  "ast": {
    "absolutePath": "contracts/cookie.sol",
    "exportedSymbols": {
      "Context": [
        1127
      ],
      "CookieCapital": [
        414
      ],
      "ERC20": [
        1002
      ],
      "IERC20": [
        1080
      ],
      "IERC20Metadata": [
        1105
      ]
    },
    "id": 415,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/worms/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 415,
        "sourceUnit": 1003,
        "src": "26:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1002,
              "src": "109:5:4"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "109:5:4"
          }
        ],
        "canonicalName": "CookieCapital",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 414,
        "linearizedBaseContracts": [
          414,
          1002,
          1105,
          1080,
          1127
        ],
        "name": "CookieCapital",
        "nameLocation": "92:13:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "_stakedToken",
            "nameLocation": "136:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 414,
            "src": "122:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$1002",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 6,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1002,
                "src": "122:5:4"
              },
              "referencedDeclaration": 1002,
              "src": "122:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1002",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "5ec8a5ff",
            "id": 9,
            "mutability": "mutable",
            "name": "_stakedTokenAddress",
            "nameLocation": "169:19:4",
            "nodeType": "VariableDeclaration",
            "scope": 414,
            "src": "154:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "154:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5111518",
            "id": 11,
            "mutability": "mutable",
            "name": "_totalCookiesEaten",
            "nameLocation": "209:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 414,
            "src": "194:33:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ffd45a64",
            "id": 15,
            "mutability": "mutable",
            "name": "_staked",
            "nameLocation": "270:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 414,
            "src": "234:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "243:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "234:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 13,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "254:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f316a05",
            "id": 19,
            "mutability": "mutable",
            "name": "_cookiePower",
            "nameLocation": "319:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 414,
            "src": "283:48:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "292:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "283:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 17,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "303:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8eebfae3",
            "id": 23,
            "mutability": "mutable",
            "name": "_lastStaked",
            "nameLocation": "373:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 414,
            "src": "337:47:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "346:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "337:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 21,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "357:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
            "id": 29,
            "name": "Staked",
            "nameLocation": "397:6:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "420:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "404:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "434:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "426:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "403:38:4"
            },
            "src": "391:51:4"
          },
          {
            "anonymous": false,
            "eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
            "id": 35,
            "name": "Unstaked",
            "nameLocation": "453:8:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "478:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "462:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "492:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "484:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "461:38:4"
            },
            "src": "447:53:4"
          },
          {
            "anonymous": false,
            "eventSelector": "c9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba",
            "id": 41,
            "name": "Harvest",
            "nameLocation": "511:7:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "535:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "519:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "549:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "541:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "518:38:4"
            },
            "src": "505:52:4"
          },
          {
            "anonymous": false,
            "eventSelector": "323082f42560de16c285b305bed7b898b58bac4dedddcad2b802992135dc7ed5",
            "id": 47,
            "name": "Eat",
            "nameLocation": "568:3:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "588:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "572:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "602:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "594:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "571:38:4"
            },
            "src": "562:48:4"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "681:107:4",
              "statements": [
                {
                  "expression": {
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56,
                      "name": "_stakedTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "691:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57,
                      "name": "stakedTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "713:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "691:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "691:40:4"
                },
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60,
                      "name": "_stakedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "741:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1002",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 62,
                          "name": "stakedTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "762:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 61,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1002,
                        "src": "756:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1002_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "756:25:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1002",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "741:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1002",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "741:40:4"
                }
              ]
            },
            "id": 67,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "436f6f6b696573",
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "663:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e7104a47789a980aceb315c96878c34f90e0e53b63712b74a5c960b2c3d729c7",
                      "typeString": "literal_string \"Cookies\""
                    },
                    "value": "Cookies"
                  },
                  {
                    "hexValue": "434f4b",
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "674:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_79db66fc3716b4e48afbe258cd3493f9de38fad2b06a224f4a4a6797827e8896",
                      "typeString": "literal_string \"COK\""
                    },
                    "value": "COK"
                  }
                ],
                "id": 54,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 51,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1002,
                  "src": "657:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "657:23:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "stakedTokenAddress",
                  "nameLocation": "637:18:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "629:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "628:28:4"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:0:4"
            },
            "scope": 414,
            "src": "616:172:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "832:342:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "850:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "859:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "850:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374207374616b65206d6f7265207468616e203020746f6b656e732e",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "862:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f398d73c209b19270c1d85e45765039fa6350c5732dd59da7ce4dae15447f63e",
                          "typeString": "literal_string \"Must stake more than 0 tokens.\""
                        },
                        "value": "Must stake more than 0 tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f398d73c209b19270c1d85e45765039fa6350c5732dd59da7ce4dae15447f63e",
                          "typeString": "literal_string \"Must stake more than 0 tokens.\""
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "842:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "842:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "842:53:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 79,
                        "name": "_staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "909:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 82,
                      "indexExpression": {
                        "expression": {
                          "id": 80,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "917:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "917:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "909:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "931:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "909:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89,
                  "nodeType": "IfStatement",
                  "src": "905:63:4",
                  "trueBody": {
                    "id": 88,
                    "nodeType": "Block",
                    "src": "934:34:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 85,
                            "name": "unstake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "948:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "948:9:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87,
                        "nodeType": "ExpressionStatement",
                        "src": "948:9:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 93,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1003:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1003:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1023:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CookieCapital_$414",
                              "typeString": "contract CookieCapital"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CookieCapital_$414",
                              "typeString": "contract CookieCapital"
                            }
                          ],
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1015:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 95,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1015:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1015:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1030:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 90,
                        "name": "_stakedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "977:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1002",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 614,
                      "src": "977:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "977:60:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "977:60:4"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102,
                        "name": "_staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1047:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 105,
                      "indexExpression": {
                        "expression": {
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1055:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1055:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1047:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 106,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "1069:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1047:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:28:4"
                },
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 109,
                        "name": "_lastStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1085:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "expression": {
                          "id": 110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1097:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1097:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1085:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 113,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1111:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1111:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1085:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:41:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1148:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1148:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 120,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1160:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 117,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1141:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1141:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "EmitStatement",
                  "src": "1136:31:4"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "803:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "817:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "809:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "808:16:4"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:0:4"
            },
            "scope": 414,
            "src": "794:380:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1206:280:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 128,
                            "name": "_staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1224:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 131,
                          "indexExpression": {
                            "expression": {
                              "id": 129,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1232:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1232:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1224:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1246:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1224:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f207374616b65206265666f726520756e7374616b696e672e",
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1249:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcd8131d66928fa3059a4ac683921f1b4e67216c2154de3ad1d77635e85f3296",
                          "typeString": "literal_string \"You need to stake before unstaking.\""
                        },
                        "value": "You need to stake before unstaking."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcd8131d66928fa3059a4ac683921f1b4e67216c2154de3ad1d77635e85f3296",
                          "typeString": "literal_string \"You need to stake before unstaking.\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1216:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1216:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:71:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 137,
                      "name": "harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "1297:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1297:9:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:9:4"
                },
                {
                  "assignments": [
                    141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 141,
                      "mutability": "mutable",
                      "name": "staked",
                      "nameLocation": "1324:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 168,
                      "src": "1316:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1316:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "initialValue": {
                    "baseExpression": {
                      "id": 142,
                      "name": "_staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1333:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 145,
                    "indexExpression": {
                      "expression": {
                        "id": 143,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1341:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1341:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1333:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1316:36:4"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 147,
                        "name": "_staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1362:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 150,
                      "indexExpression": {
                        "expression": {
                          "id": 148,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1370:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1370:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1362:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1384:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1362:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:23:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 157,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1417:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1417:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 159,
                        "name": "staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "1429:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 154,
                        "name": "_stakedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1395:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1002",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 538,
                      "src": "1395:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:41:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 163,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1460:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1460:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 165,
                        "name": "staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "1472:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 162,
                      "name": "Unstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1451:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1451:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "EmitStatement",
                  "src": "1446:33:4"
                }
              ]
            },
            "functionSelector": "2def6620",
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nameLocation": "1189:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1196:2:4"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1206:0:4"
            },
            "scope": 414,
            "src": "1180:306:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "1527:261:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 173,
                            "name": "_staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1545:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 176,
                          "indexExpression": {
                            "expression": {
                              "id": 174,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1553:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1553:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1545:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1567:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1545:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f207374616b65206265666f726520756e7374616b696e672e",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1570:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcd8131d66928fa3059a4ac683921f1b4e67216c2154de3ad1d77635e85f3296",
                          "typeString": "literal_string \"You need to stake before unstaking.\""
                        },
                        "value": "You need to stake before unstaking."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcd8131d66928fa3059a4ac683921f1b4e67216c2154de3ad1d77635e85f3296",
                          "typeString": "literal_string \"You need to stake before unstaking.\""
                        }
                      ],
                      "id": 172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1537:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1537:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "1537:71:4"
                },
                {
                  "assignments": [
                    183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 183,
                      "mutability": "mutable",
                      "name": "staked",
                      "nameLocation": "1626:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 210,
                      "src": "1618:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 182,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1618:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 188,
                  "initialValue": {
                    "baseExpression": {
                      "id": 184,
                      "name": "_staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1635:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 187,
                    "indexExpression": {
                      "expression": {
                        "id": 185,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1643:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1643:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1635:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1618:36:4"
                },
                {
                  "expression": {
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 189,
                        "name": "_staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1664:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 192,
                      "indexExpression": {
                        "expression": {
                          "id": 190,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1672:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1672:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1664:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1686:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1664:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:23:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 199,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1719:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1719:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 201,
                        "name": "staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "1731:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 196,
                        "name": "_stakedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1697:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1002",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 538,
                      "src": "1697:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1697:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "1697:41:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 205,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1762:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1762:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 207,
                        "name": "staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "1774:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 204,
                      "name": "Unstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1753:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1753:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "EmitStatement",
                  "src": "1748:33:4"
                }
              ]
            },
            "functionSelector": "7589cf2f",
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyUnstake",
            "nameLocation": "1501:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1517:2:4"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:0:4"
            },
            "scope": 414,
            "src": "1492:296:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "1870:261:4",
              "statements": [
                {
                  "assignments": [
                    219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 219,
                      "mutability": "mutable",
                      "name": "hoursSpent",
                      "nameLocation": "1888:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "1880:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 218,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1880:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 232,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 220,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "1903:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 221,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1903:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 222,
                                    "name": "_lastStaked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "1921:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 224,
                                  "indexExpression": {
                                    "id": 223,
                                    "name": "addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 213,
                                    "src": "1933:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1921:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1903:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 226,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1902:37:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1942:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "1902:44:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 229,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1901:46:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "33363030",
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1950:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3600_by_1",
                        "typeString": "int_const 3600"
                      },
                      "value": "3600"
                    },
                    "src": "1901:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1880:74:4"
                },
                {
                  "assignments": [
                    234
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 234,
                      "mutability": "mutable",
                      "name": "cookieMultiplier",
                      "nameLocation": "1972:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "1964:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 233,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1964:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 241,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1992:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 236,
                            "name": "_cookiePower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "1999:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 238,
                          "indexExpression": {
                            "id": 237,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "2012:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1999:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1992:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 240,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1991:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1964:54:4"
                },
                {
                  "assignments": [
                    243
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 243,
                      "mutability": "mutable",
                      "name": "cookies",
                      "nameLocation": "2036:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 257,
                      "src": "2028:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 242,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2028:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 254,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 244,
                                "name": "_staked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15,
                                "src": "2047:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 246,
                              "indexExpression": {
                                "id": 245,
                                "name": "addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 213,
                                "src": "2055:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2047:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 247,
                              "name": "hoursSpent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "2063:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2047:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 249,
                            "name": "cookieMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "2076:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2047:45:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 251,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2046:47:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2096:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "2046:54:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2028:72:4"
                },
                {
                  "expression": {
                    "id": 255,
                    "name": "cookies",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 243,
                    "src": "2117:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 217,
                  "id": 256,
                  "nodeType": "Return",
                  "src": "2110:14:4"
                }
              ]
            },
            "functionSelector": "b1c17506",
            "id": 258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateProfit",
            "nameLocation": "1803:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1827:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "1819:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1818:14:4"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "profit",
                  "nameLocation": "1862:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "1854:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1853:16:4"
            },
            "scope": 414,
            "src": "1794:337:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "2195:290:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 264,
                            "name": "_staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "2213:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 267,
                          "indexExpression": {
                            "expression": {
                              "id": 265,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2221:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2221:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2213:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2235:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2213:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520686176656e2774207374616b656420616e797468696e672e",
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2238:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_480ed9d2b537f41b7fb114439663f8c1dc20845d12d91bcd7e859e8f9ffe1121",
                          "typeString": "literal_string \"You haven't staked anything.\""
                        },
                        "value": "You haven't staked anything."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_480ed9d2b537f41b7fb114439663f8c1dc20845d12d91bcd7e859e8f9ffe1121",
                          "typeString": "literal_string \"You haven't staked anything.\""
                        }
                      ],
                      "id": 263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2205:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:64:4"
                },
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "mutability": "mutable",
                      "name": "cookies",
                      "nameLocation": "2287:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 302,
                      "src": "2279:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2279:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 279,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 276,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2313:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2313:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 275,
                      "name": "calculateProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 258,
                      "src": "2297:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2297:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2279:45:4"
                },
                {
                  "expression": {
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 280,
                        "name": "_lastStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "2334:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 283,
                      "indexExpression": {
                        "expression": {
                          "id": 281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2346:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2346:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2334:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 284,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2360:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2360:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2334:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "2334:41:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 289,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2391:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2391:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 291,
                        "name": "cookies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "2403:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 288,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 819,
                      "src": "2385:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2385:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "2385:26:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 295,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2434:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2434:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 297,
                        "name": "cookies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "2446:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 294,
                      "name": "Harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2426:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2426:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "EmitStatement",
                  "src": "2421:33:4"
                },
                {
                  "expression": {
                    "id": 300,
                    "name": "cookies",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 274,
                    "src": "2471:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 262,
                  "id": 301,
                  "nodeType": "Return",
                  "src": "2464:14:4"
                }
              ]
            },
            "functionSelector": "4641257d",
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nameLocation": "2146:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2153:2:4"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "earnedCookies",
                  "nameLocation": "2180:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "2172:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2172:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2171:23:4"
            },
            "scope": 414,
            "src": "2137:348:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "2527:418:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 308,
                      "name": "harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "2537:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2537:9:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 310,
                  "nodeType": "ExpressionStatement",
                  "src": "2537:9:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 312,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2564:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              },
                              "id": 317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "31303030",
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2575:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "id": 316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2582:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3138",
                                  "id": 315,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2586:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                "src": "2582:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              },
                              "src": "2575:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              }
                            }
                          ],
                          "id": 318,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2574:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        },
                        "src": "2564:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420656174206174206c65617374203130303020636f6f6b6965732e",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2591:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a6e6c21845b370523b2dc54625809ded52c16fddc0e79e22f0ea298033a391f",
                          "typeString": "literal_string \"Must eat at least 1000 cookies.\""
                        },
                        "value": "Must eat at least 1000 cookies."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a6e6c21845b370523b2dc54625809ded52c16fddc0e79e22f0ea298033a391f",
                          "typeString": "literal_string \"Must eat at least 1000 cookies.\""
                        }
                      ],
                      "id": 311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2556:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2556:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "2556:69:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 325,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2653:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2653:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 324,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 513,
                            "src": "2643:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2643:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 328,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2668:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2643:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820636f6f6b69657320696e2062616c616e63652e",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2676:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ceef0f7d755a57e69c6152bcd58377be6f65a76e123f4cbb1c4942d19825fe5",
                          "typeString": "literal_string \"Not enough cookies in balance.\""
                        },
                        "value": "Not enough cookies in balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ceef0f7d755a57e69c6152bcd58377be6f65a76e123f4cbb1c4942d19825fe5",
                          "typeString": "literal_string \"Not enough cookies in balance.\""
                        }
                      ],
                      "id": 323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2635:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2635:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "2635:74:4"
                },
                {
                  "assignments": [
                    334
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 334,
                      "mutability": "mutable",
                      "name": "remaining",
                      "nameLocation": "2727:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "2719:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 333,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2719:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 343,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 335,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "2739:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2749:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2756:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2760:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "2756:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "2749:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "id": 341,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2748:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000"
                      }
                    },
                    "src": "2739:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2719:44:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 345,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2779:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2779:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 347,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "2791:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 348,
                          "name": "remaining",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 334,
                          "src": "2800:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2791:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 344,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 891,
                      "src": "2773:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2773:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "2773:37:4"
                },
                {
                  "expression": {
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 352,
                        "name": "_cookiePower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "2820:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 355,
                      "indexExpression": {
                        "expression": {
                          "id": 353,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2833:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2833:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2820:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 356,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "2849:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 357,
                              "name": "remaining",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
                              "src": "2858:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2849:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 359,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2848:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31303030",
                              "id": 360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2872:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2879:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2883:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "2879:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "2872:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            }
                          }
                        ],
                        "id": 365,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2871:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      },
                      "src": "2848:38:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2820:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "2820:66:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 370,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2905:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2905:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 372,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "2918:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 373,
                              "name": "remaining",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 334,
                              "src": "2927:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2918:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 375,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2917:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 369,
                      "name": "Eat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "2901:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2901:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "EmitStatement",
                  "src": "2896:42:4"
                }
              ]
            },
            "functionSelector": "85e0ebaf",
            "id": 379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "eat",
            "nameLocation": "2500:3:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2512:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2504:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2504:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2503:16:4"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2527:0:4"
            },
            "scope": 414,
            "src": "2491:454:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 412,
              "nodeType": "Block",
              "src": "2983:196:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 384,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3018:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 385,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3018:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 383,
                                  "name": "calculateProfit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 258,
                                  "src": "3002:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3002:27:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 388,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3042:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 389,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3042:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 387,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 513,
                                  "src": "3032:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 390,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3032:21:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3002:51:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 392,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3001:53:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              },
                              "id": 397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "31303030",
                                "id": 393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3058:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "id": 396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 394,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3065:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3138",
                                  "id": 395,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3069:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                "src": "3065:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              },
                              "src": "3058:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              }
                            }
                          ],
                          "id": 398,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3057:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        },
                        "src": "3001:71:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420656174206d6f7265207468616e203130303020636f6f6b6965732e",
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3074:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0685f62a370b9e24d9215d5fea570a78694bcfba4a2331f108e62fc7eb0acdee",
                          "typeString": "literal_string \"Must eat more than 1000 cookies.\""
                        },
                        "value": "Must eat more than 1000 cookies."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0685f62a370b9e24d9215d5fea570a78694bcfba4a2331f108e62fc7eb0acdee",
                          "typeString": "literal_string \"Must eat more than 1000 cookies.\""
                        }
                      ],
                      "id": 382,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2993:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2993:116:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "2993:116:4"
                },
                {
                  "assignments": [
                    404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 404,
                      "mutability": "mutable",
                      "name": "harvested",
                      "nameLocation": "3127:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 412,
                      "src": "3119:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 403,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3119:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 407,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 405,
                      "name": "harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "3139:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3139:9:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3119:29:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 409,
                        "name": "harvested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "3162:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 408,
                      "name": "eat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "3158:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3158:14:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "3158:14:4"
                }
              ]
            },
            "functionSelector": "c5d01d0c",
            "id": 413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvestAndEat",
            "nameLocation": "2960:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2973:2:4"
            },
            "returnParameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2983:0:4"
            },
            "scope": 414,
            "src": "2951:228:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 415,
        "src": "83:3098:4",
        "usedErrors": []
      }
    ],
    "src": "0:3181:4"
  },
  "bytecode": "60806040523480156200001157600080fd5b506040516200159d3803806200159d833981016040819052620000349162000178565b60405180604001604052806007815260200166436f6f6b69657360c81b81525060405180604001604052806003815260200162434f4b60e81b815250816003908051906020019062000088929190620000d2565b5080516200009e906004906020840190620000d2565b5050600680546001600160a01b039093166001600160a01b03199384168117909155600580549093161790915550620001e6565b828054620000e090620001aa565b90600052602060002090601f0160209004810192826200010457600085556200014f565b82601f106200011f57805160ff19168380011785556200014f565b828001600101855582156200014f579182015b828111156200014f57825182559160200191906001019062000132565b506200015d92915062000161565b5090565b5b808211156200015d576000815560010162000162565b6000602082840312156200018b57600080fd5b81516001600160a01b0381168114620001a357600080fd5b9392505050565b600181811c90821680620001bf57607f821691505b602082108103620001e057634e487b7160e01b600052602260045260246000fd5b50919050565b6113a780620001f66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80637589cf2f116100c3578063a9059cbb1161007c578063a9059cbb146102c9578063b1c17506146102dc578063c5d01d0c146102ef578063dd62ed3e146102f7578063f511151814610330578063ffd45a641461033957600080fd5b80637589cf2f1461026057806385e0ebaf146102685780638eebfae31461027b57806395d89b411461029b578063a457c2d7146102a3578063a694fc3a146102b657600080fd5b8063313ce56711610115578063313ce567146101c257806339509351146101d15780634641257d146101e45780635ec8a5ff146101ec5780635f316a051461021757806370a082311461023757600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a55780632def6620146101b8575b600080fd5b61015a610359565b60405161016791906110eb565b60405180910390f35b61018361017e36600461115c565b6103eb565b6040519015158152602001610167565b6002545b604051908152602001610167565b6101836101b3366004611186565b610403565b6101c0610427565b005b60405160128152602001610167565b6101836101df36600461115c565b61052d565b61019761056c565b6006546101ff906001600160a01b031681565b6040516001600160a01b039091168152602001610167565b6101976102253660046111c2565b60096020526000908152604090205481565b6101976102453660046111c2565b6001600160a01b031660009081526020819052604090205490565b6101c061062c565b6101c06102763660046111e4565b6106a7565b6101976102893660046111c2565b600a6020526000908152604090205481565b61015a610816565b6101836102b136600461115c565b610825565b6101c06102c43660046111e4565b6108b7565b6101836102d736600461115c565b6109ed565b6101976102ea3660046111c2565b6109fb565b6101c0610aae565b6101976103053660046111fd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61019760075481565b6101976103473660046111c2565b60086020526000908152604090205481565b60606003805461036890611230565b80601f016020809104026020016040519081016040528092919081815260200182805461039490611230565b80156103e15780601f106103b6576101008083540402835291602001916103e1565b820191906000526020600020905b8154815290600101906020018083116103c457829003601f168201915b5050505050905090565b6000336103f9818585610b41565b5060019392505050565b600033610411858285610c66565b61041c858585610cf8565b506001949350505050565b3360009081526008602052604090205461045c5760405162461bcd60e51b81526004016104539061126a565b60405180910390fd5b61046461056c565b50336000818152600860205260408082208054929055600554905163a9059cbb60e01b815260048101939093526024830182905290916001600160a01b039091169063a9059cbb906044015b6020604051808303816000875af11580156104cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f391906112ad565b5060405181815233907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75906020015b60405180910390a250565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103f990829086906105679087906112e5565b610b41565b336000908152600860205260408120546105c85760405162461bcd60e51b815260206004820152601c60248201527f596f7520686176656e2774207374616b656420616e797468696e672e000000006044820152606401610453565b60006105d3336109fb565b336000818152600a602052604090204290559091506105f29082610ec6565b60405181815233907fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba9060200160405180910390a2919050565b336000908152600860205260409020546106585760405162461bcd60e51b81526004016104539061126a565b336000818152600860205260408082208054929055600554905163a9059cbb60e01b815260048101939093526024830182905290916001600160a01b039091169063a9059cbb906044016104b0565b6106af61056c565b50683635c9adc5dea000008110156107095760405162461bcd60e51b815260206004820152601f60248201527f4d75737420656174206174206c65617374203130303020636f6f6b6965732e006044820152606401610453565b336000908152602081905260409020548111156107685760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420656e6f75676820636f6f6b69657320696e2062616c616e63652e00006044820152606401610453565b600061077d683635c9adc5dea0000083611313565b90506107923361078d8385611327565b610fa5565b683635c9adc5dea000006107a68284611327565b6107b0919061133e565b33600090815260096020526040812080549091906107cf9084906112e5565b909155503390507f323082f42560de16c285b305bed7b898b58bac4dedddcad2b802992135dc7ed56108018385611327565b60405190815260200160405180910390a25050565b60606004805461036890611230565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108aa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610453565b61041c8286868403610b41565b600081116109075760405162461bcd60e51b815260206004820152601e60248201527f4d757374207374616b65206d6f7265207468616e203020746f6b656e732e00006044820152606401610453565b336000908152600860205260409020541561092457610924610427565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f91906112ad565b50336000818152600860209081526040808320859055600a82529182902042905590518381527f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9101610522565b6000336103f9818585610cf8565b6001600160a01b0381166000908152600a60205260408120548190610e1090610a249042611327565b610a30906103e8611352565b610a3a919061133e565b6001600160a01b03841660009081526009602052604081205491925090610a63906103e86112e5565b6001600160a01b038516600090815260086020526040812054919250906103e8908390610a91908690611352565b610a9b9190611352565b610aa5919061133e565b95945050505050565b33600090815260208190526040902054683635c9adc5dea0000090610ad2336109fb565b610adc91906112e5565b11610b295760405162461bcd60e51b815260206004820181905260248201527f4d75737420656174206d6f7265207468616e203130303020636f6f6b6965732e6044820152606401610453565b6000610b3361056c565b9050610b3e816106a7565b50565b6001600160a01b038316610ba35760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610453565b6001600160a01b038216610c045760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610453565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610cf25781811015610ce55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610453565b610cf28484848403610b41565b50505050565b6001600160a01b038316610d5c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610453565b6001600160a01b038216610dbe5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610453565b6001600160a01b03831660009081526020819052604090205481811015610e365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610453565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610e6d9084906112e5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eb991815260200190565b60405180910390a3610cf2565b6001600160a01b038216610f1c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610453565b8060026000828254610f2e91906112e5565b90915550506001600160a01b03821660009081526020819052604081208054839290610f5b9084906112e5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166110055760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610453565b6001600160a01b038216600090815260208190526040902054818110156110795760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610453565b6001600160a01b03831660009081526020819052604081208383039055600280548492906110a8908490611327565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c59565b600060208083528351808285015260005b81811015611118578581018301518582016040015282016110fc565b8181111561112a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461115757600080fd5b919050565b6000806040838503121561116f57600080fd5b61117883611140565b946020939093013593505050565b60008060006060848603121561119b57600080fd5b6111a484611140565b92506111b260208501611140565b9150604084013590509250925092565b6000602082840312156111d457600080fd5b6111dd82611140565b9392505050565b6000602082840312156111f657600080fd5b5035919050565b6000806040838503121561121057600080fd5b61121983611140565b915061122760208401611140565b90509250929050565b600181811c9082168061124457607f821691505b60208210810361126457634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526023908201527f596f75206e65656420746f207374616b65206265666f726520756e7374616b6960408201526237339760e91b606082015260800190565b6000602082840312156112bf57600080fd5b815180151581146111dd57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156112f8576112f86112cf565b500190565b634e487b7160e01b600052601260045260246000fd5b600082611322576113226112fd565b500690565b600082821015611339576113396112cf565b500390565b60008261134d5761134d6112fd565b500490565b600081600019048311821515161561136c5761136c6112cf565b50029056fea26469706673582212200038816443577653952ae934164a59c54a977ebe0bba838ec74f7150fc71e43064736f6c634300080e0033",
  "bytecodeSha1": "d7465ceb8a0fa8be6c6a5263dda8dc94b568988b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "CookieCapital",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._approve": {
          "71": [
            10254,
            10273,
            true
          ],
          "72": [
            10332,
            10353,
            true
          ]
        },
        "ERC20._burn": {
          "79": [
            9207,
            9228,
            true
          ],
          "80": [
            9398,
            9422,
            true
          ]
        },
        "ERC20._mint": {
          "78": [
            8498,
            8519,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "73": [
            10966,
            11003,
            false
          ],
          "74": [
            11027,
            11053,
            true
          ]
        },
        "ERC20._transfer": {
          "75": [
            7614,
            7632,
            true
          ],
          "76": [
            7692,
            7708,
            true
          ],
          "77": [
            7863,
            7884,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "70": [
            6815,
            6850,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "CookieCapital.eat": {
          "65": [
            2564,
            2589,
            true
          ],
          "66": [
            2643,
            2674,
            true
          ]
        },
        "CookieCapital.harvestAndEat": {
          "69": [
            3001,
            3072,
            true
          ]
        },
        "CookieCapital.stake": {
          "67": [
            850,
            860,
            true
          ],
          "68": [
            909,
            932,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "ERC20._approve": {
          "43": [
            10246,
            10314
          ],
          "44": [
            10324,
            10392
          ],
          "45": [
            10403,
            10439
          ],
          "46": [
            10449,
            10486
          ]
        },
        "ERC20._burn": {
          "60": [
            9199,
            9266
          ],
          "61": [
            9390,
            9461
          ],
          "62": [
            9495,
            9539
          ],
          "63": [
            9559,
            9581
          ],
          "64": [
            9592,
            9634
          ]
        },
        "ERC20._mint": {
          "56": [
            8490,
            8555
          ],
          "57": [
            8626,
            8648
          ],
          "58": [
            8658,
            8686
          ],
          "59": [
            8696,
            8738
          ]
        },
        "ERC20._spendAllowance": {
          "47": [
            11019,
            11087
          ],
          "48": [
            11129,
            11180
          ]
        },
        "ERC20._transfer": {
          "49": [
            7606,
            7674
          ],
          "50": [
            7684,
            7748
          ],
          "51": [
            7855,
            7927
          ],
          "52": [
            7961,
            7999
          ],
          "53": [
            8019,
            8042
          ],
          "54": [
            8053,
            8084
          ],
          "55": [
            8095,
            8132
          ]
        },
        "ERC20.allowance": {
          "3": [
            4084,
            4118
          ]
        },
        "ERC20.approve": {
          "6": [
            4570,
            4602
          ],
          "7": [
            4612,
            4623
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3501,
            3526
          ]
        },
        "ERC20.decimals": {
          "1": [
            3168,
            3177
          ]
        },
        "ERC20.decreaseAllowance": {
          "32": [
            6807,
            6892
          ],
          "33": [
            6926,
            6986
          ]
        },
        "ERC20.increaseAllowance": {
          "16": [
            6015,
            6081
          ]
        },
        "ERC20.name": {
          "4": [
            2235,
            2247
          ]
        },
        "ERC20.symbol": {
          "31": [
            2448,
            2462
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3324,
            3343
          ]
        },
        "ERC20.transfer": {
          "40": [
            3862,
            3890
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            5375,
            5413
          ],
          "9": [
            5423,
            5450
          ],
          "10": [
            5460,
            5471
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "Context._msgSender": {
          "5": [
            712,
            729
          ]
        }
      },
      "4": {
        "CookieCapital.eat": {
          "25": [
            2537,
            2546
          ],
          "26": [
            2556,
            2625
          ],
          "27": [
            2635,
            2709
          ],
          "28": [
            2773,
            2810
          ],
          "29": [
            2820,
            2886
          ],
          "30": [
            2896,
            2938
          ]
        },
        "CookieCapital.emergencyUnstake": {
          "22": [
            1537,
            1608
          ],
          "23": [
            1664,
            1687
          ],
          "24": [
            1697,
            1738
          ]
        },
        "CookieCapital.harvest": {
          "17": [
            2205,
            2269
          ],
          "18": [
            2334,
            2375
          ],
          "19": [
            2385,
            2411
          ],
          "20": [
            2421,
            2454
          ],
          "21": [
            2464,
            2478
          ]
        },
        "CookieCapital.harvestAndEat": {
          "41": [
            2993,
            3109
          ],
          "42": [
            3158,
            3172
          ]
        },
        "CookieCapital.stake": {
          "34": [
            842,
            895
          ],
          "35": [
            948,
            957
          ],
          "36": [
            977,
            1037
          ],
          "37": [
            1047,
            1075
          ],
          "38": [
            1085,
            1126
          ],
          "39": [
            1136,
            1167
          ]
        },
        "CookieCapital.unstake": {
          "11": [
            1216,
            1287
          ],
          "12": [
            1297,
            1306
          ],
          "13": [
            1362,
            1385
          ],
          "14": [
            1395,
            1436
          ],
          "15": [
            1446,
            1479
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "83:3098:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:5;;1211:22;1193:41;;1181:2;1166:18;4433:197:0;1053:187:5;3244:106:0;3331:12;;3244:106;;;1391:25:5;;;1379:2;1364:18;3244:106:0;1245:177:5;5192:286:0;;;;;;:::i;:::-;;:::i;1180:306:4:-;;;:::i;:::-;;3093:91:0;;;3175:2;1902:36:5;;1890:2;1875:18;3093:91:0;1760:184:5;5873:236:0;;;;;;:::i;:::-;;:::i;2137:348:4:-;;;:::i;154:34::-;;;;;-1:-1:-1;;;;;154:34:4;;;;;;-1:-1:-1;;;;;2113:32:5;;;2095:51;;2083:2;2068:18;154:34:4;1949:203:5;283:48:4;;;;;;:::i;:::-;;;;;;;;;;;;;;3408:125:0;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:0;3482:7;3508:18;;;;;;;;;;;;3408:125;1492:296:4;;;:::i;2491:454::-;;;;;;:::i;:::-;;:::i;337:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;2367:102:0;;;:::i;6596:429::-;;;;;;:::i;:::-;;:::i;794:380:4:-;;;;;;:::i;:::-;;:::i;3729:189:0:-;;;;;;:::i;:::-;;:::i;1794:337:4:-;;;;;;:::i;:::-;;:::i;2951:228::-;;;:::i;3976:149:0:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:0;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;194:33:4;;;;;;234:43;;;;;;:::i;:::-;;;;;;;;;;;;;;2156:98:0;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:3;4570:32:0;719:10:3;4586:7:0;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:0;;4433:197;-1:-1:-1;;;4433:197:0:o;5192:286::-;5319:4;719:10:3;5375:38:0;5391:4;719:10:3;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;1180:306:4:-;1232:10;1246:1;1224:19;;;:7;:19;;;;;;1216:71;;;;-1:-1:-1;;;1216:71:4;;;;;;;:::i;:::-;;;;;;;;;1297:9;:7;:9::i;:::-;-1:-1:-1;1341:10:4;1316:14;1333:19;;;:7;:19;;;;;;;;1362:23;;;1395:12;;:41;;-1:-1:-1;;;1395:41:4;;;;;3761:51:5;;;;3828:18;;;3821:34;;;1333:19:4;;-1:-1:-1;;;;;1395:12:4;;;;:21;;3734:18:5;;1395:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1451:28:4;;1391:25:5;;;1460:10:4;;1451:28;;1379:2:5;1364:18;1451:28:4;;;;;;;;1206:280;1180:306::o;5873:236:0:-;719:10:3;5961:4:0;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:0;;;;;;;;;;5961:4;;719:10:3;6015:66:0;;719:10:3;;6040:27:0;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;2137:348:4:-;2221:10;2172:21;2213:19;;;:7;:19;;;;;;2205:64;;;;-1:-1:-1;;;2205:64:4;;4615:2:5;2205:64:4;;;4597:21:5;4654:2;4634:18;;;4627:30;4693;4673:18;;;4666:58;4741:18;;2205:64:4;4413:352:5;2205:64:4;2279:15;2297:27;2313:10;2297:15;:27::i;:::-;2346:10;2334:23;;;;:11;:23;;;;;2360:15;2334:41;;2279:45;;-1:-1:-1;2385:26:4;;2279:45;2385:5;:26::i;:::-;2426:28;;1391:25:5;;;2434:10:4;;2426:28;;1379:2:5;1364:18;2426:28:4;;;;;;;2471:7;2137:348;-1:-1:-1;2137:348:4:o;1492:296::-;1553:10;1567:1;1545:19;;;:7;:19;;;;;;1537:71;;;;-1:-1:-1;;;1537:71:4;;;;;;;:::i;:::-;1643:10;1618:14;1635:19;;;:7;:19;;;;;;;;1664:23;;;1697:12;;:41;;-1:-1:-1;;;1697:41:4;;;;;3761:51:5;;;;3828:18;;;3821:34;;;1635:19:4;;-1:-1:-1;;;;;1697:12:4;;;;:21;;3734:18:5;;1697:41:4;3587:274:5;2491:454:4;2537:9;:7;:9::i;:::-;;2575:13;2564:6;:25;;2556:69;;;;-1:-1:-1;;;2556:69:4;;4972:2:5;2556:69:4;;;4954:21:5;5011:2;4991:18;;;4984:30;5050:33;5030:18;;;5023:61;5101:18;;2556:69:4;4770:355:5;2556:69:4;2653:10;3482:7:0;3508:18;;;;;;;;;;;2668:6:4;-1:-1:-1;2643:31:4;2635:74;;;;-1:-1:-1;;;2635:74:4;;5332:2:5;2635:74:4;;;5314:21:5;5371:2;5351:18;;;5344:30;5410:32;5390:18;;;5383:60;5460:18;;2635:74:4;5130:354:5;2635:74:4;2719:17;2739:24;2749:13;2739:6;:24;:::i;:::-;2719:44;-1:-1:-1;2773:37:4;2779:10;2791:18;2719:44;2791:6;:18;:::i;:::-;2773:5;:37::i;:::-;2872:13;2849:18;2858:9;2849:6;:18;:::i;:::-;2848:38;;;;:::i;:::-;2833:10;2820:24;;;;:12;:24;;;;;:66;;:24;;;:66;;;;;:::i;:::-;;;;-1:-1:-1;2905:10:4;;-1:-1:-1;2901:37:4;2918:18;2927:9;2918:6;:18;:::i;:::-;2901:37;;1391:25:5;;;1379:2;1364:18;2901:37:4;;;;;;;2527:418;2491:454;:::o;2367:102:0:-;2423:13;2455:7;2448:14;;;;;:::i;6596:429::-;719:10:3;6689:4:0;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:0;;;;;;;;;;6689:4;;719:10:3;6815:35:0;;;;6807:85;;;;-1:-1:-1;;;6807:85:0;;6195:2:5;6807:85:0;;;6177:21:5;6234:2;6214:18;;;6207:30;6273:34;6253:18;;;6246:62;-1:-1:-1;;;6324:18:5;;;6317:35;6369:19;;6807:85:0;5993:401:5;6807:85:0;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;794:380:4:-;859:1;850:6;:10;842:53;;;;-1:-1:-1;;;842:53:4;;6601:2:5;842:53:4;;;6583:21:5;6640:2;6620:18;;;6613:30;6679:32;6659:18;;;6652:60;6729:18;;842:53:4;6399:354:5;842:53:4;917:10;931:1;909:19;;;:7;:19;;;;;;:23;905:63;;948:9;:7;:9::i;:::-;977:12;;:60;;-1:-1:-1;;;977:60:4;;1003:10;977:60;;;6998:34:5;1023:4:4;7048:18:5;;;7041:43;7100:18;;;7093:34;;;-1:-1:-1;;;;;977:12:4;;;;:25;;6933:18:5;;977:60:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1055:10:4;1047:19;;;;:7;:19;;;;;;;;:28;;;1085:11;:23;;;;;;1111:15;1085:41;;1141:26;;1391:25:5;;;1141:26:4;;1364:18:5;1141:26:4;1245:177:5;3729:189:0;3808:4;719:10:3;3862:28:0;719:10:3;3879:2:0;3883:6;3862:9;:28::i;1794:337:4:-;-1:-1:-1;;;;;1921:17:4;;1854:14;1921:17;;;:11;:17;;;;;;1854:14;;1950:4;;1903:35;;:15;:35;:::i;:::-;1902:44;;1942:4;1902:44;:::i;:::-;1901:53;;;;:::i;:::-;-1:-1:-1;;;;;1999:18:4;;1964:24;1999:18;;;:12;:18;;;;;;1880:74;;-1:-1:-1;1964:24:4;1992:25;;:4;:25;:::i;:::-;-1:-1:-1;;;;;2047:13:4;;2028:15;2047:13;;;:7;:13;;;;;;1964:54;;-1:-1:-1;2028:15:4;2096:4;;1964:54;;2047:26;;2063:10;;2047:26;:::i;:::-;:45;;;;:::i;:::-;2046:54;;;;:::i;:::-;2028:72;1794:337;-1:-1:-1;;;;;1794:337:4:o;2951:228::-;3042:10;3482:7:0;3508:18;;;;;;;;;;;3058:13:4;;3002:27;3018:10;3002:15;:27::i;:::-;:51;;;;:::i;:::-;3001:71;2993:116;;;;-1:-1:-1;;;2993:116:4;;7513:2:5;2993:116:4;;;7495:21:5;;;7532:18;;;7525:30;7591:34;7571:18;;;7564:62;7643:18;;2993:116:4;7311:356:5;2993:116:4;3119:17;3139:9;:7;:9::i;:::-;3119:29;;3158:14;3162:9;3158:3;:14::i;:::-;2983:196;2951:228::o;10123:370:0:-;-1:-1:-1;;;;;10254:19:0;;10246:68;;;;-1:-1:-1;;;10246:68:0;;7874:2:5;10246:68:0;;;7856:21:5;7913:2;7893:18;;;7886:30;7952:34;7932:18;;;7925:62;-1:-1:-1;;;8003:18:5;;;7996:34;8047:19;;10246:68:0;7672:400:5;10246:68:0;-1:-1:-1;;;;;10332:21:0;;10324:68;;;;-1:-1:-1;;;10324:68:0;;8279:2:5;10324:68:0;;;8261:21:5;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:5;;;8401:32;8450:19;;10324:68:0;8077:398:5;10324:68:0;-1:-1:-1;;;;;10403:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1391:25:5;;;10454:32:0;;1364:18:5;10454:32:0;;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:0;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:0;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:0;;8682:2:5;11019:68:0;;;8664:21:5;8721:2;8701:18;;;8694:30;8760:31;8740:18;;;8733:59;8809:18;;11019:68:0;8480:353:5;11019:68:0;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:0;;7606:68;;;;-1:-1:-1;;;7606:68:0;;9040:2:5;7606:68:0;;;9022:21:5;9079:2;9059:18;;;9052:30;9118:34;9098:18;;;9091:62;-1:-1:-1;;;9169:18:5;;;9162:35;9214:19;;7606:68:0;8838:401:5;7606:68:0;-1:-1:-1;;;;;7692:16:0;;7684:64;;;;-1:-1:-1;;;7684:64:0;;9446:2:5;7684:64:0;;;9428:21:5;9485:2;9465:18;;;9458:30;9524:34;9504:18;;;9497:62;-1:-1:-1;;;9575:18:5;;;9568:33;9618:19;;7684:64:0;9244:399:5;7684:64:0;-1:-1:-1;;;;;7830:15:0;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:0;;9850:2:5;7855:72:0;;;9832:21:5;9889:2;9869:18;;;9862:30;9928:34;9908:18;;;9901:62;-1:-1:-1;;;9979:18:5;;;9972:36;10025:19;;7855:72:0;9648:402:5;7855:72:0;-1:-1:-1;;;;;7961:15:0;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:0;8067:4;-1:-1:-1;;;;;8058:26:0;;8077:6;8058:26;;;;1391:25:5;;1379:2;1364:18;;1245:177;8058:26:0;;;;;;;;8095:37;9124:576;8415:389;-1:-1:-1;;;;;8498:21:0;;8490:65;;;;-1:-1:-1;;;8490:65:0;;10257:2:5;8490:65:0;;;10239:21:5;10296:2;10276:18;;;10269:30;10335:33;10315:18;;;10308:61;10386:18;;8490:65:0;10055:355:5;8490:65:0;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:0;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:0;;1391:25:5;;;-1:-1:-1;;;;;8701:37:0;;;8718:1;;8701:37;;1379:2:5;1364:18;8701:37:0;;;;;;;8415:389;;:::o;9124:576::-;-1:-1:-1;;;;;9207:21:0;;9199:67;;;;-1:-1:-1;;;9199:67:0;;10617:2:5;9199:67:0;;;10599:21:5;10656:2;10636:18;;;10629:30;10695:34;10675:18;;;10668:62;-1:-1:-1;;;10746:18:5;;;10739:31;10787:19;;9199:67:0;10415:397:5;9199:67:0;-1:-1:-1;;;;;9362:18:0;;9337:22;9362:18;;;;;;;;;;;9398:24;;;;9390:71;;;;-1:-1:-1;;;9390:71:0;;11019:2:5;9390:71:0;;;11001:21:5;11058:2;11038:18;;;11031:30;11097:34;11077:18;;;11070:62;-1:-1:-1;;;11148:18:5;;;11141:32;11190:19;;9390:71:0;10817:398:5;9390:71:0;-1:-1:-1;;;;;9495:18:0;;:9;:18;;;;;;;;;;9516:23;;;9495:44;;9559:12;:22;;9533:6;;9495:9;9559:22;;9533:6;;9559:22;:::i;:::-;;;;-1:-1:-1;;9597:37:0;;1391:25:5;;;9623:1:0;;-1:-1:-1;;;;;9597:37:0;;;;;1379:2:5;1364:18;9597:37:0;1245:177:5;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:5;574:15;-1:-1:-1;;570:29:5;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:5:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:5;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:5:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;2157:186::-;2216:6;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;2157:186;-1:-1:-1;;;2157:186:5:o;2348:180::-;2407:6;2460:2;2448:9;2439:7;2435:23;2431:32;2428:52;;;2476:1;2473;2466:12;2428:52;-1:-1:-1;2499:23:5;;2348:180;-1:-1:-1;2348:180:5:o;2533:260::-;2601:6;2609;2662:2;2650:9;2641:7;2637:23;2633:32;2630:52;;;2678:1;2675;2668:12;2630:52;2701:29;2720:9;2701:29;:::i;:::-;2691:39;;2749:38;2783:2;2772:9;2768:18;2749:38;:::i;:::-;2739:48;;2533:260;;;;;:::o;2798:380::-;2877:1;2873:12;;;;2920;;;2941:61;;2995:4;2987:6;2983:17;2973:27;;2941:61;3048:2;3040:6;3037:14;3017:18;3014:38;3011:161;;3094:10;3089:3;3085:20;3082:1;3075:31;3129:4;3126:1;3119:15;3157:4;3154:1;3147:15;3011:161;;2798:380;;;:::o;3183:399::-;3385:2;3367:21;;;3424:2;3404:18;;;3397:30;3463:34;3458:2;3443:18;;3436:62;-1:-1:-1;;;3529:2:5;3514:18;;3507:33;3572:3;3557:19;;3183:399::o;3866:277::-;3933:6;3986:2;3974:9;3965:7;3961:23;3957:32;3954:52;;;4002:1;3999;3992:12;3954:52;4034:9;4028:16;4087:5;4080:13;4073:21;4066:5;4063:32;4053:60;;4109:1;4106;4099:12;4148:127;4209:10;4204:3;4200:20;4197:1;4190:31;4240:4;4237:1;4230:15;4264:4;4261:1;4254:15;4280:128;4320:3;4351:1;4347:6;4344:1;4341:13;4338:39;;;4357:18;;:::i;:::-;-1:-1:-1;4393:9:5;;4280:128::o;5489:127::-;5550:10;5545:3;5541:20;5538:1;5531:31;5581:4;5578:1;5571:15;5605:4;5602:1;5595:15;5621:112;5653:1;5679;5669:35;;5684:18;;:::i;:::-;-1:-1:-1;5718:9:5;;5621:112::o;5738:125::-;5778:4;5806:1;5803;5800:8;5797:34;;;5811:18;;:::i;:::-;-1:-1:-1;5848:9:5;;5738:125::o;5868:120::-;5908:1;5934;5924:35;;5939:18;;:::i;:::-;-1:-1:-1;5973:9:5;;5868:120::o;7138:168::-;7178:7;7244:1;7240;7236:6;7232:14;7229:1;7226:21;7221:1;7214:9;7207:17;7203:45;7200:71;;;7251:18;;:::i;:::-;-1:-1:-1;7291:9:5;;7138:168::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    83,
    3181
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7589CF2F GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xB1C17506 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xC5D01D0C EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xF5111518 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xFFD45A64 EQ PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7589CF2F EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x85E0EBAF EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x8EEBFAE3 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x5EC8A5FF EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x5F316A05 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x1B8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1186 JUMP JUMPDEST PUSH2 0x403 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x427 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH2 0x197 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1FF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x167 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x62C JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x289 CALLDATASIZE PUSH1 0x4 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x816 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x11E4 JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x115C JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x11C2 JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0xAAE JUMP JUMPDEST PUSH2 0x197 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x197 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x347 CALLDATASIZE PUSH1 0x4 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x1230 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x394 SWAP1 PUSH2 0x1230 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3F9 DUP2 DUP6 DUP6 PUSH2 0xB41 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x411 DUP6 DUP3 DUP6 PUSH2 0xC66 JUMP JUMPDEST PUSH2 0x41C DUP6 DUP6 DUP6 PUSH2 0xCF8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x464 PUSH2 0x56C JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F3 SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x3F9 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x567 SWAP1 DUP8 SWAP1 PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0xB41 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520686176656E2774207374616B656420616E797468696E672E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D3 CALLER PUSH2 0x9FB JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0x5F2 SWAP1 DUP3 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x453 SWAP1 PUSH2 0x126A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH2 0x4B0 JUMP JUMPDEST PUSH2 0x6AF PUSH2 0x56C JUMP JUMPDEST POP PUSH9 0x3635C9ADC5DEA00000 DUP2 LT ISZERO PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420656174206174206C65617374203130303020636F6F6B6965732E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820636F6F6B69657320696E2062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D PUSH9 0x3635C9ADC5DEA00000 DUP4 PUSH2 0x1313 JUMP JUMPDEST SWAP1 POP PUSH2 0x792 CALLER PUSH2 0x78D DUP4 DUP6 PUSH2 0x1327 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 PUSH2 0x7A6 DUP3 DUP5 PUSH2 0x1327 JUMP JUMPDEST PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0x133E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x7CF SWAP1 DUP5 SWAP1 PUSH2 0x12E5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP CALLER SWAP1 POP PUSH32 0x323082F42560DE16C285B305BED7B898B58BAC4DEDDDCAD2B802992135DC7ED5 PUSH2 0x801 DUP4 DUP6 PUSH2 0x1327 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x368 SWAP1 PUSH2 0x1230 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x41C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x907 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374207374616B65206D6F7265207468616E203020746F6B656E732E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x924 JUMPI PUSH2 0x924 PUSH2 0x427 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x99F SWAP2 SWAP1 PUSH2 0x12AD JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0xA DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 ADD PUSH2 0x522 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3F9 DUP2 DUP6 DUP6 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0xE10 SWAP1 PUSH2 0xA24 SWAP1 TIMESTAMP PUSH2 0x1327 JUMP JUMPDEST PUSH2 0xA30 SWAP1 PUSH2 0x3E8 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0xA3A SWAP2 SWAP1 PUSH2 0x133E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xA63 SWAP1 PUSH2 0x3E8 PUSH2 0x12E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x3E8 SWAP1 DUP4 SWAP1 PUSH2 0xA91 SWAP1 DUP7 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0xA9B SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x133E JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH9 0x3635C9ADC5DEA00000 SWAP1 PUSH2 0xAD2 CALLER PUSH2 0x9FB JUMP JUMPDEST PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x12E5 JUMP JUMPDEST GT PUSH2 0xB29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420656174206D6F7265207468616E203130303020636F6F6B6965732E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB33 PUSH2 0x56C JUMP JUMPDEST SWAP1 POP PUSH2 0xB3E DUP2 PUSH2 0x6A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xCF2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0xCF2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xB41 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xE36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xE6D SWAP1 DUP5 SWAP1 PUSH2 0x12E5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xEB9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF2E SWAP2 SWAP1 PUSH2 0x12E5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xF5B SWAP1 DUP5 SWAP1 PUSH2 0x12E5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1005 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x10A8 SWAP1 DUP5 SWAP1 PUSH2 0x1327 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1118 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x10FC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1178 DUP4 PUSH2 0x1140 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x119B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11A4 DUP5 PUSH2 0x1140 JUMP JUMPDEST SWAP3 POP PUSH2 0x11B2 PUSH1 0x20 DUP6 ADD PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11DD DUP3 PUSH2 0x1140 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1219 DUP4 PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP PUSH2 0x1227 PUSH1 0x20 DUP5 ADD PUSH2 0x1140 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1264 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F207374616B65206265666F726520756E7374616B69 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x373397 PUSH1 0xE9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x12F8 JUMPI PUSH2 0x12F8 PUSH2 0x12CF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1322 JUMPI PUSH2 0x1322 PUSH2 0x12FD JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1339 JUMPI PUSH2 0x1339 PUSH2 0x12CF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x134D JUMPI PUSH2 0x134D PUSH2 0x12FD JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x136C JUMPI PUSH2 0x136C PUSH2 0x12CF JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP CODESIZE DUP2 PUSH5 0x4357765395 0x2A 0xE9 CALLVALUE AND 0x4A MSIZE 0xC5 0x4A SWAP8 PUSH31 0xBE0BBA838EC74F7150FC71E43064736F6C634300080E003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        83,
        3181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14D"
    },
    "25": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x7589CF2F"
    },
    "38": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC3"
    },
    "42": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "49": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "60": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C9"
    },
    "64": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB1C17506"
    },
    "71": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DC"
    },
    "75": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC5D01D0C"
    },
    "82": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2EF"
    },
    "86": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F7"
    },
    "97": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF5111518"
    },
    "104": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x330"
    },
    "108": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "110": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFD45A64"
    },
    "115": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "116": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x339"
    },
    "119": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "120": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "123": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "REVERT",
      "path": "4"
    },
    "124": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x7589CF2F"
    },
    "131": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x260"
    },
    "135": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x85E0EBAF"
    },
    "142": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x268"
    },
    "146": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8EEBFAE3"
    },
    "153": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27B"
    },
    "157": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95D89B41"
    },
    "164": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29B"
    },
    "168": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA457C2D7"
    },
    "175": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "176": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A3"
    },
    "179": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "180": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA694FC3A"
    },
    "186": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "187": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B6"
    },
    "190": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "191": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "193": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "194": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "REVERT",
      "path": "4"
    },
    "195": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "202": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "GT",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "213": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C2"
    },
    "217": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "219": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x39509351"
    },
    "224": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "225": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D1"
    },
    "228": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "229": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "230": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4641257D"
    },
    "235": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "236": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E4"
    },
    "239": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "240": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "241": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5EC8A5FF"
    },
    "246": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "247": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EC"
    },
    "250": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "251": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "252": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5F316A05"
    },
    "257": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "258": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x217"
    },
    "261": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "262": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "263": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "268": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "269": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x237"
    },
    "272": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "273": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "275": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "276": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "REVERT",
      "path": "4"
    },
    "277": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "278": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "279": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6FDDE03"
    },
    "284": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "285": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x152"
    },
    "288": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "289": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "290": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "295": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "296": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x170"
    },
    "299": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "300": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "301": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x18160DDD"
    },
    "306": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "307": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x193"
    },
    "310": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "311": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "312": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "317": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "318": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A5"
    },
    "321": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "322": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "323": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x2DEF6620"
    },
    "328": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "EQ",
      "path": "4"
    },
    "329": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B8"
    },
    "332": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "333": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "334": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "336": {
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "DUP1",
      "path": "4"
    },
    "337": {
      "first_revert": true,
      "fn": null,
      "offset": [
        83,
        3181
      ],
      "op": "REVERT",
      "path": "4"
    },
    "338": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "339": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "342": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x359"
    },
    "345": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "346": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "347": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "349": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "350": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167"
    },
    "353": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "354": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "355": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10EB"
    },
    "358": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "359": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "360": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "362": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "363": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "364": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "365": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SUB",
      "path": "0"
    },
    "366": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "367": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "RETURN",
      "path": "0"
    },
    "368": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "369": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "372": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E"
    },
    "375": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "376": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "378": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115C"
    },
    "381": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "0"
    },
    "382": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "383": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EB"
    },
    "386": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "0"
    },
    "387": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "388": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "390": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "391": {
      "op": "SWAP1"
    },
    "392": {
      "op": "ISZERO"
    },
    "393": {
      "op": "ISZERO"
    },
    "394": {
      "op": "DUP2"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167"
    },
    "402": {
      "op": "JUMP"
    },
    "403": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "404": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x2"
    },
    "406": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "407": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "408": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "410": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "411": {
      "op": "SWAP1"
    },
    "412": {
      "op": "DUP2"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "416": {
      "op": "ADD"
    },
    "417": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167"
    },
    "420": {
      "op": "JUMP"
    },
    "421": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "422": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "425": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "428": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "429": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "431": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1186"
    },
    "434": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "0"
    },
    "435": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x403"
    },
    "439": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "0"
    },
    "440": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1180,
        1486
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "441": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1180,
        1486
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C0"
    },
    "444": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1180,
        1486
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x427"
    },
    "447": {
      "fn": "CookieCapital.unstake",
      "jump": "i",
      "offset": [
        1180,
        1486
      ],
      "op": "JUMP",
      "path": "4"
    },
    "448": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1180,
        1486
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "449": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1180,
        1486
      ],
      "op": "STOP",
      "path": "4"
    },
    "450": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "451": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "453": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "454": {
      "fn": "ERC20.decimals",
      "offset": [
        3175,
        3177
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x12"
    },
    "456": {
      "op": "DUP2"
    },
    "457": {
      "op": "MSTORE"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "460": {
      "op": "ADD"
    },
    "461": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167"
    },
    "464": {
      "op": "JUMP"
    },
    "465": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "466": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "469": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DF"
    },
    "472": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "473": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "475": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115C"
    },
    "478": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "479": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "480": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52D"
    },
    "483": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "484": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2137,
        2485
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "485": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2137,
        2485
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x197"
    },
    "488": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2137,
        2485
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x56C"
    },
    "491": {
      "fn": "CookieCapital.harvest",
      "jump": "i",
      "offset": [
        2137,
        2485
      ],
      "op": "JUMP",
      "path": "4"
    },
    "492": {
      "offset": [
        154,
        188
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "493": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "495": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "496": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FF"
    },
    "499": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "506": {
      "op": "SHL"
    },
    "507": {
      "op": "SUB"
    },
    "508": {
      "offset": [
        154,
        188
      ],
      "op": "AND",
      "path": "4"
    },
    "509": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "DUP2",
      "path": "4"
    },
    "510": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "JUMP",
      "path": "4"
    },
    "511": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "512": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "514": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "521": {
      "op": "SHL"
    },
    "522": {
      "op": "SUB"
    },
    "523": {
      "op": "SWAP1"
    },
    "524": {
      "op": "SWAP2"
    },
    "525": {
      "op": "AND"
    },
    "526": {
      "op": "DUP2"
    },
    "527": {
      "op": "MSTORE"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "530": {
      "op": "ADD"
    },
    "531": {
      "offset": [
        154,
        188
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x167"
    },
    "534": {
      "op": "JUMP"
    },
    "535": {
      "offset": [
        283,
        331
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "536": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x197"
    },
    "539": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x225"
    },
    "542": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "543": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "545": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11C2"
    },
    "548": {
      "fn": "CookieCapital.harvest",
      "jump": "i",
      "offset": [
        283,
        331
      ],
      "op": "JUMP",
      "path": "4"
    },
    "549": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "550": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "552": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "554": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "555": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "557": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "558": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "DUP2",
      "path": "4"
    },
    "559": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "560": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "562": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "563": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "564": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "565": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "DUP2",
      "path": "4"
    },
    "566": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "JUMP",
      "path": "4"
    },
    "567": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "568": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x197"
    },
    "571": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "574": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "575": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "577": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C2"
    },
    "580": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "0"
    },
    "581": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "588": {
      "op": "SHL"
    },
    "589": {
      "op": "SUB"
    },
    "590": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "0",
      "statement": 2
    },
    "591": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "593": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "594": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "595": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "596": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "598": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "599": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "600": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "601": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "603": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "604": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "605": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "606": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "607": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "0"
    },
    "608": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1492,
        1788
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "609": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1492,
        1788
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C0"
    },
    "612": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1492,
        1788
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x62C"
    },
    "615": {
      "fn": "CookieCapital.emergencyUnstake",
      "jump": "i",
      "offset": [
        1492,
        1788
      ],
      "op": "JUMP",
      "path": "4"
    },
    "616": {
      "fn": "CookieCapital.eat",
      "offset": [
        2491,
        2945
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "617": {
      "fn": "CookieCapital.eat",
      "offset": [
        2491,
        2945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C0"
    },
    "620": {
      "fn": "CookieCapital.eat",
      "offset": [
        2491,
        2945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x276"
    },
    "623": {
      "fn": "CookieCapital.eat",
      "offset": [
        2491,
        2945
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "624": {
      "fn": "CookieCapital.eat",
      "offset": [
        2491,
        2945
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "626": {
      "fn": "CookieCapital.eat",
      "offset": [
        2491,
        2945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11E4"
    },
    "629": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2491,
        2945
      ],
      "op": "JUMP",
      "path": "4"
    },
    "630": {
      "fn": "CookieCapital.eat",
      "offset": [
        2491,
        2945
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "631": {
      "fn": "CookieCapital.eat",
      "offset": [
        2491,
        2945
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A7"
    },
    "634": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2491,
        2945
      ],
      "op": "JUMP",
      "path": "4"
    },
    "635": {
      "offset": [
        337,
        384
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "636": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x197"
    },
    "639": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x289"
    },
    "642": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "643": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "645": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11C2"
    },
    "648": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        337,
        384
      ],
      "op": "JUMP",
      "path": "4"
    },
    "649": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "650": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "652": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "654": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "655": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "657": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "658": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "DUP2",
      "path": "4"
    },
    "659": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "660": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "662": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "663": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "664": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "665": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "DUP2",
      "path": "4"
    },
    "666": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "JUMP",
      "path": "4"
    },
    "667": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "668": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "671": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x816"
    },
    "674": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMP",
      "path": "0"
    },
    "675": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "676": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "679": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B1"
    },
    "682": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "683": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "685": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115C"
    },
    "688": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "689": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "690": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x825"
    },
    "693": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "694": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "695": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C0"
    },
    "698": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C4"
    },
    "701": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "702": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "704": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11E4"
    },
    "707": {
      "fn": "CookieCapital.stake",
      "jump": "i",
      "offset": [
        794,
        1174
      ],
      "op": "JUMP",
      "path": "4"
    },
    "708": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "709": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8B7"
    },
    "712": {
      "fn": "CookieCapital.stake",
      "jump": "i",
      "offset": [
        794,
        1174
      ],
      "op": "JUMP",
      "path": "4"
    },
    "713": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "714": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x183"
    },
    "717": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D7"
    },
    "720": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "721": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "723": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115C"
    },
    "726": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "727": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "728": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9ED"
    },
    "731": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "732": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1794,
        2131
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "733": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1794,
        2131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x197"
    },
    "736": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1794,
        2131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2EA"
    },
    "739": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1794,
        2131
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "740": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1794,
        2131
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "742": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1794,
        2131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11C2"
    },
    "745": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1794,
        2131
      ],
      "op": "JUMP",
      "path": "4"
    },
    "746": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1794,
        2131
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "747": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1794,
        2131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9FB"
    },
    "750": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1794,
        2131
      ],
      "op": "JUMP",
      "path": "4"
    },
    "751": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2951,
        3179
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "752": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2951,
        3179
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C0"
    },
    "755": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2951,
        3179
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAAE"
    },
    "758": {
      "fn": "CookieCapital.harvestAndEat",
      "jump": "i",
      "offset": [
        2951,
        3179
      ],
      "op": "JUMP",
      "path": "4"
    },
    "759": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "760": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x197"
    },
    "763": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x305"
    },
    "766": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "767": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "769": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11FD"
    },
    "772": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "0"
    },
    "773": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "780": {
      "op": "SHL"
    },
    "781": {
      "op": "SUB"
    },
    "782": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 3
    },
    "783": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP3",
      "path": "0"
    },
    "784": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "0"
    },
    "785": {
      "fn": "ERC20.allowance",
      "offset": [
        4065,
        4072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "787": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "788": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "789": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "790": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "792": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "794": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "795": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "796": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "797": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "799": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "0"
    },
    "800": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "0"
    },
    "801": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "802": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "803": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "804": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "805": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "0"
    },
    "806": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP3",
      "path": "0"
    },
    "807": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "808": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "809": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "810": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "811": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "812": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "813": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "814": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "815": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "0"
    },
    "816": {
      "offset": [
        194,
        227
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "817": {
      "fn": "ERC20.allowance",
      "offset": [
        194,
        227
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x197"
    },
    "820": {
      "fn": "ERC20.allowance",
      "offset": [
        194,
        227
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "822": {
      "fn": "ERC20.allowance",
      "offset": [
        194,
        227
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "823": {
      "fn": "ERC20.allowance",
      "offset": [
        194,
        227
      ],
      "op": "DUP2",
      "path": "4"
    },
    "824": {
      "fn": "ERC20.allowance",
      "offset": [
        194,
        227
      ],
      "op": "JUMP",
      "path": "4"
    },
    "825": {
      "offset": [
        234,
        277
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "826": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x197"
    },
    "829": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x347"
    },
    "832": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "833": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "835": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11C2"
    },
    "838": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        234,
        277
      ],
      "op": "JUMP",
      "path": "4"
    },
    "839": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "840": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "842": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "844": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "845": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "847": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "848": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "DUP2",
      "path": "4"
    },
    "849": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "850": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "852": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "853": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "854": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "855": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "DUP2",
      "path": "4"
    },
    "856": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "JUMP",
      "path": "4"
    },
    "857": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "858": {
      "fn": "ERC20.name",
      "offset": [
        2210,
        2223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "860": {
      "fn": "ERC20.name",
      "offset": [
        2242,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x3"
    },
    "862": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "863": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "864": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x368"
    },
    "867": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "868": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1230"
    },
    "871": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "0"
    },
    "872": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "873": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "874": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "876": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "877": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "879": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "880": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "881": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "0"
    },
    "882": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "0"
    },
    "883": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "885": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "886": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "888": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "889": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "890": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "0"
    },
    "891": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "892": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "894": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "895": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "896": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "897": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "898": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "899": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "0"
    },
    "900": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "0"
    },
    "901": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "902": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "904": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "905": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "0"
    },
    "906": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "907": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "908": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x394"
    },
    "911": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "912": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1230"
    },
    "915": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "0"
    },
    "916": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "917": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "918": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "919": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E1"
    },
    "922": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "923": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "924": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "926": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "LT",
      "path": "0"
    },
    "927": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B6"
    },
    "930": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "931": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "934": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "935": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "0"
    },
    "936": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "937": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "0"
    },
    "938": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "0"
    },
    "939": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "0"
    },
    "940": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "941": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "942": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "944": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "945": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "946": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E1"
    },
    "949": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "0"
    },
    "950": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "951": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "0"
    },
    "952": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "953": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "954": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "955": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "957": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "958": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "960": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "962": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "963": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "964": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "965": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "0"
    },
    "966": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "967": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "0"
    },
    "968": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "969": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "970": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "972": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "973": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "974": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "976": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "977": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "978": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "0"
    },
    "979": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "GT",
      "path": "0"
    },
    "980": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C4"
    },
    "983": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "984": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "0"
    },
    "985": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "986": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SUB",
      "path": "0"
    },
    "987": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "989": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "AND",
      "path": "0"
    },
    "990": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "0"
    },
    "991": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "992": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "993": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "994": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "0"
    },
    "995": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "0"
    },
    "996": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "0"
    },
    "997": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "0"
    },
    "998": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "0"
    },
    "999": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1000": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "0"
    },
    "1001": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1002": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1003": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1004": {
      "fn": "ERC20.approve",
      "offset": [
        4516,
        4520
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1006": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 5
    },
    "1007": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x3F9"
    },
    "1010": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1011": {
      "fn": "ERC20.approve",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1012": {
      "fn": "ERC20.approve",
      "offset": [
        4595,
        4601
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1013": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4578
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB41"
    },
    "1016": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1017": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "1021": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1022": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "op": "POP"
    },
    "1025": {
      "op": "POP"
    },
    "1026": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1027": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1028": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5319,
        5323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1030": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1031": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x411"
    },
    "1034": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5391,
        5395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1035": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1036": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5406,
        5412
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1037": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC66"
    },
    "1040": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1041": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1042": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 9,
      "value": "0x41C"
    },
    "1045": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5433,
        5437
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1046": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5439,
        5441
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1047": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5443,
        5449
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1048": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF8"
    },
    "1051": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1052": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1053": {
      "op": "POP"
    },
    "1054": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x1"
    },
    "1056": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1057": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1058": {
      "op": "POP"
    },
    "1059": {
      "op": "POP"
    },
    "1060": {
      "op": "POP"
    },
    "1061": {
      "op": "POP"
    },
    "1062": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1063": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1180,
        1486
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1064": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1232,
        1242
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 11
    },
    "1065": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1246,
        1247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1067": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1068": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1069": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1070": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1231
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1072": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1074": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1075": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1077": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1078": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1079": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1080": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45C"
    },
    "1083": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1084": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1086": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1087": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1093": {
      "op": "SHL"
    },
    "1094": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1095": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1096": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1098": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "ADD",
      "path": "4"
    },
    "1099": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x453"
    },
    "1102": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1103": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x126A"
    },
    "1106": {
      "fn": "CookieCapital.unstake",
      "jump": "i",
      "offset": [
        1216,
        1287
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1107": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1108": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1110": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1111": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1112": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1113": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "SUB",
      "path": "4"
    },
    "1114": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1115": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "1116": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1117": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1297,
        1306
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 12,
      "value": "0x464"
    },
    "1120": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x56C"
    },
    "1123": {
      "fn": "CookieCapital.unstake",
      "jump": "i",
      "offset": [
        1297,
        1306
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1124": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1297,
        1306
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1341,
        1351
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1127": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1316,
        1330
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1129": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1130": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1131": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1132": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1340
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1134": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1136": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1137": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1139": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1140": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1141": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1142": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1143": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1144": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1362,
        1385
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 13
    },
    "1145": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1362,
        1385
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1146": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1362,
        1385
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1147": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1407
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 14,
      "value": "0x5"
    },
    "1149": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1407
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1150": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1151": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1152": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1159": {
      "op": "SHL"
    },
    "1160": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1161": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1162": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1164": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1165": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "ADD",
      "path": "4"
    },
    "1166": {
      "op": "SWAP4"
    },
    "1167": {
      "op": "SWAP1"
    },
    "1168": {
      "op": "SWAP4"
    },
    "1169": {
      "op": "MSTORE"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1172": {
      "op": "DUP4"
    },
    "1173": {
      "op": "ADD"
    },
    "1174": {
      "op": "DUP3"
    },
    "1175": {
      "op": "SWAP1"
    },
    "1176": {
      "op": "MSTORE"
    },
    "1177": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1178": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1185": {
      "op": "SHL"
    },
    "1186": {
      "op": "SUB"
    },
    "1187": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1407
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1188": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1407
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1189": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1407
      ],
      "op": "AND",
      "path": "4"
    },
    "1190": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1407
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1191": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1416
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1196": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1416
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1199": {
      "op": "ADD"
    },
    "1200": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1201": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1203": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1205": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1206": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1207": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1208": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "SUB",
      "path": "4"
    },
    "1209": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1210": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1212": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1213": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "GAS",
      "path": "4"
    },
    "1214": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "CALL",
      "path": "4"
    },
    "1215": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1216": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1217": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1218": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4CF"
    },
    "1221": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1222": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1223": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1225": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1226": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1227": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1228": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1230": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1231": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1232": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "POP",
      "path": "4"
    },
    "1233": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "POP",
      "path": "4"
    },
    "1234": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "POP",
      "path": "4"
    },
    "1235": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "POP",
      "path": "4"
    },
    "1236": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1238": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1239": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1240": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1242": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "NOT",
      "path": "4"
    },
    "1243": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1245": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1246": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "ADD",
      "path": "4"
    },
    "1247": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "AND",
      "path": "4"
    },
    "1248": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1249": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "ADD",
      "path": "4"
    },
    "1250": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1251": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1253": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1254": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "POP",
      "path": "4"
    },
    "1255": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1256": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "ADD",
      "path": "4"
    },
    "1257": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1258": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F3"
    },
    "1261": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1262": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1263": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12AD"
    },
    "1266": {
      "fn": "CookieCapital.unstake",
      "jump": "i",
      "offset": [
        1395,
        1436
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1267": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1268": {
      "op": "POP"
    },
    "1269": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 15,
      "value": "0x40"
    },
    "1271": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1272": {
      "op": "DUP2"
    },
    "1273": {
      "op": "DUP2"
    },
    "1274": {
      "op": "MSTORE"
    },
    "1275": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1460,
        1470
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1276": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1460,
        1470
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1277": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
    },
    "1310": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1313": {
      "op": "ADD"
    },
    "1314": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1315": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1317": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1318": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1319": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1320": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "SUB",
      "path": "4"
    },
    "1321": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1322": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "LOG2",
      "path": "4"
    },
    "1323": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1206,
        1486
      ],
      "op": "POP",
      "path": "4"
    },
    "1324": {
      "fn": "CookieCapital.unstake",
      "jump": "o",
      "offset": [
        1180,
        1486
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1325": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1326": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1327": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1329": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 16
    },
    "1330": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1331": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1332": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1334": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1336": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1337": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1338": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1339": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1341": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1342": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1343": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "op": "SUB"
    },
    "1352": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1353": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "AND",
      "path": "0"
    },
    "1354": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1355": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1356": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1357": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1358": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1359": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1360": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1361": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1362": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1363": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1364": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1365": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F9"
    },
    "1368": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1369": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1370": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1371": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1372": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1373": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x567"
    },
    "1376": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1377": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1378": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1379": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E5"
    },
    "1382": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1383": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1384": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB41"
    },
    "1387": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6015,
        6081
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1388": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2137,
        2485
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1389": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2221,
        2231
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 17
    },
    "1390": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2172,
        2193
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1392": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2213,
        2232
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1393": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2213,
        2232
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1394": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2213,
        2232
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1395": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2213,
        2220
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1397": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2213,
        2232
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1399": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2213,
        2232
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1400": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2213,
        2232
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1402": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2213,
        2232
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1403": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2213,
        2232
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1404": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2213,
        2232
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1405": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2205,
        2269
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C8"
    },
    "1408": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2205,
        2269
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1409": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2205,
        2269
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1411": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2205,
        2269
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1412": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1418": {
      "op": "SHL"
    },
    "1419": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2205,
        2269
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1420": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2205,
        2269
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1423": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2205,
        2269
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1425": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2205,
        2269
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1426": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2205,
        2269
      ],
      "op": "ADD",
      "path": "4"
    },
    "1427": {
      "op": "MSTORE"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1432": {
      "op": "DUP3"
    },
    "1433": {
      "op": "ADD"
    },
    "1434": {
      "op": "MSTORE"
    },
    "1435": {
      "op": "PUSH32",
      "value": "0x596F7520686176656E2774207374616B656420616E797468696E672E00000000"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1470": {
      "op": "DUP3"
    },
    "1471": {
      "op": "ADD"
    },
    "1472": {
      "op": "MSTORE"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1475": {
      "op": "ADD"
    },
    "1476": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2205,
        2269
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x453"
    },
    "1479": {
      "op": "JUMP"
    },
    "1480": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2205,
        2269
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1481": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2279,
        2294
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1483": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2297,
        2324
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5D3"
    },
    "1486": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2313,
        2323
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1487": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2297,
        2312
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9FB"
    },
    "1490": {
      "fn": "CookieCapital.harvest",
      "jump": "i",
      "offset": [
        2297,
        2324
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1491": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2297,
        2324
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1492": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2346,
        2356
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 18
    },
    "1493": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2334,
        2357
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1495": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2334,
        2357
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1496": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2334,
        2357
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1497": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2334,
        2357
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1498": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2334,
        2345
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "1500": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2334,
        2357
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1502": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2334,
        2357
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1503": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2334,
        2357
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1505": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2334,
        2357
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1506": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2334,
        2357
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1507": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2360,
        2375
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "1508": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2334,
        2375
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1509": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2334,
        2375
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1510": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2279,
        2324
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1511": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2279,
        2324
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1512": {
      "op": "POP"
    },
    "1513": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2385,
        2411
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 19,
      "value": "0x5F2"
    },
    "1516": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2385,
        2411
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1517": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2279,
        2324
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1518": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2385,
        2390
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC6"
    },
    "1521": {
      "fn": "CookieCapital.harvest",
      "jump": "i",
      "offset": [
        2385,
        2411
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1522": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2385,
        2411
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1523": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2426,
        2454
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 20,
      "value": "0x40"
    },
    "1525": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2426,
        2454
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1526": {
      "op": "DUP2"
    },
    "1527": {
      "op": "DUP2"
    },
    "1528": {
      "op": "MSTORE"
    },
    "1529": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2434,
        2444
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1530": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2434,
        2444
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1531": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2426,
        2454
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
    },
    "1564": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2426,
        2454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1567": {
      "op": "ADD"
    },
    "1568": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2426,
        2454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1570": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2426,
        2454
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1571": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2426,
        2454
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1572": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2426,
        2454
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1573": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2426,
        2454
      ],
      "op": "SUB",
      "path": "4"
    },
    "1574": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2426,
        2454
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1575": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2426,
        2454
      ],
      "op": "LOG2",
      "path": "4"
    },
    "1576": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2471,
        2478
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 21
    },
    "1577": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2137,
        2485
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1578": {
      "op": "POP"
    },
    "1579": {
      "fn": "CookieCapital.harvest",
      "jump": "o",
      "offset": [
        2137,
        2485
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1580": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1492,
        1788
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1581": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1553,
        1563
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 22
    },
    "1582": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1567,
        1568
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1584": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1545,
        1564
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1585": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1545,
        1564
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1586": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1545,
        1564
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1587": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1545,
        1552
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1589": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1545,
        1564
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1591": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1545,
        1564
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1592": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1545,
        1564
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1594": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1545,
        1564
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1595": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1545,
        1564
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1596": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1545,
        1564
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1597": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1537,
        1608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x658"
    },
    "1600": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1537,
        1608
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1601": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1537,
        1608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1603": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1537,
        1608
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1604": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1537,
        1608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1612": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1537,
        1608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1613": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1537,
        1608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1615": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1537,
        1608
      ],
      "op": "ADD",
      "path": "4"
    },
    "1616": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1537,
        1608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x453"
    },
    "1619": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1537,
        1608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1620": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1537,
        1608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x126A"
    },
    "1623": {
      "fn": "CookieCapital.emergencyUnstake",
      "jump": "i",
      "offset": [
        1537,
        1608
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1624": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1537,
        1608
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1625": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1643,
        1653
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1626": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1618,
        1632
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1628": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1629": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1630": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1631": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1642
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1633": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1635": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1636": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1638": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1639": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1640": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1641": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1642": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1643": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1664,
        1687
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 23
    },
    "1644": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1664,
        1687
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1645": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1664,
        1687
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1646": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1709
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 24,
      "value": "0x5"
    },
    "1648": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1709
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1649": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1738
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1650": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1738
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1651": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1658": {
      "op": "SHL"
    },
    "1659": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1738
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1660": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1738
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1661": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1738
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1663": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1738
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1664": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1738
      ],
      "op": "ADD",
      "path": "4"
    },
    "1665": {
      "op": "SWAP4"
    },
    "1666": {
      "op": "SWAP1"
    },
    "1667": {
      "op": "SWAP4"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1671": {
      "op": "DUP4"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "op": "DUP3"
    },
    "1674": {
      "op": "SWAP1"
    },
    "1675": {
      "op": "MSTORE"
    },
    "1676": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1677": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1635,
        1654
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1684": {
      "op": "SHL"
    },
    "1685": {
      "op": "SUB"
    },
    "1686": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1709
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1687": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1709
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1688": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1709
      ],
      "op": "AND",
      "path": "4"
    },
    "1689": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1709
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1690": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1718
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1695": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1698": {
      "op": "ADD"
    },
    "1699": {
      "fn": "CookieCapital.emergencyUnstake",
      "offset": [
        1697,
        1738
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B0"
    },
    "1702": {
      "op": "JUMP"
    },
    "1703": {
      "fn": "CookieCapital.eat",
      "offset": [
        2491,
        2945
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1704": {
      "fn": "CookieCapital.eat",
      "offset": [
        2537,
        2546
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 25,
      "value": "0x6AF"
    },
    "1707": {
      "fn": "CookieCapital.eat",
      "offset": [
        2537,
        2544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x56C"
    },
    "1710": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2537,
        2546
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1711": {
      "fn": "CookieCapital.eat",
      "offset": [
        2537,
        2546
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1712": {
      "fn": "CookieCapital.eat",
      "offset": [
        2537,
        2546
      ],
      "op": "POP",
      "path": "4"
    },
    "1713": {
      "fn": "CookieCapital.eat",
      "offset": [
        2575,
        2588
      ],
      "op": "PUSH9",
      "path": "4",
      "statement": 26,
      "value": "0x3635C9ADC5DEA00000"
    },
    "1723": {
      "fn": "CookieCapital.eat",
      "offset": [
        2564,
        2570
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1724": {
      "fn": "CookieCapital.eat",
      "offset": [
        2564,
        2589
      ],
      "op": "LT",
      "path": "4"
    },
    "1725": {
      "branch": 65,
      "fn": "CookieCapital.eat",
      "offset": [
        2564,
        2589
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1726": {
      "fn": "CookieCapital.eat",
      "offset": [
        2556,
        2625
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x709"
    },
    "1729": {
      "branch": 65,
      "fn": "CookieCapital.eat",
      "offset": [
        2556,
        2625
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1730": {
      "fn": "CookieCapital.eat",
      "offset": [
        2556,
        2625
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1732": {
      "fn": "CookieCapital.eat",
      "offset": [
        2556,
        2625
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1739": {
      "op": "SHL"
    },
    "1740": {
      "fn": "CookieCapital.eat",
      "offset": [
        2556,
        2625
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1741": {
      "fn": "CookieCapital.eat",
      "offset": [
        2556,
        2625
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1744": {
      "fn": "CookieCapital.eat",
      "offset": [
        2556,
        2625
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1746": {
      "fn": "CookieCapital.eat",
      "offset": [
        2556,
        2625
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1747": {
      "fn": "CookieCapital.eat",
      "offset": [
        2556,
        2625
      ],
      "op": "ADD",
      "path": "4"
    },
    "1748": {
      "op": "MSTORE"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1753": {
      "op": "DUP3"
    },
    "1754": {
      "op": "ADD"
    },
    "1755": {
      "op": "MSTORE"
    },
    "1756": {
      "op": "PUSH32",
      "value": "0x4D75737420656174206174206C65617374203130303020636F6F6B6965732E00"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1791": {
      "op": "DUP3"
    },
    "1792": {
      "op": "ADD"
    },
    "1793": {
      "op": "MSTORE"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1796": {
      "op": "ADD"
    },
    "1797": {
      "fn": "CookieCapital.eat",
      "offset": [
        2556,
        2625
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x453"
    },
    "1800": {
      "op": "JUMP"
    },
    "1801": {
      "fn": "CookieCapital.eat",
      "offset": [
        2556,
        2625
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1802": {
      "fn": "CookieCapital.eat",
      "offset": [
        2653,
        2663
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 27
    },
    "1803": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1805": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1806": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1807": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1808": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1810": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1811": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1812": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1813": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1815": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1816": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1817": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1818": {
      "fn": "CookieCapital.eat",
      "offset": [
        2668,
        2674
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1819": {
      "op": "GT"
    },
    "1820": {
      "branch": 66,
      "fn": "CookieCapital.eat",
      "offset": [
        2643,
        2674
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1821": {
      "fn": "CookieCapital.eat",
      "offset": [
        2635,
        2709
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x768"
    },
    "1824": {
      "branch": 66,
      "fn": "CookieCapital.eat",
      "offset": [
        2635,
        2709
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1825": {
      "fn": "CookieCapital.eat",
      "offset": [
        2635,
        2709
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1827": {
      "fn": "CookieCapital.eat",
      "offset": [
        2635,
        2709
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1834": {
      "op": "SHL"
    },
    "1835": {
      "fn": "CookieCapital.eat",
      "offset": [
        2635,
        2709
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1836": {
      "fn": "CookieCapital.eat",
      "offset": [
        2635,
        2709
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1839": {
      "fn": "CookieCapital.eat",
      "offset": [
        2635,
        2709
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1841": {
      "fn": "CookieCapital.eat",
      "offset": [
        2635,
        2709
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1842": {
      "fn": "CookieCapital.eat",
      "offset": [
        2635,
        2709
      ],
      "op": "ADD",
      "path": "4"
    },
    "1843": {
      "op": "MSTORE"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1848": {
      "op": "DUP3"
    },
    "1849": {
      "op": "ADD"
    },
    "1850": {
      "op": "MSTORE"
    },
    "1851": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F75676820636F6F6B69657320696E2062616C616E63652E0000"
    },
    "1884": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1886": {
      "op": "DUP3"
    },
    "1887": {
      "op": "ADD"
    },
    "1888": {
      "op": "MSTORE"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1891": {
      "op": "ADD"
    },
    "1892": {
      "fn": "CookieCapital.eat",
      "offset": [
        2635,
        2709
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x453"
    },
    "1895": {
      "op": "JUMP"
    },
    "1896": {
      "fn": "CookieCapital.eat",
      "offset": [
        2635,
        2709
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1897": {
      "fn": "CookieCapital.eat",
      "offset": [
        2719,
        2736
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1899": {
      "fn": "CookieCapital.eat",
      "offset": [
        2739,
        2763
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x77D"
    },
    "1902": {
      "fn": "CookieCapital.eat",
      "offset": [
        2749,
        2762
      ],
      "op": "PUSH9",
      "path": "4",
      "value": "0x3635C9ADC5DEA00000"
    },
    "1912": {
      "fn": "CookieCapital.eat",
      "offset": [
        2739,
        2745
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1913": {
      "fn": "CookieCapital.eat",
      "offset": [
        2739,
        2763
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1313"
    },
    "1916": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2739,
        2763
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1917": {
      "fn": "CookieCapital.eat",
      "offset": [
        2739,
        2763
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1918": {
      "fn": "CookieCapital.eat",
      "offset": [
        2719,
        2763
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "fn": "CookieCapital.eat",
      "offset": [
        2773,
        2810
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 28,
      "value": "0x792"
    },
    "1923": {
      "fn": "CookieCapital.eat",
      "offset": [
        2779,
        2789
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1924": {
      "fn": "CookieCapital.eat",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x78D"
    },
    "1927": {
      "fn": "CookieCapital.eat",
      "offset": [
        2719,
        2763
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1928": {
      "fn": "CookieCapital.eat",
      "offset": [
        2791,
        2797
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1929": {
      "fn": "CookieCapital.eat",
      "offset": [
        2791,
        2809
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1327"
    },
    "1932": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2791,
        2809
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1933": {
      "fn": "CookieCapital.eat",
      "offset": [
        2791,
        2809
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1934": {
      "fn": "CookieCapital.eat",
      "offset": [
        2773,
        2778
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFA5"
    },
    "1937": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2773,
        2810
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1938": {
      "fn": "CookieCapital.eat",
      "offset": [
        2773,
        2810
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1939": {
      "fn": "CookieCapital.eat",
      "offset": [
        2872,
        2885
      ],
      "op": "PUSH9",
      "path": "4",
      "statement": 29,
      "value": "0x3635C9ADC5DEA00000"
    },
    "1949": {
      "fn": "CookieCapital.eat",
      "offset": [
        2849,
        2867
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7A6"
    },
    "1952": {
      "fn": "CookieCapital.eat",
      "offset": [
        2858,
        2867
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1953": {
      "fn": "CookieCapital.eat",
      "offset": [
        2849,
        2855
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1954": {
      "fn": "CookieCapital.eat",
      "offset": [
        2849,
        2867
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1327"
    },
    "1957": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2849,
        2867
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1958": {
      "fn": "CookieCapital.eat",
      "offset": [
        2849,
        2867
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1959": {
      "fn": "CookieCapital.eat",
      "offset": [
        2848,
        2886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7B0"
    },
    "1962": {
      "fn": "CookieCapital.eat",
      "offset": [
        2848,
        2886
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1963": {
      "fn": "CookieCapital.eat",
      "offset": [
        2848,
        2886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1964": {
      "fn": "CookieCapital.eat",
      "offset": [
        2848,
        2886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x133E"
    },
    "1967": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2848,
        2886
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1968": {
      "fn": "CookieCapital.eat",
      "offset": [
        2848,
        2886
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1969": {
      "fn": "CookieCapital.eat",
      "offset": [
        2833,
        2843
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1970": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1972": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1973": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1974": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1975": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2832
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "1977": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1979": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2844
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1980": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2844
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1982": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2844
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1983": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2844
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1984": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2886
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1985": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2886
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1986": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1987": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2844
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1988": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2844
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1989": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7CF"
    },
    "1992": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1993": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2886
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1994": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1995": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E5"
    },
    "1998": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2820,
        2886
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1999": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2886
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2000": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2001": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2886
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2002": {
      "fn": "CookieCapital.eat",
      "offset": [
        2820,
        2886
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2003": {
      "op": "POP"
    },
    "2004": {
      "fn": "CookieCapital.eat",
      "offset": [
        2905,
        2915
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 30
    },
    "2005": {
      "fn": "CookieCapital.eat",
      "offset": [
        2905,
        2915
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "fn": "CookieCapital.eat",
      "offset": [
        2901,
        2938
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x323082F42560DE16C285B305BED7B898B58BAC4DEDDDCAD2B802992135DC7ED5"
    },
    "2040": {
      "fn": "CookieCapital.eat",
      "offset": [
        2918,
        2936
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x801"
    },
    "2043": {
      "fn": "CookieCapital.eat",
      "offset": [
        2927,
        2936
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2044": {
      "fn": "CookieCapital.eat",
      "offset": [
        2918,
        2924
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2045": {
      "fn": "CookieCapital.eat",
      "offset": [
        2918,
        2936
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1327"
    },
    "2048": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2918,
        2936
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2049": {
      "fn": "CookieCapital.eat",
      "offset": [
        2918,
        2936
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2050": {
      "fn": "CookieCapital.eat",
      "offset": [
        2901,
        2938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2052": {
      "fn": "CookieCapital.eat",
      "offset": [
        2901,
        2938
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2053": {
      "op": "SWAP1"
    },
    "2054": {
      "op": "DUP2"
    },
    "2055": {
      "op": "MSTORE"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2058": {
      "op": "ADD"
    },
    "2059": {
      "fn": "CookieCapital.eat",
      "offset": [
        2901,
        2938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2061": {
      "fn": "CookieCapital.eat",
      "offset": [
        2901,
        2938
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2062": {
      "fn": "CookieCapital.eat",
      "offset": [
        2901,
        2938
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2063": {
      "fn": "CookieCapital.eat",
      "offset": [
        2901,
        2938
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2064": {
      "fn": "CookieCapital.eat",
      "offset": [
        2901,
        2938
      ],
      "op": "SUB",
      "path": "4"
    },
    "2065": {
      "fn": "CookieCapital.eat",
      "offset": [
        2901,
        2938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2066": {
      "fn": "CookieCapital.eat",
      "offset": [
        2901,
        2938
      ],
      "op": "LOG2",
      "path": "4"
    },
    "2067": {
      "fn": "CookieCapital.eat",
      "offset": [
        2527,
        2945
      ],
      "op": "POP",
      "path": "4"
    },
    "2068": {
      "fn": "CookieCapital.eat",
      "offset": [
        2491,
        2945
      ],
      "op": "POP",
      "path": "4"
    },
    "2069": {
      "fn": "CookieCapital.eat",
      "jump": "o",
      "offset": [
        2491,
        2945
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2070": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2071": {
      "fn": "ERC20.symbol",
      "offset": [
        2423,
        2436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2073": {
      "fn": "ERC20.symbol",
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x4"
    },
    "2075": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2076": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2077": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x368"
    },
    "2080": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2081": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1230"
    },
    "2084": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2448,
        2462
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2085": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2086": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2087": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2089": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2090": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2091": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2092": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2094": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2096": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2097": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2098": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2099": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2101": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2102": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2103": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2110": {
      "op": "SHL"
    },
    "2111": {
      "op": "SUB"
    },
    "2112": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2113": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "AND",
      "path": "0"
    },
    "2114": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2115": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2116": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2117": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2118": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2119": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2120": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2121": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2122": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2123": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2124": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2125": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 32
    },
    "2126": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2127": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "LT",
      "path": "0"
    },
    "2128": {
      "branch": 70,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2129": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AA"
    },
    "2132": {
      "branch": 70,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2133": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2135": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2136": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2142": {
      "op": "SHL"
    },
    "2143": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2144": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2147": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2149": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2150": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "ADD",
      "path": "0"
    },
    "2151": {
      "op": "MSTORE"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2156": {
      "op": "DUP3"
    },
    "2157": {
      "op": "ADD"
    },
    "2158": {
      "op": "MSTORE"
    },
    "2159": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2194": {
      "op": "DUP3"
    },
    "2195": {
      "op": "ADD"
    },
    "2196": {
      "op": "MSTORE"
    },
    "2197": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2205": {
      "op": "SHL"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2208": {
      "op": "DUP3"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "op": "MSTORE"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2213": {
      "op": "ADD"
    },
    "2214": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453"
    },
    "2217": {
      "op": "JUMP"
    },
    "2218": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2219": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0x41C"
    },
    "2222": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6935,
        6940
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2223": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6942,
        6949
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2224": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6970,
        6985
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2225": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6967
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2226": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6985
      ],
      "op": "SUB",
      "path": "0"
    },
    "2227": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB41"
    },
    "2230": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2231": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2232": {
      "fn": "CookieCapital.stake",
      "offset": [
        859,
        860
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 34,
      "value": "0x0"
    },
    "2234": {
      "fn": "CookieCapital.stake",
      "offset": [
        850,
        856
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2235": {
      "branch": 67,
      "fn": "CookieCapital.stake",
      "offset": [
        850,
        860
      ],
      "op": "GT",
      "path": "4"
    },
    "2236": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x907"
    },
    "2239": {
      "branch": 67,
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2240": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2242": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2243": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2249": {
      "op": "SHL"
    },
    "2250": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2251": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2254": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2256": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2257": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "ADD",
      "path": "4"
    },
    "2258": {
      "op": "MSTORE"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2263": {
      "op": "DUP3"
    },
    "2264": {
      "op": "ADD"
    },
    "2265": {
      "op": "MSTORE"
    },
    "2266": {
      "op": "PUSH32",
      "value": "0x4D757374207374616B65206D6F7265207468616E203020746F6B656E732E0000"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2301": {
      "op": "DUP3"
    },
    "2302": {
      "op": "ADD"
    },
    "2303": {
      "op": "MSTORE"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2306": {
      "op": "ADD"
    },
    "2307": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x453"
    },
    "2310": {
      "op": "JUMP"
    },
    "2311": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2312": {
      "fn": "CookieCapital.stake",
      "offset": [
        917,
        927
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2313": {
      "fn": "CookieCapital.stake",
      "offset": [
        931,
        932
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2315": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2316": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2317": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2318": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2320": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2322": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2323": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2325": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2326": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2327": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2328": {
      "branch": 68,
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        932
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2329": {
      "fn": "CookieCapital.stake",
      "offset": [
        905,
        968
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x924"
    },
    "2332": {
      "branch": 68,
      "fn": "CookieCapital.stake",
      "offset": [
        905,
        968
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2333": {
      "fn": "CookieCapital.stake",
      "offset": [
        948,
        957
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 35,
      "value": "0x924"
    },
    "2336": {
      "fn": "CookieCapital.stake",
      "offset": [
        948,
        955
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x427"
    },
    "2339": {
      "fn": "CookieCapital.stake",
      "jump": "i",
      "offset": [
        948,
        957
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2340": {
      "fn": "CookieCapital.stake",
      "offset": [
        948,
        957
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2341": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        989
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 36,
      "value": "0x5"
    },
    "2343": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        989
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2344": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2346": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2347": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2356": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2357": {
      "fn": "CookieCapital.stake",
      "offset": [
        1003,
        1013
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2358": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2360": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2361": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "ADD",
      "path": "4"
    },
    "2362": {
      "op": "MSTORE"
    },
    "2363": {
      "fn": "CookieCapital.stake",
      "offset": [
        1023,
        1027
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2366": {
      "op": "DUP3"
    },
    "2367": {
      "op": "ADD"
    },
    "2368": {
      "op": "MSTORE"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2371": {
      "op": "DUP2"
    },
    "2372": {
      "op": "ADD"
    },
    "2373": {
      "op": "DUP4"
    },
    "2374": {
      "op": "SWAP1"
    },
    "2375": {
      "op": "MSTORE"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2382": {
      "op": "SHL"
    },
    "2383": {
      "op": "SUB"
    },
    "2384": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        989
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2385": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        989
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2386": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        989
      ],
      "op": "AND",
      "path": "4"
    },
    "2387": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        989
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2388": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1002
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "2393": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1002
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2396": {
      "op": "ADD"
    },
    "2397": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2399": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2401": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2402": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2403": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2404": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "SUB",
      "path": "4"
    },
    "2405": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2406": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2408": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2409": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "GAS",
      "path": "4"
    },
    "2410": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "CALL",
      "path": "4"
    },
    "2411": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2412": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2413": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2414": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x97B"
    },
    "2417": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2418": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2419": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2421": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2422": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2423": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2424": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2426": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2427": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2428": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "POP",
      "path": "4"
    },
    "2429": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "POP",
      "path": "4"
    },
    "2430": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "POP",
      "path": "4"
    },
    "2431": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "POP",
      "path": "4"
    },
    "2432": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2434": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2435": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2436": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2438": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "NOT",
      "path": "4"
    },
    "2439": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2441": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2442": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "ADD",
      "path": "4"
    },
    "2443": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "AND",
      "path": "4"
    },
    "2444": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2445": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "ADD",
      "path": "4"
    },
    "2446": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2447": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2449": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2450": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "POP",
      "path": "4"
    },
    "2451": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2452": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "ADD",
      "path": "4"
    },
    "2453": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2454": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x99F"
    },
    "2457": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2458": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2459": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12AD"
    },
    "2462": {
      "fn": "CookieCapital.stake",
      "jump": "i",
      "offset": [
        977,
        1037
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2463": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2464": {
      "op": "POP"
    },
    "2465": {
      "fn": "CookieCapital.stake",
      "offset": [
        1055,
        1065
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 37
    },
    "2466": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2468": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2469": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2470": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2471": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2473": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2475": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2476": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2477": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2478": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2480": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2481": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2482": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2483": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1075
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2484": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1075
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2485": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1075
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2486": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1096
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 38,
      "value": "0xA"
    },
    "2488": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1108
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2489": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1108
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2490": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1108
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2491": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1108
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2492": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1108
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2493": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1108
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2494": {
      "fn": "CookieCapital.stake",
      "offset": [
        1111,
        1126
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "2495": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1126
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2496": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1126
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2497": {
      "fn": "CookieCapital.stake",
      "offset": [
        1141,
        1167
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 39
    },
    "2498": {
      "fn": "CookieCapital.stake",
      "offset": [
        1141,
        1167
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2499": {
      "op": "DUP4"
    },
    "2500": {
      "op": "DUP2"
    },
    "2501": {
      "op": "MSTORE"
    },
    "2502": {
      "fn": "CookieCapital.stake",
      "offset": [
        1141,
        1167
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
    },
    "2535": {
      "fn": "CookieCapital.stake",
      "offset": [
        1141,
        1167
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2536": {
      "op": "ADD"
    },
    "2537": {
      "fn": "CookieCapital.stake",
      "offset": [
        1141,
        1167
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x522"
    },
    "2540": {
      "op": "JUMP"
    },
    "2541": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2542": {
      "fn": "ERC20.transfer",
      "offset": [
        3808,
        3812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2544": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2545": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3890
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 40,
      "value": "0x3F9"
    },
    "2548": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2549": {
      "fn": "ERC20.transfer",
      "offset": [
        3879,
        3881
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2550": {
      "fn": "ERC20.transfer",
      "offset": [
        3883,
        3889
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2551": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF8"
    },
    "2554": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3862,
        3890
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2555": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1794,
        2131
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2562": {
      "op": "SHL"
    },
    "2563": {
      "op": "SUB"
    },
    "2564": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1921,
        1938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2565": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1921,
        1938
      ],
      "op": "AND",
      "path": "4"
    },
    "2566": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1854,
        1868
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2568": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1921,
        1938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2569": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1921,
        1938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2570": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1921,
        1938
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2571": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1921,
        1932
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "2573": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1921,
        1938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2575": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1921,
        1938
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2576": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1921,
        1938
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2578": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1921,
        1938
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2579": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1921,
        1938
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2580": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1921,
        1938
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2581": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1854,
        1868
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2582": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1854,
        1868
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2583": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1950,
        1954
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE10"
    },
    "2586": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1950,
        1954
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2587": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA24"
    },
    "2590": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1903,
        1938
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2591": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1903,
        1918
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "2592": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1903,
        1938
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1327"
    },
    "2595": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1903,
        1938
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2596": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1903,
        1938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2597": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1902,
        1946
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA30"
    },
    "2600": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1902,
        1946
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2601": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1942,
        1946
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E8"
    },
    "2604": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1902,
        1946
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1352"
    },
    "2607": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1902,
        1946
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2608": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1902,
        1946
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2609": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1901,
        1954
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA3A"
    },
    "2612": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1901,
        1954
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2613": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1901,
        1954
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2614": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1901,
        1954
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x133E"
    },
    "2617": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1901,
        1954
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2618": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1901,
        1954
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2625": {
      "op": "SHL"
    },
    "2626": {
      "op": "SUB"
    },
    "2627": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1999,
        2017
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2628": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1999,
        2017
      ],
      "op": "AND",
      "path": "4"
    },
    "2629": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1964,
        1988
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2631": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1999,
        2017
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2632": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1999,
        2017
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2633": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1999,
        2017
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2634": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1999,
        2011
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "2636": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1999,
        2017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2638": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1999,
        2017
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2639": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1999,
        2017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2641": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1999,
        2017
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2642": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1999,
        2017
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2643": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1999,
        2017
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2644": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1880,
        1954
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2645": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1880,
        1954
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2646": {
      "op": "POP"
    },
    "2647": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1964,
        1988
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2648": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1992,
        2017
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA63"
    },
    "2651": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1992,
        2017
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2652": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1992,
        1996
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E8"
    },
    "2655": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1992,
        2017
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E5"
    },
    "2658": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1992,
        2017
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2659": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1992,
        2017
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2666": {
      "op": "SHL"
    },
    "2667": {
      "op": "SUB"
    },
    "2668": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2060
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2669": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2060
      ],
      "op": "AND",
      "path": "4"
    },
    "2670": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2028,
        2043
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2672": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2673": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2060
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2674": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2060
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2675": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2677": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2679": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2060
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2680": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2682": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2060
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2683": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2060
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2684": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2060
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2685": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1964,
        2018
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2686": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1964,
        2018
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2687": {
      "op": "POP"
    },
    "2688": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2028,
        2043
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2689": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2096,
        2100
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E8"
    },
    "2692": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2096,
        2100
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2693": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1964,
        2018
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2694": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1964,
        2018
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2695": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA91"
    },
    "2698": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2699": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2063,
        2073
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2700": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2063,
        2073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2701": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1352"
    },
    "2704": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        2047,
        2073
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2705": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2073
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2706": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2092
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9B"
    },
    "2709": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2092
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2710": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2092
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2711": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2092
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1352"
    },
    "2714": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        2047,
        2092
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2715": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2047,
        2092
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2716": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2046,
        2100
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAA5"
    },
    "2719": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2046,
        2100
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2720": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2046,
        2100
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2721": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2046,
        2100
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x133E"
    },
    "2724": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        2046,
        2100
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2725": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2046,
        2100
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2726": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        2028,
        2100
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2727": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1794,
        2131
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2728": {
      "op": "POP"
    },
    "2729": {
      "op": "POP"
    },
    "2730": {
      "op": "POP"
    },
    "2731": {
      "op": "POP"
    },
    "2732": {
      "op": "POP"
    },
    "2733": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "o",
      "offset": [
        1794,
        2131
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2734": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2951,
        3179
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2735": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3042,
        3052
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 41
    },
    "2736": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2738": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2739": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2740": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2741": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2743": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2744": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2745": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2746": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2748": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2749": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2750": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2751": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3058,
        3071
      ],
      "op": "PUSH9",
      "path": "4",
      "value": "0x3635C9ADC5DEA00000"
    },
    "2761": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3058,
        3071
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2762": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3002,
        3029
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD2"
    },
    "2765": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3018,
        3028
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2766": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3002,
        3017
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9FB"
    },
    "2769": {
      "fn": "CookieCapital.harvestAndEat",
      "jump": "i",
      "offset": [
        3002,
        3029
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2770": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3002,
        3029
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2771": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3002,
        3053
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xADC"
    },
    "2774": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3002,
        3053
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2775": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3002,
        3053
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2776": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3002,
        3053
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E5"
    },
    "2779": {
      "fn": "CookieCapital.harvestAndEat",
      "jump": "i",
      "offset": [
        3002,
        3053
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2780": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3002,
        3053
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2781": {
      "branch": 69,
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3001,
        3072
      ],
      "op": "GT",
      "path": "4"
    },
    "2782": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2993,
        3109
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB29"
    },
    "2785": {
      "branch": 69,
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2993,
        3109
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2786": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2993,
        3109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2788": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2993,
        3109
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2789": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2795": {
      "op": "SHL"
    },
    "2796": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2993,
        3109
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2797": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2993,
        3109
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2800": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2993,
        3109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2802": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2993,
        3109
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2803": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2993,
        3109
      ],
      "op": "ADD",
      "path": "4"
    },
    "2804": {
      "op": "DUP2"
    },
    "2805": {
      "op": "SWAP1"
    },
    "2806": {
      "op": "MSTORE"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2809": {
      "op": "DUP3"
    },
    "2810": {
      "op": "ADD"
    },
    "2811": {
      "op": "MSTORE"
    },
    "2812": {
      "op": "PUSH32",
      "value": "0x4D75737420656174206D6F7265207468616E203130303020636F6F6B6965732E"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2847": {
      "op": "DUP3"
    },
    "2848": {
      "op": "ADD"
    },
    "2849": {
      "op": "MSTORE"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2852": {
      "op": "ADD"
    },
    "2853": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2993,
        3109
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x453"
    },
    "2856": {
      "op": "JUMP"
    },
    "2857": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2993,
        3109
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2858": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3119,
        3136
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2860": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3139,
        3148
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB33"
    },
    "2863": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3139,
        3146
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x56C"
    },
    "2866": {
      "fn": "CookieCapital.harvestAndEat",
      "jump": "i",
      "offset": [
        3139,
        3148
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2867": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3139,
        3148
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2868": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3119,
        3148
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2869": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3119,
        3148
      ],
      "op": "POP",
      "path": "4"
    },
    "2870": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3158,
        3172
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 42,
      "value": "0xB3E"
    },
    "2873": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3162,
        3171
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2874": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3158,
        3161
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A7"
    },
    "2877": {
      "fn": "CookieCapital.harvestAndEat",
      "jump": "i",
      "offset": [
        3158,
        3172
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2878": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        3158,
        3172
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2879": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2983,
        3179
      ],
      "op": "POP",
      "path": "4"
    },
    "2880": {
      "fn": "CookieCapital.harvestAndEat",
      "jump": "o",
      "offset": [
        2951,
        3179
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2881": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2888": {
      "op": "SHL"
    },
    "2889": {
      "op": "SUB"
    },
    "2890": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 43
    },
    "2891": {
      "branch": 71,
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "AND",
      "path": "0"
    },
    "2892": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA3"
    },
    "2895": {
      "branch": 71,
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2896": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2898": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2899": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2905": {
      "op": "SHL"
    },
    "2906": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2907": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2910": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2912": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2913": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "ADD",
      "path": "0"
    },
    "2914": {
      "op": "MSTORE"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2917": {
      "op": "DUP1"
    },
    "2918": {
      "op": "DUP3"
    },
    "2919": {
      "op": "ADD"
    },
    "2920": {
      "op": "MSTORE"
    },
    "2921": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2956": {
      "op": "DUP3"
    },
    "2957": {
      "op": "ADD"
    },
    "2958": {
      "op": "MSTORE"
    },
    "2959": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2966": {
      "op": "SHL"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2969": {
      "op": "DUP3"
    },
    "2970": {
      "op": "ADD"
    },
    "2971": {
      "op": "MSTORE"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2974": {
      "op": "ADD"
    },
    "2975": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453"
    },
    "2978": {
      "op": "JUMP"
    },
    "2979": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2986": {
      "op": "SHL"
    },
    "2987": {
      "op": "SUB"
    },
    "2988": {
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 44
    },
    "2989": {
      "branch": 72,
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "AND",
      "path": "0"
    },
    "2990": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC04"
    },
    "2993": {
      "branch": 72,
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2994": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2996": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2997": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3003": {
      "op": "SHL"
    },
    "3004": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3005": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3008": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3010": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3011": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "ADD",
      "path": "0"
    },
    "3012": {
      "op": "MSTORE"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3017": {
      "op": "DUP3"
    },
    "3018": {
      "op": "ADD"
    },
    "3019": {
      "op": "MSTORE"
    },
    "3020": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3055": {
      "op": "DUP3"
    },
    "3056": {
      "op": "ADD"
    },
    "3057": {
      "op": "MSTORE"
    },
    "3058": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3063": {
      "op": "SHL"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3066": {
      "op": "DUP3"
    },
    "3067": {
      "op": "ADD"
    },
    "3068": {
      "op": "MSTORE"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3071": {
      "op": "ADD"
    },
    "3072": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453"
    },
    "3075": {
      "op": "JUMP"
    },
    "3076": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3083": {
      "op": "SHL"
    },
    "3084": {
      "op": "SUB"
    },
    "3085": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 45
    },
    "3086": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3087": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "AND",
      "path": "0"
    },
    "3088": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3090": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3091": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3092": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3093": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3095": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3097": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3098": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3099": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3100": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3102": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3103": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3104": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3105": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3106": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3107": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "AND",
      "path": "0"
    },
    "3108": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3109": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3110": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3111": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3112": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3113": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3114": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3115": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3116": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3117": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3118": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3119": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3120": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3121": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 46
    },
    "3122": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3123": {
      "op": "DUP5"
    },
    "3124": {
      "op": "DUP2"
    },
    "3125": {
      "op": "MSTORE"
    },
    "3126": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3159": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3160": {
      "op": "ADD"
    },
    "3161": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3162": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3164": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3165": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3166": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3167": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SUB",
      "path": "0"
    },
    "3168": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3169": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3170": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "0"
    },
    "3171": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "0"
    },
    "3172": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "0"
    },
    "3173": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3174": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3181": {
      "op": "SHL"
    },
    "3182": {
      "op": "SUB"
    },
    "3183": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3184": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3185": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "0"
    },
    "3186": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3188": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3189": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3190": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3191": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3193": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3195": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3196": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3197": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3198": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3200": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3201": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3202": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3203": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3204": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3205": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "0"
    },
    "3206": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3207": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3208": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3209": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3210": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3211": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3212": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3215": {
      "op": "NOT"
    },
    "3216": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3217": {
      "branch": 73,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "EQ",
      "path": "0"
    },
    "3218": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF2"
    },
    "3221": {
      "branch": 73,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3222": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11047,
        11053
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 47
    },
    "3223": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11043
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3224": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "LT",
      "path": "0"
    },
    "3225": {
      "branch": 74,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3226": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE5"
    },
    "3229": {
      "branch": 74,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3230": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3232": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3239": {
      "op": "SHL"
    },
    "3240": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3241": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3244": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3246": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3247": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "ADD",
      "path": "0"
    },
    "3248": {
      "op": "MSTORE"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3253": {
      "op": "DUP3"
    },
    "3254": {
      "op": "ADD"
    },
    "3255": {
      "op": "MSTORE"
    },
    "3256": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3291": {
      "op": "DUP3"
    },
    "3292": {
      "op": "ADD"
    },
    "3293": {
      "op": "MSTORE"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3296": {
      "op": "ADD"
    },
    "3297": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453"
    },
    "3300": {
      "op": "JUMP"
    },
    "3301": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3302": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 48,
      "value": "0xCF2"
    },
    "3305": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11138,
        11143
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3306": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11145,
        11152
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3307": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11173,
        11179
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3308": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11170
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3309": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11179
      ],
      "op": "SUB",
      "path": "0"
    },
    "3310": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11137
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB41"
    },
    "3313": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3314": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3315": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10890,
        11211
      ],
      "op": "POP",
      "path": "0"
    },
    "3316": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "0"
    },
    "3317": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "0"
    },
    "3318": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "0"
    },
    "3319": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3320": {
      "fn": "ERC20._transfer",
      "offset": [
        7488,
        8139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3327": {
      "op": "SHL"
    },
    "3328": {
      "op": "SUB"
    },
    "3329": {
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 49
    },
    "3330": {
      "branch": 75,
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "AND",
      "path": "0"
    },
    "3331": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5C"
    },
    "3334": {
      "branch": 75,
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3335": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3337": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3338": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3344": {
      "op": "SHL"
    },
    "3345": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3346": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3349": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3351": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3352": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "ADD",
      "path": "0"
    },
    "3353": {
      "op": "MSTORE"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3358": {
      "op": "DUP3"
    },
    "3359": {
      "op": "ADD"
    },
    "3360": {
      "op": "MSTORE"
    },
    "3361": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3396": {
      "op": "DUP3"
    },
    "3397": {
      "op": "ADD"
    },
    "3398": {
      "op": "MSTORE"
    },
    "3399": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3407": {
      "op": "SHL"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3410": {
      "op": "DUP3"
    },
    "3411": {
      "op": "ADD"
    },
    "3412": {
      "op": "MSTORE"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3415": {
      "op": "ADD"
    },
    "3416": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453"
    },
    "3419": {
      "op": "JUMP"
    },
    "3420": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3427": {
      "op": "SHL"
    },
    "3428": {
      "op": "SUB"
    },
    "3429": {
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 50
    },
    "3430": {
      "branch": 76,
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "0"
    },
    "3431": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDBE"
    },
    "3434": {
      "branch": 76,
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3435": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3437": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3438": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3444": {
      "op": "SHL"
    },
    "3445": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3446": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3449": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3451": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3452": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "ADD",
      "path": "0"
    },
    "3453": {
      "op": "MSTORE"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3458": {
      "op": "DUP3"
    },
    "3459": {
      "op": "ADD"
    },
    "3460": {
      "op": "MSTORE"
    },
    "3461": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3496": {
      "op": "DUP3"
    },
    "3497": {
      "op": "ADD"
    },
    "3498": {
      "op": "MSTORE"
    },
    "3499": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3505": {
      "op": "SHL"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3508": {
      "op": "DUP3"
    },
    "3509": {
      "op": "ADD"
    },
    "3510": {
      "op": "MSTORE"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3513": {
      "op": "ADD"
    },
    "3514": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453"
    },
    "3517": {
      "op": "JUMP"
    },
    "3518": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3525": {
      "op": "SHL"
    },
    "3526": {
      "op": "SUB"
    },
    "3527": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3528": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "AND",
      "path": "0"
    },
    "3529": {
      "fn": "ERC20._transfer",
      "offset": [
        7808,
        7827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3531": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3532": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3533": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3534": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3536": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3537": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3538": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3539": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3541": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3542": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3543": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3544": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 51
    },
    "3545": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3546": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "LT",
      "path": "0"
    },
    "3547": {
      "branch": 77,
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3548": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE36"
    },
    "3551": {
      "branch": 77,
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3552": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3554": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3555": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3561": {
      "op": "SHL"
    },
    "3562": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3563": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3566": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3568": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3569": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "ADD",
      "path": "0"
    },
    "3570": {
      "op": "MSTORE"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3575": {
      "op": "DUP3"
    },
    "3576": {
      "op": "ADD"
    },
    "3577": {
      "op": "MSTORE"
    },
    "3578": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3613": {
      "op": "DUP3"
    },
    "3614": {
      "op": "ADD"
    },
    "3615": {
      "op": "MSTORE"
    },
    "3616": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3625": {
      "op": "SHL"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3628": {
      "op": "DUP3"
    },
    "3629": {
      "op": "ADD"
    },
    "3630": {
      "op": "MSTORE"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3633": {
      "op": "ADD"
    },
    "3634": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453"
    },
    "3637": {
      "op": "JUMP"
    },
    "3638": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3645": {
      "op": "SHL"
    },
    "3646": {
      "op": "SUB"
    },
    "3647": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 52
    },
    "3648": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3649": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "AND",
      "path": "0"
    },
    "3650": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3652": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3653": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3654": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3655": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3657": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3658": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3659": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3660": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3662": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3663": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3664": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3665": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3666": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3667": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "SUB",
      "path": "0"
    },
    "3668": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3669": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3670": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 53
    },
    "3671": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3672": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "AND",
      "path": "0"
    },
    "3673": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3674": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3675": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3676": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3677": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3678": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3679": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3680": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3681": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3682": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3683": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE6D"
    },
    "3686": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3687": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3688": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3689": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E5"
    },
    "3692": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3693": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3694": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3695": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "0"
    },
    "3696": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "0"
    },
    "3697": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3698": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3699": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3700": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "0"
    },
    "3701": {
      "fn": "ERC20._transfer",
      "offset": [
        8073,
        8075
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 54
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3708": {
      "op": "SHL"
    },
    "3709": {
      "op": "SUB"
    },
    "3710": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "0"
    },
    "3711": {
      "fn": "ERC20._transfer",
      "offset": [
        8067,
        8071
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3718": {
      "op": "SHL"
    },
    "3719": {
      "op": "SUB"
    },
    "3720": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "0"
    },
    "3721": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3754": {
      "fn": "ERC20._transfer",
      "offset": [
        8077,
        8083
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3755": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3757": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3758": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB9"
    },
    "3761": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3762": {
      "op": "DUP2"
    },
    "3763": {
      "op": "MSTORE"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3766": {
      "op": "ADD"
    },
    "3767": {
      "op": "SWAP1"
    },
    "3768": {
      "op": "JUMP"
    },
    "3769": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3770": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3772": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3773": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3774": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3775": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SUB",
      "path": "0"
    },
    "3776": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3777": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3778": {
      "fn": "ERC20._transfer",
      "offset": [
        8095,
        8132
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 55,
      "value": "0xCF2"
    },
    "3781": {
      "fn": "ERC20._burn",
      "offset": [
        9124,
        9700
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3782": {
      "fn": "ERC20._mint",
      "offset": [
        8415,
        8804
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3789": {
      "op": "SHL"
    },
    "3790": {
      "op": "SUB"
    },
    "3791": {
      "fn": "ERC20._mint",
      "offset": [
        8498,
        8519
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 56
    },
    "3792": {
      "branch": 78,
      "fn": "ERC20._mint",
      "offset": [
        8498,
        8519
      ],
      "op": "AND",
      "path": "0"
    },
    "3793": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF1C"
    },
    "3796": {
      "branch": 78,
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3797": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3799": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3800": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3806": {
      "op": "SHL"
    },
    "3807": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3808": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3811": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3813": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3814": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "ADD",
      "path": "0"
    },
    "3815": {
      "op": "MSTORE"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3820": {
      "op": "DUP3"
    },
    "3821": {
      "op": "ADD"
    },
    "3822": {
      "op": "MSTORE"
    },
    "3823": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3858": {
      "op": "DUP3"
    },
    "3859": {
      "op": "ADD"
    },
    "3860": {
      "op": "MSTORE"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3863": {
      "op": "ADD"
    },
    "3864": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453"
    },
    "3867": {
      "op": "JUMP"
    },
    "3868": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3869": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8648
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 57
    },
    "3870": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3872": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3874": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3875": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3876": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3877": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2E"
    },
    "3880": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3881": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3882": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E5"
    },
    "3885": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8626,
        8648
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3886": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3887": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3888": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3889": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3890": {
      "op": "POP"
    },
    "3891": {
      "op": "POP"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3898": {
      "op": "SHL"
    },
    "3899": {
      "op": "SUB"
    },
    "3900": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 58
    },
    "3901": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "AND",
      "path": "0"
    },
    "3902": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3904": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3905": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3906": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3907": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3909": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3910": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3911": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3912": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3914": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3915": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3916": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3917": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3918": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3919": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3920": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8667
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3921": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5B"
    },
    "3924": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3925": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3926": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3927": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E5"
    },
    "3930": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8658,
        8686
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3931": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3932": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3933": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3934": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3935": {
      "op": "POP"
    },
    "3936": {
      "op": "POP"
    },
    "3937": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 59,
      "value": "0x40"
    },
    "3939": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3940": {
      "op": "DUP2"
    },
    "3941": {
      "op": "DUP2"
    },
    "3942": {
      "op": "MSTORE"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3949": {
      "op": "SHL"
    },
    "3950": {
      "op": "SUB"
    },
    "3951": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3952": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "AND",
      "path": "0"
    },
    "3953": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3954": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3956": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3957": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3990": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3993": {
      "op": "ADD"
    },
    "3994": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3996": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3997": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3998": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3999": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SUB",
      "path": "0"
    },
    "4000": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4001": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4002": {
      "fn": "ERC20._mint",
      "offset": [
        8415,
        8804
      ],
      "op": "POP",
      "path": "0"
    },
    "4003": {
      "fn": "ERC20._mint",
      "offset": [
        8415,
        8804
      ],
      "op": "POP",
      "path": "0"
    },
    "4004": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8415,
        8804
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4005": {
      "fn": "ERC20._burn",
      "offset": [
        9124,
        9700
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4012": {
      "op": "SHL"
    },
    "4013": {
      "op": "SUB"
    },
    "4014": {
      "fn": "ERC20._burn",
      "offset": [
        9207,
        9228
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 60
    },
    "4015": {
      "branch": 79,
      "fn": "ERC20._burn",
      "offset": [
        9207,
        9228
      ],
      "op": "AND",
      "path": "0"
    },
    "4016": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1005"
    },
    "4019": {
      "branch": 79,
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4020": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4022": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4029": {
      "op": "SHL"
    },
    "4030": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4031": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4034": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4036": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4037": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "ADD",
      "path": "0"
    },
    "4038": {
      "op": "MSTORE"
    },
    "4039": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4043": {
      "op": "DUP3"
    },
    "4044": {
      "op": "ADD"
    },
    "4045": {
      "op": "MSTORE"
    },
    "4046": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4081": {
      "op": "DUP3"
    },
    "4082": {
      "op": "ADD"
    },
    "4083": {
      "op": "MSTORE"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4088": {
      "op": "SHL"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4091": {
      "op": "DUP3"
    },
    "4092": {
      "op": "ADD"
    },
    "4093": {
      "op": "MSTORE"
    },
    "4094": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4096": {
      "op": "ADD"
    },
    "4097": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453"
    },
    "4100": {
      "op": "JUMP"
    },
    "4101": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4108": {
      "op": "SHL"
    },
    "4109": {
      "op": "SUB"
    },
    "4110": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4111": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "AND",
      "path": "0"
    },
    "4112": {
      "fn": "ERC20._burn",
      "offset": [
        9337,
        9359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4114": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4115": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4116": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4117": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4119": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4120": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4121": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4122": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4124": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4125": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4126": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4127": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 61
    },
    "4128": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4129": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "LT",
      "path": "0"
    },
    "4130": {
      "branch": 80,
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4131": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1079"
    },
    "4134": {
      "branch": 80,
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4135": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4137": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4138": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4144": {
      "op": "SHL"
    },
    "4145": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4146": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4149": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4151": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4152": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "ADD",
      "path": "0"
    },
    "4153": {
      "op": "MSTORE"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4158": {
      "op": "DUP3"
    },
    "4159": {
      "op": "ADD"
    },
    "4160": {
      "op": "MSTORE"
    },
    "4161": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4196": {
      "op": "DUP3"
    },
    "4197": {
      "op": "ADD"
    },
    "4198": {
      "op": "MSTORE"
    },
    "4199": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4204": {
      "op": "SHL"
    },
    "4205": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4207": {
      "op": "DUP3"
    },
    "4208": {
      "op": "ADD"
    },
    "4209": {
      "op": "MSTORE"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4212": {
      "op": "ADD"
    },
    "4213": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x453"
    },
    "4216": {
      "op": "JUMP"
    },
    "4217": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4224": {
      "op": "SHL"
    },
    "4225": {
      "op": "SUB"
    },
    "4226": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 62
    },
    "4227": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "AND",
      "path": "0"
    },
    "4228": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4230": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4231": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4232": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4233": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4235": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4236": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4237": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4238": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4240": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4241": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4242": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4243": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4244": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "SUB",
      "path": "0"
    },
    "4245": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9539
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4246": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9539
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4247": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9571
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 63,
      "value": "0x2"
    },
    "4249": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4250": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4251": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4252": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4253": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9504
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4254": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A8"
    },
    "4257": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4258": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4259": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4260": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1327"
    },
    "4263": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9559,
        9581
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4264": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4265": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4266": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4267": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4268": {
      "op": "POP"
    },
    "4269": {
      "op": "POP"
    },
    "4270": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 64,
      "value": "0x40"
    },
    "4272": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4273": {
      "op": "DUP3"
    },
    "4274": {
      "op": "DUP2"
    },
    "4275": {
      "op": "MSTORE"
    },
    "4276": {
      "fn": "ERC20._burn",
      "offset": [
        9623,
        9624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4278": {
      "fn": "ERC20._burn",
      "offset": [
        9623,
        9624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4285": {
      "op": "SHL"
    },
    "4286": {
      "op": "SUB"
    },
    "4287": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4288": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "AND",
      "path": "0"
    },
    "4289": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4290": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4323": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4326": {
      "op": "ADD"
    },
    "4327": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC59"
    },
    "4330": {
      "op": "JUMP"
    },
    "4331": {
      "op": "JUMPDEST"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4336": {
      "op": "DUP1"
    },
    "4337": {
      "op": "DUP4"
    },
    "4338": {
      "op": "MSTORE"
    },
    "4339": {
      "op": "DUP4"
    },
    "4340": {
      "op": "MLOAD"
    },
    "4341": {
      "op": "DUP1"
    },
    "4342": {
      "op": "DUP3"
    },
    "4343": {
      "op": "DUP6"
    },
    "4344": {
      "op": "ADD"
    },
    "4345": {
      "op": "MSTORE"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4348": {
      "op": "JUMPDEST"
    },
    "4349": {
      "op": "DUP2"
    },
    "4350": {
      "op": "DUP2"
    },
    "4351": {
      "op": "LT"
    },
    "4352": {
      "op": "ISZERO"
    },
    "4353": {
      "op": "PUSH2",
      "value": "0x1118"
    },
    "4356": {
      "op": "JUMPI"
    },
    "4357": {
      "op": "DUP6"
    },
    "4358": {
      "op": "DUP2"
    },
    "4359": {
      "op": "ADD"
    },
    "4360": {
      "op": "DUP4"
    },
    "4361": {
      "op": "ADD"
    },
    "4362": {
      "op": "MLOAD"
    },
    "4363": {
      "op": "DUP6"
    },
    "4364": {
      "op": "DUP3"
    },
    "4365": {
      "op": "ADD"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4368": {
      "op": "ADD"
    },
    "4369": {
      "op": "MSTORE"
    },
    "4370": {
      "op": "DUP3"
    },
    "4371": {
      "op": "ADD"
    },
    "4372": {
      "op": "PUSH2",
      "value": "0x10FC"
    },
    "4375": {
      "op": "JUMP"
    },
    "4376": {
      "op": "JUMPDEST"
    },
    "4377": {
      "op": "DUP2"
    },
    "4378": {
      "op": "DUP2"
    },
    "4379": {
      "op": "GT"
    },
    "4380": {
      "op": "ISZERO"
    },
    "4381": {
      "op": "PUSH2",
      "value": "0x112A"
    },
    "4384": {
      "op": "JUMPI"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4389": {
      "op": "DUP4"
    },
    "4390": {
      "op": "DUP8"
    },
    "4391": {
      "op": "ADD"
    },
    "4392": {
      "op": "ADD"
    },
    "4393": {
      "op": "MSTORE"
    },
    "4394": {
      "op": "JUMPDEST"
    },
    "4395": {
      "op": "POP"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4398": {
      "op": "ADD"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4401": {
      "op": "NOT"
    },
    "4402": {
      "op": "AND"
    },
    "4403": {
      "op": "SWAP3"
    },
    "4404": {
      "op": "SWAP1"
    },
    "4405": {
      "op": "SWAP3"
    },
    "4406": {
      "op": "ADD"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4409": {
      "op": "ADD"
    },
    "4410": {
      "op": "SWAP4"
    },
    "4411": {
      "op": "SWAP3"
    },
    "4412": {
      "op": "POP"
    },
    "4413": {
      "op": "POP"
    },
    "4414": {
      "op": "POP"
    },
    "4415": {
      "jump": "o",
      "op": "JUMP"
    },
    "4416": {
      "op": "JUMPDEST"
    },
    "4417": {
      "op": "DUP1"
    },
    "4418": {
      "op": "CALLDATALOAD"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4425": {
      "op": "SHL"
    },
    "4426": {
      "op": "SUB"
    },
    "4427": {
      "op": "DUP2"
    },
    "4428": {
      "op": "AND"
    },
    "4429": {
      "op": "DUP2"
    },
    "4430": {
      "op": "EQ"
    },
    "4431": {
      "op": "PUSH2",
      "value": "0x1157"
    },
    "4434": {
      "op": "JUMPI"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4437": {
      "op": "DUP1"
    },
    "4438": {
      "op": "REVERT"
    },
    "4439": {
      "op": "JUMPDEST"
    },
    "4440": {
      "op": "SWAP2"
    },
    "4441": {
      "op": "SWAP1"
    },
    "4442": {
      "op": "POP"
    },
    "4443": {
      "jump": "o",
      "op": "JUMP"
    },
    "4444": {
      "op": "JUMPDEST"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4447": {
      "op": "DUP1"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4450": {
      "op": "DUP4"
    },
    "4451": {
      "op": "DUP6"
    },
    "4452": {
      "op": "SUB"
    },
    "4453": {
      "op": "SLT"
    },
    "4454": {
      "op": "ISZERO"
    },
    "4455": {
      "op": "PUSH2",
      "value": "0x116F"
    },
    "4458": {
      "op": "JUMPI"
    },
    "4459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4461": {
      "op": "DUP1"
    },
    "4462": {
      "op": "REVERT"
    },
    "4463": {
      "op": "JUMPDEST"
    },
    "4464": {
      "op": "PUSH2",
      "value": "0x1178"
    },
    "4467": {
      "op": "DUP4"
    },
    "4468": {
      "op": "PUSH2",
      "value": "0x1140"
    },
    "4471": {
      "jump": "i",
      "op": "JUMP"
    },
    "4472": {
      "op": "JUMPDEST"
    },
    "4473": {
      "op": "SWAP5"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4476": {
      "op": "SWAP4"
    },
    "4477": {
      "op": "SWAP1"
    },
    "4478": {
      "op": "SWAP4"
    },
    "4479": {
      "op": "ADD"
    },
    "4480": {
      "op": "CALLDATALOAD"
    },
    "4481": {
      "op": "SWAP4"
    },
    "4482": {
      "op": "POP"
    },
    "4483": {
      "op": "POP"
    },
    "4484": {
      "op": "POP"
    },
    "4485": {
      "jump": "o",
      "op": "JUMP"
    },
    "4486": {
      "op": "JUMPDEST"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4489": {
      "op": "DUP1"
    },
    "4490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4494": {
      "op": "DUP5"
    },
    "4495": {
      "op": "DUP7"
    },
    "4496": {
      "op": "SUB"
    },
    "4497": {
      "op": "SLT"
    },
    "4498": {
      "op": "ISZERO"
    },
    "4499": {
      "op": "PUSH2",
      "value": "0x119B"
    },
    "4502": {
      "op": "JUMPI"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4505": {
      "op": "DUP1"
    },
    "4506": {
      "op": "REVERT"
    },
    "4507": {
      "op": "JUMPDEST"
    },
    "4508": {
      "op": "PUSH2",
      "value": "0x11A4"
    },
    "4511": {
      "op": "DUP5"
    },
    "4512": {
      "op": "PUSH2",
      "value": "0x1140"
    },
    "4515": {
      "jump": "i",
      "op": "JUMP"
    },
    "4516": {
      "op": "JUMPDEST"
    },
    "4517": {
      "op": "SWAP3"
    },
    "4518": {
      "op": "POP"
    },
    "4519": {
      "op": "PUSH2",
      "value": "0x11B2"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4524": {
      "op": "DUP6"
    },
    "4525": {
      "op": "ADD"
    },
    "4526": {
      "op": "PUSH2",
      "value": "0x1140"
    },
    "4529": {
      "jump": "i",
      "op": "JUMP"
    },
    "4530": {
      "op": "JUMPDEST"
    },
    "4531": {
      "op": "SWAP2"
    },
    "4532": {
      "op": "POP"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4535": {
      "op": "DUP5"
    },
    "4536": {
      "op": "ADD"
    },
    "4537": {
      "op": "CALLDATALOAD"
    },
    "4538": {
      "op": "SWAP1"
    },
    "4539": {
      "op": "POP"
    },
    "4540": {
      "op": "SWAP3"
    },
    "4541": {
      "op": "POP"
    },
    "4542": {
      "op": "SWAP3"
    },
    "4543": {
      "op": "POP"
    },
    "4544": {
      "op": "SWAP3"
    },
    "4545": {
      "jump": "o",
      "op": "JUMP"
    },
    "4546": {
      "op": "JUMPDEST"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4551": {
      "op": "DUP3"
    },
    "4552": {
      "op": "DUP5"
    },
    "4553": {
      "op": "SUB"
    },
    "4554": {
      "op": "SLT"
    },
    "4555": {
      "op": "ISZERO"
    },
    "4556": {
      "op": "PUSH2",
      "value": "0x11D4"
    },
    "4559": {
      "op": "JUMPI"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4562": {
      "op": "DUP1"
    },
    "4563": {
      "op": "REVERT"
    },
    "4564": {
      "op": "JUMPDEST"
    },
    "4565": {
      "op": "PUSH2",
      "value": "0x11DD"
    },
    "4568": {
      "op": "DUP3"
    },
    "4569": {
      "op": "PUSH2",
      "value": "0x1140"
    },
    "4572": {
      "jump": "i",
      "op": "JUMP"
    },
    "4573": {
      "op": "JUMPDEST"
    },
    "4574": {
      "op": "SWAP4"
    },
    "4575": {
      "op": "SWAP3"
    },
    "4576": {
      "op": "POP"
    },
    "4577": {
      "op": "POP"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "jump": "o",
      "op": "JUMP"
    },
    "4580": {
      "op": "JUMPDEST"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4585": {
      "op": "DUP3"
    },
    "4586": {
      "op": "DUP5"
    },
    "4587": {
      "op": "SUB"
    },
    "4588": {
      "op": "SLT"
    },
    "4589": {
      "op": "ISZERO"
    },
    "4590": {
      "op": "PUSH2",
      "value": "0x11F6"
    },
    "4593": {
      "op": "JUMPI"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4596": {
      "op": "DUP1"
    },
    "4597": {
      "op": "REVERT"
    },
    "4598": {
      "op": "JUMPDEST"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "CALLDATALOAD"
    },
    "4601": {
      "op": "SWAP2"
    },
    "4602": {
      "op": "SWAP1"
    },
    "4603": {
      "op": "POP"
    },
    "4604": {
      "jump": "o",
      "op": "JUMP"
    },
    "4605": {
      "op": "JUMPDEST"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4608": {
      "op": "DUP1"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4611": {
      "op": "DUP4"
    },
    "4612": {
      "op": "DUP6"
    },
    "4613": {
      "op": "SUB"
    },
    "4614": {
      "op": "SLT"
    },
    "4615": {
      "op": "ISZERO"
    },
    "4616": {
      "op": "PUSH2",
      "value": "0x1210"
    },
    "4619": {
      "op": "JUMPI"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4622": {
      "op": "DUP1"
    },
    "4623": {
      "op": "REVERT"
    },
    "4624": {
      "op": "JUMPDEST"
    },
    "4625": {
      "op": "PUSH2",
      "value": "0x1219"
    },
    "4628": {
      "op": "DUP4"
    },
    "4629": {
      "op": "PUSH2",
      "value": "0x1140"
    },
    "4632": {
      "jump": "i",
      "op": "JUMP"
    },
    "4633": {
      "op": "JUMPDEST"
    },
    "4634": {
      "op": "SWAP2"
    },
    "4635": {
      "op": "POP"
    },
    "4636": {
      "op": "PUSH2",
      "value": "0x1227"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4641": {
      "op": "DUP5"
    },
    "4642": {
      "op": "ADD"
    },
    "4643": {
      "op": "PUSH2",
      "value": "0x1140"
    },
    "4646": {
      "jump": "i",
      "op": "JUMP"
    },
    "4647": {
      "op": "JUMPDEST"
    },
    "4648": {
      "op": "SWAP1"
    },
    "4649": {
      "op": "POP"
    },
    "4650": {
      "op": "SWAP3"
    },
    "4651": {
      "op": "POP"
    },
    "4652": {
      "op": "SWAP3"
    },
    "4653": {
      "op": "SWAP1"
    },
    "4654": {
      "op": "POP"
    },
    "4655": {
      "jump": "o",
      "op": "JUMP"
    },
    "4656": {
      "op": "JUMPDEST"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4659": {
      "op": "DUP2"
    },
    "4660": {
      "op": "DUP2"
    },
    "4661": {
      "op": "SHR"
    },
    "4662": {
      "op": "SWAP1"
    },
    "4663": {
      "op": "DUP3"
    },
    "4664": {
      "op": "AND"
    },
    "4665": {
      "op": "DUP1"
    },
    "4666": {
      "op": "PUSH2",
      "value": "0x1244"
    },
    "4669": {
      "op": "JUMPI"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4672": {
      "op": "DUP3"
    },
    "4673": {
      "op": "AND"
    },
    "4674": {
      "op": "SWAP2"
    },
    "4675": {
      "op": "POP"
    },
    "4676": {
      "op": "JUMPDEST"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4679": {
      "op": "DUP3"
    },
    "4680": {
      "op": "LT"
    },
    "4681": {
      "op": "DUP2"
    },
    "4682": {
      "op": "SUB"
    },
    "4683": {
      "op": "PUSH2",
      "value": "0x1264"
    },
    "4686": {
      "op": "JUMPI"
    },
    "4687": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4694": {
      "op": "SHL"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4697": {
      "op": "MSTORE"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4700": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4702": {
      "op": "MSTORE"
    },
    "4703": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4707": {
      "op": "REVERT"
    },
    "4708": {
      "op": "JUMPDEST"
    },
    "4709": {
      "op": "POP"
    },
    "4710": {
      "op": "SWAP2"
    },
    "4711": {
      "op": "SWAP1"
    },
    "4712": {
      "op": "POP"
    },
    "4713": {
      "jump": "o",
      "op": "JUMP"
    },
    "4714": {
      "op": "JUMPDEST"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4717": {
      "op": "DUP1"
    },
    "4718": {
      "op": "DUP3"
    },
    "4719": {
      "op": "MSTORE"
    },
    "4720": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4722": {
      "op": "SWAP1"
    },
    "4723": {
      "op": "DUP3"
    },
    "4724": {
      "op": "ADD"
    },
    "4725": {
      "op": "MSTORE"
    },
    "4726": {
      "op": "PUSH32",
      "value": "0x596F75206E65656420746F207374616B65206265666F726520756E7374616B69"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4761": {
      "op": "DUP3"
    },
    "4762": {
      "op": "ADD"
    },
    "4763": {
      "op": "MSTORE"
    },
    "4764": {
      "op": "PUSH3",
      "value": "0x373397"
    },
    "4768": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "4770": {
      "op": "SHL"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4773": {
      "op": "DUP3"
    },
    "4774": {
      "op": "ADD"
    },
    "4775": {
      "op": "MSTORE"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4778": {
      "op": "ADD"
    },
    "4779": {
      "op": "SWAP1"
    },
    "4780": {
      "jump": "o",
      "op": "JUMP"
    },
    "4781": {
      "op": "JUMPDEST"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4786": {
      "op": "DUP3"
    },
    "4787": {
      "op": "DUP5"
    },
    "4788": {
      "op": "SUB"
    },
    "4789": {
      "op": "SLT"
    },
    "4790": {
      "op": "ISZERO"
    },
    "4791": {
      "op": "PUSH2",
      "value": "0x12BF"
    },
    "4794": {
      "op": "JUMPI"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4797": {
      "op": "DUP1"
    },
    "4798": {
      "op": "REVERT"
    },
    "4799": {
      "op": "JUMPDEST"
    },
    "4800": {
      "op": "DUP2"
    },
    "4801": {
      "op": "MLOAD"
    },
    "4802": {
      "op": "DUP1"
    },
    "4803": {
      "op": "ISZERO"
    },
    "4804": {
      "op": "ISZERO"
    },
    "4805": {
      "op": "DUP2"
    },
    "4806": {
      "op": "EQ"
    },
    "4807": {
      "op": "PUSH2",
      "value": "0x11DD"
    },
    "4810": {
      "op": "JUMPI"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4813": {
      "op": "DUP1"
    },
    "4814": {
      "op": "REVERT"
    },
    "4815": {
      "op": "JUMPDEST"
    },
    "4816": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4823": {
      "op": "SHL"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4826": {
      "op": "MSTORE"
    },
    "4827": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4831": {
      "op": "MSTORE"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4836": {
      "op": "REVERT"
    },
    "4837": {
      "op": "JUMPDEST"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4840": {
      "op": "DUP3"
    },
    "4841": {
      "op": "NOT"
    },
    "4842": {
      "op": "DUP3"
    },
    "4843": {
      "op": "GT"
    },
    "4844": {
      "op": "ISZERO"
    },
    "4845": {
      "op": "PUSH2",
      "value": "0x12F8"
    },
    "4848": {
      "op": "JUMPI"
    },
    "4849": {
      "op": "PUSH2",
      "value": "0x12F8"
    },
    "4852": {
      "op": "PUSH2",
      "value": "0x12CF"
    },
    "4855": {
      "jump": "i",
      "op": "JUMP"
    },
    "4856": {
      "op": "JUMPDEST"
    },
    "4857": {
      "op": "POP"
    },
    "4858": {
      "op": "ADD"
    },
    "4859": {
      "op": "SWAP1"
    },
    "4860": {
      "jump": "o",
      "op": "JUMP"
    },
    "4861": {
      "op": "JUMPDEST"
    },
    "4862": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4869": {
      "op": "SHL"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4872": {
      "op": "MSTORE"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4877": {
      "op": "MSTORE"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4882": {
      "op": "REVERT"
    },
    "4883": {
      "op": "JUMPDEST"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4886": {
      "op": "DUP3"
    },
    "4887": {
      "op": "PUSH2",
      "value": "0x1322"
    },
    "4890": {
      "op": "JUMPI"
    },
    "4891": {
      "op": "PUSH2",
      "value": "0x1322"
    },
    "4894": {
      "op": "PUSH2",
      "value": "0x12FD"
    },
    "4897": {
      "jump": "i",
      "op": "JUMP"
    },
    "4898": {
      "op": "JUMPDEST"
    },
    "4899": {
      "op": "POP"
    },
    "4900": {
      "op": "MOD"
    },
    "4901": {
      "op": "SWAP1"
    },
    "4902": {
      "jump": "o",
      "op": "JUMP"
    },
    "4903": {
      "op": "JUMPDEST"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4906": {
      "op": "DUP3"
    },
    "4907": {
      "op": "DUP3"
    },
    "4908": {
      "op": "LT"
    },
    "4909": {
      "op": "ISZERO"
    },
    "4910": {
      "op": "PUSH2",
      "value": "0x1339"
    },
    "4913": {
      "op": "JUMPI"
    },
    "4914": {
      "op": "PUSH2",
      "value": "0x1339"
    },
    "4917": {
      "op": "PUSH2",
      "value": "0x12CF"
    },
    "4920": {
      "jump": "i",
      "op": "JUMP"
    },
    "4921": {
      "op": "JUMPDEST"
    },
    "4922": {
      "op": "POP"
    },
    "4923": {
      "op": "SUB"
    },
    "4924": {
      "op": "SWAP1"
    },
    "4925": {
      "jump": "o",
      "op": "JUMP"
    },
    "4926": {
      "op": "JUMPDEST"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4929": {
      "op": "DUP3"
    },
    "4930": {
      "op": "PUSH2",
      "value": "0x134D"
    },
    "4933": {
      "op": "JUMPI"
    },
    "4934": {
      "op": "PUSH2",
      "value": "0x134D"
    },
    "4937": {
      "op": "PUSH2",
      "value": "0x12FD"
    },
    "4940": {
      "jump": "i",
      "op": "JUMP"
    },
    "4941": {
      "op": "JUMPDEST"
    },
    "4942": {
      "op": "POP"
    },
    "4943": {
      "op": "DIV"
    },
    "4944": {
      "op": "SWAP1"
    },
    "4945": {
      "jump": "o",
      "op": "JUMP"
    },
    "4946": {
      "op": "JUMPDEST"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4949": {
      "op": "DUP2"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4952": {
      "op": "NOT"
    },
    "4953": {
      "op": "DIV"
    },
    "4954": {
      "op": "DUP4"
    },
    "4955": {
      "op": "GT"
    },
    "4956": {
      "op": "DUP3"
    },
    "4957": {
      "op": "ISZERO"
    },
    "4958": {
      "op": "ISZERO"
    },
    "4959": {
      "op": "AND"
    },
    "4960": {
      "op": "ISZERO"
    },
    "4961": {
      "op": "PUSH2",
      "value": "0x136C"
    },
    "4964": {
      "op": "JUMPI"
    },
    "4965": {
      "op": "PUSH2",
      "value": "0x136C"
    },
    "4968": {
      "op": "PUSH2",
      "value": "0x12CF"
    },
    "4971": {
      "jump": "i",
      "op": "JUMP"
    },
    "4972": {
      "op": "JUMPDEST"
    },
    "4973": {
      "op": "POP"
    },
    "4974": {
      "op": "MUL"
    },
    "4975": {
      "op": "SWAP1"
    },
    "4976": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "5c5795724eba70d075dcfa345ad25ded81560dae",
  "source": "pragma solidity ^0.8.14;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract CookieCapital is ERC20 {\n\n    ERC20 private _stakedToken;\n    address public _stakedTokenAddress;\n    uint256 public _totalCookiesEaten;\n\n    mapping (address => uint256) public _staked;\n    mapping (address => uint256) public _cookiePower;\n    mapping (address => uint256) public _lastStaked;\n\n    event Staked(address indexed user, uint256 amount);\n    event Unstaked(address indexed user, uint256 amount);\n    event Harvest(address indexed user, uint256 amount);\n    event Eat(address indexed user, uint256 amount);\n\n    constructor (address stakedTokenAddress) ERC20(\"Cookies\", \"COK\") {\n        _stakedTokenAddress = stakedTokenAddress;\n        _stakedToken = ERC20(stakedTokenAddress);\n    }\n\n    function stake(uint256 amount) public {\n        require(amount > 0, \"Must stake more than 0 tokens.\");\n        if (_staked[msg.sender] > 0) {\n            unstake();\n        }\n        _stakedToken.transferFrom(msg.sender, address(this), amount);\n        _staked[msg.sender] = amount;\n        _lastStaked[msg.sender] = block.timestamp;\n        emit Staked(msg.sender, amount);\n    }\n\n    function unstake() public {\n        require(_staked[msg.sender] > 0, \"You need to stake before unstaking.\");\n        harvest();\n        uint256 staked = _staked[msg.sender];\n        _staked[msg.sender] = 0;\n        _stakedToken.transfer(msg.sender, staked);\n        emit Unstaked(msg.sender, staked);\n    }\n\n    function emergencyUnstake() public {\n        require(_staked[msg.sender] > 0, \"You need to stake before unstaking.\");\n        uint256 staked = _staked[msg.sender];\n        _staked[msg.sender] = 0;\n        _stakedToken.transfer(msg.sender, staked);\n        emit Unstaked(msg.sender, staked);\n    }\n\n    function calculateProfit(address addr) public view returns (uint256 profit) {\n        uint256 hoursSpent = ((block.timestamp - _lastStaked[addr]) * 1000) / 3600;\n        uint256 cookieMultiplier = (1000 + _cookiePower[addr]);\n        uint256 cookies = (_staked[addr] * hoursSpent * cookieMultiplier) / 1000;\n        return cookies;\n    }\n\n    function harvest() public returns (uint256 earnedCookies) {\n        require(_staked[msg.sender] > 0, \"You haven't staked anything.\");\n        uint256 cookies = calculateProfit(msg.sender);\n        _lastStaked[msg.sender] = block.timestamp;\n        _mint(msg.sender, cookies);\n        emit Harvest(msg.sender, cookies);\n        return cookies;\n    }\n\n    function eat(uint256 amount) public {\n        harvest();\n        require(amount >= (1000 * 10**18), \"Must eat at least 1000 cookies.\");\n        require(balanceOf(msg.sender) >= amount, \"Not enough cookies in balance.\");\n        uint256 remaining = amount % (1000 * 10**18);\n        _burn(msg.sender, amount - remaining);\n        _cookiePower[msg.sender] += (amount - remaining) / (1000 * 10**18);\n        emit Eat(msg.sender, (amount - remaining));\n    }\n\n    function harvestAndEat() public {\n        require((calculateProfit(msg.sender) + balanceOf(msg.sender)) > (1000 * 10**18), \"Must eat more than 1000 cookies.\");\n        uint256 harvested = harvest();\n        eat(harvested);\n    }\n}",
  "sourceMap": "83:3098:4:-:0;;;616:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:0;;;;;;;;;;;;;-1:-1:-1;;;1978:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:0;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2067:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;691:19:4::1;:40:::0;;-1:-1:-1;;;;;691:40:4;;::::1;-1:-1:-1::0;;;;;;691:40:4;;::::1;::::0;::::1;::::0;;;741:12:::1;:40:::0;;;;::::1;;::::0;;;-1:-1:-1;83:3098:4;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;83:3098:4;;;-1:-1:-1;83:3098:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;309:380::-;388:1;384:12;;;;431;;;452:61;;506:4;498:6;494:17;484:27;;452:61;559:2;551:6;548:14;528:18;525:38;522:161;;605:10;600:3;596:20;593:1;586:31;640:4;637:1;630:15;668:4;665:1;658:15;522:161;;309:380;;;:::o;:::-;83:3098:4;;;;;;",
  "sourcePath": "contracts/cookie.sol",
  "type": "contract"
}