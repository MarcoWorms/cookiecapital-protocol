{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "stakedTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Eat",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Harvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_cookiePower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_lastStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_staked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_stakedTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_totalCookiesEaten",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "calculateProfit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "eat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "earnedCookies",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestAndEat",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/worms/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "1": "/Users/worms/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/worms/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "3": "/Users/worms/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "4": "contracts/cookie.sol"
  },
  "ast": {
    "absolutePath": "contracts/cookie.sol",
    "exportedSymbols": {
      "Context": [
        1085
      ],
      "CookieCapital": [
        372
      ],
      "ERC20": [
        960
      ],
      "IERC20": [
        1038
      ],
      "IERC20Metadata": [
        1063
      ]
    },
    "id": 373,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/worms/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 373,
        "sourceUnit": 961,
        "src": "26:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 960,
              "src": "109:5:4"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "109:5:4"
          }
        ],
        "canonicalName": "CookieCapital",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 372,
        "linearizedBaseContracts": [
          372,
          960,
          1063,
          1038,
          1085
        ],
        "name": "CookieCapital",
        "nameLocation": "92:13:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "_stakedToken",
            "nameLocation": "136:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 372,
            "src": "122:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$960",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 6,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 960,
                "src": "122:5:4"
              },
              "referencedDeclaration": 960,
              "src": "122:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$960",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "5ec8a5ff",
            "id": 9,
            "mutability": "mutable",
            "name": "_stakedTokenAddress",
            "nameLocation": "169:19:4",
            "nodeType": "VariableDeclaration",
            "scope": 372,
            "src": "154:34:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "154:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f5111518",
            "id": 11,
            "mutability": "mutable",
            "name": "_totalCookiesEaten",
            "nameLocation": "209:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 372,
            "src": "194:33:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ffd45a64",
            "id": 15,
            "mutability": "mutable",
            "name": "_staked",
            "nameLocation": "270:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 372,
            "src": "234:43:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "243:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "234:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 13,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "254:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f316a05",
            "id": 19,
            "mutability": "mutable",
            "name": "_cookiePower",
            "nameLocation": "319:12:4",
            "nodeType": "VariableDeclaration",
            "scope": 372,
            "src": "283:48:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "292:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "283:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 17,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "303:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8eebfae3",
            "id": 23,
            "mutability": "mutable",
            "name": "_lastStaked",
            "nameLocation": "373:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 372,
            "src": "337:47:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "346:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "337:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 21,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "357:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
            "id": 29,
            "name": "Staked",
            "nameLocation": "397:6:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "420:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "404:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "434:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "426:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "403:38:4"
            },
            "src": "391:51:4"
          },
          {
            "anonymous": false,
            "eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
            "id": 35,
            "name": "Unstaked",
            "nameLocation": "453:8:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "478:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "462:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "492:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "484:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "461:38:4"
            },
            "src": "447:53:4"
          },
          {
            "anonymous": false,
            "eventSelector": "c9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba",
            "id": 41,
            "name": "Harvest",
            "nameLocation": "511:7:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "535:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "519:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "549:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "541:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "518:38:4"
            },
            "src": "505:52:4"
          },
          {
            "anonymous": false,
            "eventSelector": "323082f42560de16c285b305bed7b898b58bac4dedddcad2b802992135dc7ed5",
            "id": 47,
            "name": "Eat",
            "nameLocation": "568:3:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "588:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "572:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "602:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "594:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "571:38:4"
            },
            "src": "562:48:4"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "681:107:4",
              "statements": [
                {
                  "expression": {
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56,
                      "name": "_stakedTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "691:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57,
                      "name": "stakedTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "713:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "691:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "691:40:4"
                },
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60,
                      "name": "_stakedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "741:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$960",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 62,
                          "name": "stakedTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "762:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 61,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "756:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$960_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "756:25:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$960",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "741:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$960",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "741:40:4"
                }
              ]
            },
            "id": 67,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "436f6f6b696573",
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "663:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e7104a47789a980aceb315c96878c34f90e0e53b63712b74a5c960b2c3d729c7",
                      "typeString": "literal_string \"Cookies\""
                    },
                    "value": "Cookies"
                  },
                  {
                    "hexValue": "434f4b",
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "674:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_79db66fc3716b4e48afbe258cd3493f9de38fad2b06a224f4a4a6797827e8896",
                      "typeString": "literal_string \"COK\""
                    },
                    "value": "COK"
                  }
                ],
                "id": 54,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 51,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 960,
                  "src": "657:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "657:23:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "stakedTokenAddress",
                  "nameLocation": "637:18:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 67,
                  "src": "629:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "628:28:4"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:0:4"
            },
            "scope": 372,
            "src": "616:172:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "832:342:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "850:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "859:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "850:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374207374616b65206d6f7265207468616e203020746f6b656e732e",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "862:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f398d73c209b19270c1d85e45765039fa6350c5732dd59da7ce4dae15447f63e",
                          "typeString": "literal_string \"Must stake more than 0 tokens.\""
                        },
                        "value": "Must stake more than 0 tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f398d73c209b19270c1d85e45765039fa6350c5732dd59da7ce4dae15447f63e",
                          "typeString": "literal_string \"Must stake more than 0 tokens.\""
                        }
                      ],
                      "id": 72,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "842:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "842:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "842:53:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 79,
                        "name": "_staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "909:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 82,
                      "indexExpression": {
                        "expression": {
                          "id": 80,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "917:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "917:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "909:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "931:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "909:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89,
                  "nodeType": "IfStatement",
                  "src": "905:63:4",
                  "trueBody": {
                    "id": 88,
                    "nodeType": "Block",
                    "src": "934:34:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 85,
                            "name": "unstake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "948:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "948:9:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87,
                        "nodeType": "ExpressionStatement",
                        "src": "948:9:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 93,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1003:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1003:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1023:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CookieCapital_$372",
                              "typeString": "contract CookieCapital"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CookieCapital_$372",
                              "typeString": "contract CookieCapital"
                            }
                          ],
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1015:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 95,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1015:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1015:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 99,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1030:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 90,
                        "name": "_stakedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "977:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$960",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 572,
                      "src": "977:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "977:60:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "977:60:4"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102,
                        "name": "_staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1047:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 105,
                      "indexExpression": {
                        "expression": {
                          "id": 103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1055:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1055:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1047:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 106,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "1069:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1047:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:28:4"
                },
                {
                  "expression": {
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 109,
                        "name": "_lastStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1085:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "expression": {
                          "id": 110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1097:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1097:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1085:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 113,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1111:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1111:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1085:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:41:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1148:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1148:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 120,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1160:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 117,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1141:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1141:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "EmitStatement",
                  "src": "1136:31:4"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "803:5:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "817:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "809:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "808:16:4"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:0:4"
            },
            "scope": 372,
            "src": "794:380:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1206:280:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 128,
                            "name": "_staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1224:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 131,
                          "indexExpression": {
                            "expression": {
                              "id": 129,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1232:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1232:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1224:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1246:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1224:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f207374616b65206265666f726520756e7374616b696e672e",
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1249:37:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcd8131d66928fa3059a4ac683921f1b4e67216c2154de3ad1d77635e85f3296",
                          "typeString": "literal_string \"You need to stake before unstaking.\""
                        },
                        "value": "You need to stake before unstaking."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcd8131d66928fa3059a4ac683921f1b4e67216c2154de3ad1d77635e85f3296",
                          "typeString": "literal_string \"You need to stake before unstaking.\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1216:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1216:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:71:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 137,
                      "name": "harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "1297:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1297:9:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 139,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:9:4"
                },
                {
                  "assignments": [
                    141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 141,
                      "mutability": "mutable",
                      "name": "staked",
                      "nameLocation": "1324:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 168,
                      "src": "1316:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1316:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "initialValue": {
                    "baseExpression": {
                      "id": 142,
                      "name": "_staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1333:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 145,
                    "indexExpression": {
                      "expression": {
                        "id": 143,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1341:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1341:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1333:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1316:36:4"
                },
                {
                  "expression": {
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 147,
                        "name": "_staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1362:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 150,
                      "indexExpression": {
                        "expression": {
                          "id": 148,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1370:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1370:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1362:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1384:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1362:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:23:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 157,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1417:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1417:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 159,
                        "name": "staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "1429:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 154,
                        "name": "_stakedToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1395:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$960",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 496,
                      "src": "1395:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:41:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 163,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1460:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1460:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 165,
                        "name": "staked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "1472:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 162,
                      "name": "Unstaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1451:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1451:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "EmitStatement",
                  "src": "1446:33:4"
                }
              ]
            },
            "functionSelector": "2def6620",
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nameLocation": "1189:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1196:2:4"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1206:0:4"
            },
            "scope": 372,
            "src": "1180:306:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 215,
              "nodeType": "Block",
              "src": "1568:261:4",
              "statements": [
                {
                  "assignments": [
                    177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 177,
                      "mutability": "mutable",
                      "name": "hoursSpent",
                      "nameLocation": "1586:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 215,
                      "src": "1578:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 176,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1578:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 178,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "1601:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "1601:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 180,
                                    "name": "_lastStaked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "1619:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 182,
                                  "indexExpression": {
                                    "id": 181,
                                    "name": "addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 171,
                                    "src": "1631:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1619:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1601:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 184,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1600:37:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1640:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "1600:44:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 187,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1599:46:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "33363030",
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1648:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3600_by_1",
                        "typeString": "int_const 3600"
                      },
                      "value": "3600"
                    },
                    "src": "1599:53:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1578:74:4"
                },
                {
                  "assignments": [
                    192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 192,
                      "mutability": "mutable",
                      "name": "cookieMultiplier",
                      "nameLocation": "1670:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 215,
                      "src": "1662:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 191,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1662:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 199,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030",
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1690:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 194,
                            "name": "_cookiePower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "1697:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 196,
                          "indexExpression": {
                            "id": 195,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1710:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1697:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1690:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 198,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1689:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1662:54:4"
                },
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "cookies",
                      "nameLocation": "1734:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 215,
                      "src": "1726:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1726:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 212,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 202,
                                "name": "_staked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15,
                                "src": "1745:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 204,
                              "indexExpression": {
                                "id": 203,
                                "name": "addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 171,
                                "src": "1753:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1745:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 205,
                              "name": "hoursSpent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 177,
                              "src": "1761:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1745:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 207,
                            "name": "cookieMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "1774:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1745:45:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 209,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1744:47:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1794:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "1744:54:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1726:72:4"
                },
                {
                  "expression": {
                    "id": 213,
                    "name": "cookies",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 201,
                    "src": "1815:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 175,
                  "id": 214,
                  "nodeType": "Return",
                  "src": "1808:14:4"
                }
              ]
            },
            "functionSelector": "b1c17506",
            "id": 216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateProfit",
            "nameLocation": "1501:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1525:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "1517:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1516:14:4"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "profit",
                  "nameLocation": "1560:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "1552:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1552:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1551:16:4"
            },
            "scope": 372,
            "src": "1492:337:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "1893:290:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 222,
                            "name": "_staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1911:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 225,
                          "indexExpression": {
                            "expression": {
                              "id": 223,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1919:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1919:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1911:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1933:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1911:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520686176656e2774207374616b656420616e797468696e672e",
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1936:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_480ed9d2b537f41b7fb114439663f8c1dc20845d12d91bcd7e859e8f9ffe1121",
                          "typeString": "literal_string \"You haven't staked anything.\""
                        },
                        "value": "You haven't staked anything."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_480ed9d2b537f41b7fb114439663f8c1dc20845d12d91bcd7e859e8f9ffe1121",
                          "typeString": "literal_string \"You haven't staked anything.\""
                        }
                      ],
                      "id": 221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1903:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1903:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "1903:64:4"
                },
                {
                  "assignments": [
                    232
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 232,
                      "mutability": "mutable",
                      "name": "cookies",
                      "nameLocation": "1985:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 260,
                      "src": "1977:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 231,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1977:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 237,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2011:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2011:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 233,
                      "name": "calculateProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "1995:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1995:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1977:45:4"
                },
                {
                  "expression": {
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 238,
                        "name": "_lastStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "2032:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 241,
                      "indexExpression": {
                        "expression": {
                          "id": 239,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2044:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2044:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2032:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 242,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2058:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2058:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2032:41:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "2032:41:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 247,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2089:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2089:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 249,
                        "name": "cookies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "2101:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 246,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 777,
                      "src": "2083:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2083:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "2083:26:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 253,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2132:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2132:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 255,
                        "name": "cookies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "2144:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 252,
                      "name": "Harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2124:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2124:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "EmitStatement",
                  "src": "2119:33:4"
                },
                {
                  "expression": {
                    "id": 258,
                    "name": "cookies",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 232,
                    "src": "2169:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 220,
                  "id": 259,
                  "nodeType": "Return",
                  "src": "2162:14:4"
                }
              ]
            },
            "functionSelector": "4641257d",
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nameLocation": "1844:7:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1851:2:4"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "earnedCookies",
                  "nameLocation": "1878:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "1870:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1870:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1869:23:4"
            },
            "scope": 372,
            "src": "1835:348:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 336,
              "nodeType": "Block",
              "src": "2225:418:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 266,
                      "name": "harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "2235:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2235:9:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "2235:9:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 270,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "2262:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              },
                              "id": 275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "31303030",
                                "id": 271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2273:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "id": 274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2280:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3138",
                                  "id": 273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2284:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                "src": "2280:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              },
                              "src": "2273:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              }
                            }
                          ],
                          "id": 276,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2272:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        },
                        "src": "2262:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420656174206174206c65617374203130303020636f6f6b6965732e",
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2289:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a6e6c21845b370523b2dc54625809ded52c16fddc0e79e22f0ea298033a391f",
                          "typeString": "literal_string \"Must eat at least 1000 cookies.\""
                        },
                        "value": "Must eat at least 1000 cookies."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a6e6c21845b370523b2dc54625809ded52c16fddc0e79e22f0ea298033a391f",
                          "typeString": "literal_string \"Must eat at least 1000 cookies.\""
                        }
                      ],
                      "id": 269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2254:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2254:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "2254:69:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 283,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2351:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2351:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 282,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "2341:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2341:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 286,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "2366:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2341:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820636f6f6b69657320696e2062616c616e63652e",
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2374:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ceef0f7d755a57e69c6152bcd58377be6f65a76e123f4cbb1c4942d19825fe5",
                          "typeString": "literal_string \"Not enough cookies in balance.\""
                        },
                        "value": "Not enough cookies in balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ceef0f7d755a57e69c6152bcd58377be6f65a76e123f4cbb1c4942d19825fe5",
                          "typeString": "literal_string \"Not enough cookies in balance.\""
                        }
                      ],
                      "id": 281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2333:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "2333:74:4"
                },
                {
                  "assignments": [
                    292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 292,
                      "mutability": "mutable",
                      "name": "remaining",
                      "nameLocation": "2425:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 336,
                      "src": "2417:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2417:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 301,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 293,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "2437:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2447:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2454:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2458:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "2454:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "2447:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "id": 299,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2446:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000"
                      }
                    },
                    "src": "2437:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2417:44:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 303,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2477:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2477:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 305,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 263,
                          "src": "2489:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 306,
                          "name": "remaining",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "2498:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2489:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 302,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 849,
                      "src": "2471:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:37:4"
                },
                {
                  "expression": {
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 310,
                        "name": "_cookiePower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "2518:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 313,
                      "indexExpression": {
                        "expression": {
                          "id": 311,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2531:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2531:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2518:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 314,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "2547:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 315,
                              "name": "remaining",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "2556:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2547:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 317,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2546:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            },
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31303030",
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2570:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2577:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2581:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "2577:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "2570:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000000"
                            }
                          }
                        ],
                        "id": 323,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2569:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      },
                      "src": "2546:38:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2518:66:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:66:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 328,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2603:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2603:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 330,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "2616:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 331,
                              "name": "remaining",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "2625:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2616:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 333,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2615:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 327,
                      "name": "Eat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "2599:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2599:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "EmitStatement",
                  "src": "2594:42:4"
                }
              ]
            },
            "functionSelector": "85e0ebaf",
            "id": 337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "eat",
            "nameLocation": "2198:3:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2210:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "2202:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2201:16:4"
            },
            "returnParameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2225:0:4"
            },
            "scope": 372,
            "src": "2189:454:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "2681:196:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 342,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2716:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 343,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2716:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 341,
                                  "name": "calculateProfit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "2700:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2700:27:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 346,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2740:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2740:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 345,
                                  "name": "balanceOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 471,
                                  "src": "2730:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2730:21:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2700:51:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 350,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2699:53:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "31303030",
                                "id": 351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2756:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000_by_1",
                                  "typeString": "int_const 1000"
                                },
                                "value": "1000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "id": 354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 352,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2763:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3138",
                                  "id": 353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2767:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                "src": "2763:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              },
                              "src": "2756:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000"
                              }
                            }
                          ],
                          "id": 356,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2755:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        },
                        "src": "2699:71:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420656174206d6f7265207468616e203130303020636f6f6b6965732e",
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2772:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0685f62a370b9e24d9215d5fea570a78694bcfba4a2331f108e62fc7eb0acdee",
                          "typeString": "literal_string \"Must eat more than 1000 cookies.\""
                        },
                        "value": "Must eat more than 1000 cookies."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0685f62a370b9e24d9215d5fea570a78694bcfba4a2331f108e62fc7eb0acdee",
                          "typeString": "literal_string \"Must eat more than 1000 cookies.\""
                        }
                      ],
                      "id": 340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2691:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2691:116:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 360,
                  "nodeType": "ExpressionStatement",
                  "src": "2691:116:4"
                },
                {
                  "assignments": [
                    362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "harvested",
                      "nameLocation": "2825:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 370,
                      "src": "2817:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 361,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2817:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 365,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 363,
                      "name": "harvest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "2837:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2837:9:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2817:29:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 367,
                        "name": "harvested",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "2860:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 366,
                      "name": "eat",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "2856:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2856:14:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "2856:14:4"
                }
              ]
            },
            "functionSelector": "c5d01d0c",
            "id": 371,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "harvestAndEat",
            "nameLocation": "2658:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2671:2:4"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2681:0:4"
            },
            "scope": 372,
            "src": "2649:228:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 373,
        "src": "83:2796:4",
        "usedErrors": []
      }
    ],
    "src": "0:2879:4"
  },
  "bytecode": "",
  "bytecodeSha1": "ed3b5e742198452efc7713fc585b8c918cc62b56",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "CookieCapital",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._approve": {
          "68": [
            10254,
            10273,
            true
          ],
          "69": [
            10332,
            10353,
            true
          ]
        },
        "ERC20._burn": {
          "76": [
            9207,
            9228,
            true
          ],
          "77": [
            9398,
            9422,
            true
          ]
        },
        "ERC20._mint": {
          "75": [
            8498,
            8519,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "70": [
            10966,
            11003,
            false
          ],
          "71": [
            11027,
            11053,
            true
          ]
        },
        "ERC20._transfer": {
          "72": [
            7614,
            7632,
            true
          ],
          "73": [
            7692,
            7708,
            true
          ],
          "74": [
            7863,
            7884,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "67": [
            6815,
            6850,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "CookieCapital.eat": {
          "62": [
            2262,
            2287,
            true
          ],
          "63": [
            2341,
            2372,
            true
          ]
        },
        "CookieCapital.harvestAndEat": {
          "66": [
            2699,
            2770,
            true
          ]
        },
        "CookieCapital.stake": {
          "64": [
            850,
            860,
            true
          ],
          "65": [
            909,
            932,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "ERC20._approve": {
          "40": [
            10246,
            10314
          ],
          "41": [
            10324,
            10392
          ],
          "42": [
            10403,
            10439
          ],
          "43": [
            10449,
            10486
          ]
        },
        "ERC20._burn": {
          "57": [
            9199,
            9266
          ],
          "58": [
            9390,
            9461
          ],
          "59": [
            9495,
            9539
          ],
          "60": [
            9559,
            9581
          ],
          "61": [
            9592,
            9634
          ]
        },
        "ERC20._mint": {
          "53": [
            8490,
            8555
          ],
          "54": [
            8626,
            8648
          ],
          "55": [
            8658,
            8686
          ],
          "56": [
            8696,
            8738
          ]
        },
        "ERC20._spendAllowance": {
          "44": [
            11019,
            11087
          ],
          "45": [
            11129,
            11180
          ]
        },
        "ERC20._transfer": {
          "46": [
            7606,
            7674
          ],
          "47": [
            7684,
            7748
          ],
          "48": [
            7855,
            7927
          ],
          "49": [
            7961,
            7999
          ],
          "50": [
            8019,
            8042
          ],
          "51": [
            8053,
            8084
          ],
          "52": [
            8095,
            8132
          ]
        },
        "ERC20.allowance": {
          "3": [
            4084,
            4118
          ]
        },
        "ERC20.approve": {
          "6": [
            4570,
            4602
          ],
          "7": [
            4612,
            4623
          ]
        },
        "ERC20.balanceOf": {
          "2": [
            3501,
            3526
          ]
        },
        "ERC20.decimals": {
          "1": [
            3168,
            3177
          ]
        },
        "ERC20.decreaseAllowance": {
          "29": [
            6807,
            6892
          ],
          "30": [
            6926,
            6986
          ]
        },
        "ERC20.increaseAllowance": {
          "16": [
            6015,
            6081
          ]
        },
        "ERC20.name": {
          "4": [
            2235,
            2247
          ]
        },
        "ERC20.symbol": {
          "28": [
            2448,
            2462
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3324,
            3343
          ]
        },
        "ERC20.transfer": {
          "37": [
            3862,
            3890
          ]
        },
        "ERC20.transferFrom": {
          "8": [
            5375,
            5413
          ],
          "9": [
            5423,
            5450
          ],
          "10": [
            5460,
            5471
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "Context._msgSender": {
          "5": [
            712,
            729
          ]
        }
      },
      "4": {
        "CookieCapital.eat": {
          "22": [
            2235,
            2244
          ],
          "23": [
            2254,
            2323
          ],
          "24": [
            2333,
            2407
          ],
          "25": [
            2471,
            2508
          ],
          "26": [
            2518,
            2584
          ],
          "27": [
            2594,
            2636
          ]
        },
        "CookieCapital.harvest": {
          "17": [
            1903,
            1967
          ],
          "18": [
            2032,
            2073
          ],
          "19": [
            2083,
            2109
          ],
          "20": [
            2119,
            2152
          ],
          "21": [
            2162,
            2176
          ]
        },
        "CookieCapital.harvestAndEat": {
          "38": [
            2691,
            2807
          ],
          "39": [
            2856,
            2870
          ]
        },
        "CookieCapital.stake": {
          "31": [
            842,
            895
          ],
          "32": [
            948,
            957
          ],
          "33": [
            977,
            1037
          ],
          "34": [
            1047,
            1075
          ],
          "35": [
            1085,
            1126
          ],
          "36": [
            1136,
            1167
          ]
        },
        "CookieCapital.unstake": {
          "11": [
            1216,
            1287
          ],
          "12": [
            1297,
            1306
          ],
          "13": [
            1362,
            1385
          ],
          "14": [
            1395,
            1436
          ],
          "15": [
            1446,
            1479
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101425760003560e01c806385e0ebaf116100b8578063a9059cbb1161007c578063a9059cbb146102b6578063b1c17506146102c9578063c5d01d0c146102dc578063dd62ed3e146102e4578063f51115181461031d578063ffd45a641461032657600080fd5b806385e0ebaf146102555780638eebfae31461026857806395d89b4114610288578063a457c2d714610290578063a694fc3a146102a357600080fd5b8063313ce5671161010a578063313ce567146101b757806339509351146101c65780634641257d146101d95780635ec8a5ff146101e15780635f316a051461020c57806370a082311461022c57600080fd5b806306fdde0314610147578063095ea7b31461016557806318160ddd1461018857806323b872dd1461019a5780632def6620146101ad575b600080fd5b61014f610346565b60405161015c9190611094565b60405180910390f35b610178610173366004611105565b6103d8565b604051901515815260200161015c565b6002545b60405190815260200161015c565b6101786101a836600461112f565b6103f0565b6101b5610414565b005b6040516012815260200161015c565b6101786101d4366004611105565b610551565b61018c610590565b6006546101f4906001600160a01b031681565b6040516001600160a01b03909116815260200161015c565b61018c61021a36600461116b565b60096020526000908152604090205481565b61018c61023a36600461116b565b6001600160a01b031660009081526020819052604090205490565b6101b561026336600461118d565b610650565b61018c61027636600461116b565b600a6020526000908152604090205481565b61014f6107bf565b61017861029e366004611105565b6107ce565b6101b56102b136600461118d565b610860565b6101786102c4366004611105565b610996565b61018c6102d736600461116b565b6109a4565b6101b5610a57565b61018c6102f23660046111a6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018c60075481565b61018c61033436600461116b565b60086020526000908152604090205481565b606060038054610355906111d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610381906111d9565b80156103ce5780601f106103a3576101008083540402835291602001916103ce565b820191906000526020600020905b8154815290600101906020018083116103b157829003601f168201915b5050505050905090565b6000336103e6818585610aea565b5060019392505050565b6000336103fe858285610c0f565b610409858585610ca1565b506001949350505050565b336000908152600860205260409020546104815760405162461bcd60e51b815260206004820152602360248201527f596f75206e65656420746f207374616b65206265666f726520756e7374616b6960448201526237339760e91b60648201526084015b60405180910390fd5b610489610590565b50336000818152600860205260408082208054929055600554905163a9059cbb60e01b815260048101939093526024830182905290916001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105179190611213565b5060405181815233907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75906020015b60405180910390a250565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103e6908290869061058b90879061124b565b610aea565b336000908152600860205260408120546105ec5760405162461bcd60e51b815260206004820152601c60248201527f596f7520686176656e2774207374616b656420616e797468696e672e000000006044820152606401610478565b60006105f7336109a4565b336000818152600a602052604090204290559091506106169082610e6f565b60405181815233907fc9695243a805adb74c91f28311176c65b417e842d5699893cef56d18bfa48cba9060200160405180910390a2919050565b610658610590565b50683635c9adc5dea000008110156106b25760405162461bcd60e51b815260206004820152601f60248201527f4d75737420656174206174206c65617374203130303020636f6f6b6965732e006044820152606401610478565b336000908152602081905260409020548111156107115760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420656e6f75676820636f6f6b69657320696e2062616c616e63652e00006044820152606401610478565b6000610726683635c9adc5dea0000083611279565b905061073b33610736838561128d565b610f4e565b683635c9adc5dea0000061074f828461128d565b61075991906112a4565b336000908152600960205260408120805490919061077890849061124b565b909155503390507f323082f42560de16c285b305bed7b898b58bac4dedddcad2b802992135dc7ed56107aa838561128d565b60405190815260200160405180910390a25050565b606060048054610355906111d9565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156108535760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610478565b6104098286868403610aea565b600081116108b05760405162461bcd60e51b815260206004820152601e60248201527f4d757374207374616b65206d6f7265207468616e203020746f6b656e732e00006044820152606401610478565b33600090815260086020526040902054156108cd576108cd610414565b6005546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610924573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109489190611213565b50336000818152600860209081526040808320859055600a82529182902042905590518381527f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9101610546565b6000336103e6818585610ca1565b6001600160a01b0381166000908152600a60205260408120548190610e10906109cd904261128d565b6109d9906103e86112b8565b6109e391906112a4565b6001600160a01b03841660009081526009602052604081205491925090610a0c906103e861124b565b6001600160a01b038516600090815260086020526040812054919250906103e8908390610a3a9086906112b8565b610a4491906112b8565b610a4e91906112a4565b95945050505050565b33600090815260208190526040902054683635c9adc5dea0000090610a7b336109a4565b610a85919061124b565b11610ad25760405162461bcd60e51b815260206004820181905260248201527f4d75737420656174206d6f7265207468616e203130303020636f6f6b6965732e6044820152606401610478565b6000610adc610590565b9050610ae781610650565b50565b6001600160a01b038316610b4c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610478565b6001600160a01b038216610bad5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610478565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610c9b5781811015610c8e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610478565b610c9b8484848403610aea565b50505050565b6001600160a01b038316610d055760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610478565b6001600160a01b038216610d675760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610478565b6001600160a01b03831660009081526020819052604090205481811015610ddf5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610478565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610e1690849061124b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e6291815260200190565b60405180910390a3610c9b565b6001600160a01b038216610ec55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610478565b8060026000828254610ed7919061124b565b90915550506001600160a01b03821660009081526020819052604081208054839290610f0490849061124b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610fae5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610478565b6001600160a01b038216600090815260208190526040902054818110156110225760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610478565b6001600160a01b038316600090815260208190526040812083830390556002805484929061105190849061128d565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c02565b600060208083528351808285015260005b818110156110c1578581018301518582016040015282016110a5565b818111156110d3576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461110057600080fd5b919050565b6000806040838503121561111857600080fd5b611121836110e9565b946020939093013593505050565b60008060006060848603121561114457600080fd5b61114d846110e9565b925061115b602085016110e9565b9150604084013590509250925092565b60006020828403121561117d57600080fd5b611186826110e9565b9392505050565b60006020828403121561119f57600080fd5b5035919050565b600080604083850312156111b957600080fd5b6111c2836110e9565b91506111d0602084016110e9565b90509250929050565b600181811c908216806111ed57607f821691505b60208210810361120d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561122557600080fd5b8151801515811461118657600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561125e5761125e611235565b500190565b634e487b7160e01b600052601260045260246000fd5b60008261128857611288611263565b500690565b60008282101561129f5761129f611235565b500390565b6000826112b3576112b3611263565b500490565b60008160001904831182151516156112d2576112d2611235565b50029056fea2646970667358221220d78b6fb892563b8cbb2ca927853b4f00127972053557b03b974e2b3b62153bd664736f6c634300080e0033",
  "deployedSourceMap": "83:2796:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:5;;1211:22;1193:41;;1181:2;1166:18;4433:197:0;1053:187:5;3244:106:0;3331:12;;3244:106;;;1391:25:5;;;1379:2;1364:18;3244:106:0;1245:177:5;5192:286:0;;;;;;:::i;:::-;;:::i;1180:306:4:-;;;:::i;:::-;;3093:91:0;;;3175:2;1902:36:5;;1890:2;1875:18;3093:91:0;1760:184:5;5873:236:0;;;;;;:::i;:::-;;:::i;1835:348:4:-;;;:::i;154:34::-;;;;;-1:-1:-1;;;;;154:34:4;;;;;;-1:-1:-1;;;;;2113:32:5;;;2095:51;;2083:2;2068:18;154:34:4;1949:203:5;283:48:4;;;;;;:::i;:::-;;;;;;;;;;;;;;3408:125:0;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:0;3482:7;3508:18;;;;;;;;;;;;3408:125;2189:454:4;;;;;;:::i;:::-;;:::i;337:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;2367:102:0;;;:::i;6596:429::-;;;;;;:::i;:::-;;:::i;794:380:4:-;;;;;;:::i;:::-;;:::i;3729:189:0:-;;;;;;:::i;:::-;;:::i;1492:337:4:-;;;;;;:::i;:::-;;:::i;2649:228::-;;;:::i;3976:149:0:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4091:18:0;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;194:33:4;;;;;;234:43;;;;;;:::i;:::-;;;;;;;;;;;;;;2156:98:0;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:3;4570:32:0;719:10:3;4586:7:0;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:0;;4433:197;-1:-1:-1;;;4433:197:0:o;5192:286::-;5319:4;719:10:3;5375:38:0;5391:4;719:10:3;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;1180:306:4:-;1232:10;1246:1;1224:19;;;:7;:19;;;;;;1216:71;;;;-1:-1:-1;;;1216:71:4;;3385:2:5;1216:71:4;;;3367:21:5;3424:2;3404:18;;;3397:30;3463:34;3443:18;;;3436:62;-1:-1:-1;;;3514:18:5;;;3507:33;3557:19;;1216:71:4;;;;;;;;;1297:9;:7;:9::i;:::-;-1:-1:-1;1341:10:4;1316:14;1333:19;;;:7;:19;;;;;;;;1362:23;;;1395:12;;:41;;-1:-1:-1;;;1395:41:4;;;;;3761:51:5;;;;3828:18;;;3821:34;;;1333:19:4;;-1:-1:-1;;;;;1395:12:4;;;;:21;;3734:18:5;;1395:41:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1451:28:4;;1391:25:5;;;1460:10:4;;1451:28;;1379:2:5;1364:18;1451:28:4;;;;;;;;1206:280;1180:306::o;5873:236:0:-;719:10:3;5961:4:0;6040:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6040:27:0;;;;;;;;;;5961:4;;719:10:3;6015:66:0;;719:10:3;;6040:27:0;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;1835:348:4:-;1919:10;1870:21;1911:19;;;:7;:19;;;;;;1903:64;;;;-1:-1:-1;;;1903:64:4;;4615:2:5;1903:64:4;;;4597:21:5;4654:2;4634:18;;;4627:30;4693;4673:18;;;4666:58;4741:18;;1903:64:4;4413:352:5;1903:64:4;1977:15;1995:27;2011:10;1995:15;:27::i;:::-;2044:10;2032:23;;;;:11;:23;;;;;2058:15;2032:41;;1977:45;;-1:-1:-1;2083:26:4;;1977:45;2083:5;:26::i;:::-;2124:28;;1391:25:5;;;2132:10:4;;2124:28;;1379:2:5;1364:18;2124:28:4;;;;;;;2169:7;1835:348;-1:-1:-1;1835:348:4:o;2189:454::-;2235:9;:7;:9::i;:::-;;2273:13;2262:6;:25;;2254:69;;;;-1:-1:-1;;;2254:69:4;;4972:2:5;2254:69:4;;;4954:21:5;5011:2;4991:18;;;4984:30;5050:33;5030:18;;;5023:61;5101:18;;2254:69:4;4770:355:5;2254:69:4;2351:10;3482:7:0;3508:18;;;;;;;;;;;2366:6:4;-1:-1:-1;2341:31:4;2333:74;;;;-1:-1:-1;;;2333:74:4;;5332:2:5;2333:74:4;;;5314:21:5;5371:2;5351:18;;;5344:30;5410:32;5390:18;;;5383:60;5460:18;;2333:74:4;5130:354:5;2333:74:4;2417:17;2437:24;2447:13;2437:6;:24;:::i;:::-;2417:44;-1:-1:-1;2471:37:4;2477:10;2489:18;2417:44;2489:6;:18;:::i;:::-;2471:5;:37::i;:::-;2570:13;2547:18;2556:9;2547:6;:18;:::i;:::-;2546:38;;;;:::i;:::-;2531:10;2518:24;;;;:12;:24;;;;;:66;;:24;;;:66;;;;;:::i;:::-;;;;-1:-1:-1;2603:10:4;;-1:-1:-1;2599:37:4;2616:18;2625:9;2616:6;:18;:::i;:::-;2599:37;;1391:25:5;;;1379:2;1364:18;2599:37:4;;;;;;;2225:418;2189:454;:::o;2367:102:0:-;2423:13;2455:7;2448:14;;;;;:::i;6596:429::-;719:10:3;6689:4:0;6770:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;6770:27:0;;;;;;;;;;6689:4;;719:10:3;6815:35:0;;;;6807:85;;;;-1:-1:-1;;;6807:85:0;;6195:2:5;6807:85:0;;;6177:21:5;6234:2;6214:18;;;6207:30;6273:34;6253:18;;;6246:62;-1:-1:-1;;;6324:18:5;;;6317:35;6369:19;;6807:85:0;5993:401:5;6807:85:0;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;794:380:4:-;859:1;850:6;:10;842:53;;;;-1:-1:-1;;;842:53:4;;6601:2:5;842:53:4;;;6583:21:5;6640:2;6620:18;;;6613:30;6679:32;6659:18;;;6652:60;6729:18;;842:53:4;6399:354:5;842:53:4;917:10;931:1;909:19;;;:7;:19;;;;;;:23;905:63;;948:9;:7;:9::i;:::-;977:12;;:60;;-1:-1:-1;;;977:60:4;;1003:10;977:60;;;6998:34:5;1023:4:4;7048:18:5;;;7041:43;7100:18;;;7093:34;;;-1:-1:-1;;;;;977:12:4;;;;:25;;6933:18:5;;977:60:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1055:10:4;1047:19;;;;:7;:19;;;;;;;;:28;;;1085:11;:23;;;;;;1111:15;1085:41;;1141:26;;1391:25:5;;;1141:26:4;;1364:18:5;1141:26:4;1245:177:5;3729:189:0;3808:4;719:10:3;3862:28:0;719:10:3;3879:2:0;3883:6;3862:9;:28::i;1492:337:4:-;-1:-1:-1;;;;;1619:17:4;;1552:14;1619:17;;;:11;:17;;;;;;1552:14;;1648:4;;1601:35;;:15;:35;:::i;:::-;1600:44;;1640:4;1600:44;:::i;:::-;1599:53;;;;:::i;:::-;-1:-1:-1;;;;;1697:18:4;;1662:24;1697:18;;;:12;:18;;;;;;1578:74;;-1:-1:-1;1662:24:4;1690:25;;:4;:25;:::i;:::-;-1:-1:-1;;;;;1745:13:4;;1726:15;1745:13;;;:7;:13;;;;;;1662:54;;-1:-1:-1;1726:15:4;1794:4;;1662:54;;1745:26;;1761:10;;1745:26;:::i;:::-;:45;;;;:::i;:::-;1744:54;;;;:::i;:::-;1726:72;1492:337;-1:-1:-1;;;;;1492:337:4:o;2649:228::-;2740:10;3482:7:0;3508:18;;;;;;;;;;;2756:13:4;;2700:27;2716:10;2700:15;:27::i;:::-;:51;;;;:::i;:::-;2699:71;2691:116;;;;-1:-1:-1;;;2691:116:4;;7513:2:5;2691:116:4;;;7495:21:5;;;7532:18;;;7525:30;7591:34;7571:18;;;7564:62;7643:18;;2691:116:4;7311:356:5;2691:116:4;2817:17;2837:9;:7;:9::i;:::-;2817:29;;2856:14;2860:9;2856:3;:14::i;:::-;2681:196;2649:228::o;10123:370:0:-;-1:-1:-1;;;;;10254:19:0;;10246:68;;;;-1:-1:-1;;;10246:68:0;;7874:2:5;10246:68:0;;;7856:21:5;7913:2;7893:18;;;7886:30;7952:34;7932:18;;;7925:62;-1:-1:-1;;;8003:18:5;;;7996:34;8047:19;;10246:68:0;7672:400:5;10246:68:0;-1:-1:-1;;;;;10332:21:0;;10324:68;;;;-1:-1:-1;;;10324:68:0;;8279:2:5;10324:68:0;;;8261:21:5;8318:2;8298:18;;;8291:30;8357:34;8337:18;;;8330:62;-1:-1:-1;;;8408:18:5;;;8401:32;8450:19;;10324:68:0;8077:398:5;10324:68:0;-1:-1:-1;;;;;10403:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;1391:25:5;;;10454:32:0;;1364:18:5;10454:32:0;;;;;;;;10123:370;;;:::o;10770:441::-;-1:-1:-1;;;;;4091:18:0;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10966:37:0;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:0;;8682:2:5;11019:68:0;;;8664:21:5;8721:2;8701:18;;;8694:30;8760:31;8740:18;;;8733:59;8809:18;;11019:68:0;8480:353:5;11019:68:0;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7488:651::-;-1:-1:-1;;;;;7614:18:0;;7606:68;;;;-1:-1:-1;;;7606:68:0;;9040:2:5;7606:68:0;;;9022:21:5;9079:2;9059:18;;;9052:30;9118:34;9098:18;;;9091:62;-1:-1:-1;;;9169:18:5;;;9162:35;9214:19;;7606:68:0;8838:401:5;7606:68:0;-1:-1:-1;;;;;7692:16:0;;7684:64;;;;-1:-1:-1;;;7684:64:0;;9446:2:5;7684:64:0;;;9428:21:5;9485:2;9465:18;;;9458:30;9524:34;9504:18;;;9497:62;-1:-1:-1;;;9575:18:5;;;9568:33;9618:19;;7684:64:0;9244:399:5;7684:64:0;-1:-1:-1;;;;;7830:15:0;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;-1:-1:-1;;;7855:72:0;;9850:2:5;7855:72:0;;;9832:21:5;9889:2;9869:18;;;9862:30;9928:34;9908:18;;;9901:62;-1:-1:-1;;;9979:18:5;;;9972:36;10025:19;;7855:72:0;9648:402:5;7855:72:0;-1:-1:-1;;;;;7961:15:0;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;-1:-1:-1;;;;;8058:26:0;8067:4;-1:-1:-1;;;;;8058:26:0;;8077:6;8058:26;;;;1391:25:5;;1379:2;1364:18;;1245:177;8058:26:0;;;;;;;;8095:37;9124:576;8415:389;-1:-1:-1;;;;;8498:21:0;;8490:65;;;;-1:-1:-1;;;8490:65:0;;10257:2:5;8490:65:0;;;10239:21:5;10296:2;10276:18;;;10269:30;10335:33;10315:18;;;10308:61;10386:18;;8490:65:0;10055:355:5;8490:65:0;8642:6;8626:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8658:18:0;;:9;:18;;;;;;;;;;:28;;8680:6;;8658:9;:28;;8680:6;;8658:28;:::i;:::-;;;;-1:-1:-1;;8701:37:0;;1391:25:5;;;-1:-1:-1;;;;;8701:37:0;;;8718:1;;8701:37;;1379:2:5;1364:18;8701:37:0;;;;;;;8415:389;;:::o;9124:576::-;-1:-1:-1;;;;;9207:21:0;;9199:67;;;;-1:-1:-1;;;9199:67:0;;10617:2:5;9199:67:0;;;10599:21:5;10656:2;10636:18;;;10629:30;10695:34;10675:18;;;10668:62;-1:-1:-1;;;10746:18:5;;;10739:31;10787:19;;9199:67:0;10415:397:5;9199:67:0;-1:-1:-1;;;;;9362:18:0;;9337:22;9362:18;;;;;;;;;;;9398:24;;;;9390:71;;;;-1:-1:-1;;;9390:71:0;;11019:2:5;9390:71:0;;;11001:21:5;11058:2;11038:18;;;11031:30;11097:34;11077:18;;;11070:62;-1:-1:-1;;;11148:18:5;;;11141:32;11190:19;;9390:71:0;10817:398:5;9390:71:0;-1:-1:-1;;;;;9495:18:0;;:9;:18;;;;;;;;;;9516:23;;;9495:44;;9559:12;:22;;9533:6;;9495:9;9559:22;;9533:6;;9559:22;:::i;:::-;;;;-1:-1:-1;;9597:37:0;;1391:25:5;;;9623:1:0;;-1:-1:-1;;;;;9597:37:0;;;;;1379:2:5;1364:18;9597:37:0;1245:177:5;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:5;574:15;-1:-1:-1;;570:29:5;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:5:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:5;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:5:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;2157:186::-;2216:6;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;2157:186;-1:-1:-1;;;2157:186:5:o;2348:180::-;2407:6;2460:2;2448:9;2439:7;2435:23;2431:32;2428:52;;;2476:1;2473;2466:12;2428:52;-1:-1:-1;2499:23:5;;2348:180;-1:-1:-1;2348:180:5:o;2533:260::-;2601:6;2609;2662:2;2650:9;2641:7;2637:23;2633:32;2630:52;;;2678:1;2675;2668:12;2630:52;2701:29;2720:9;2701:29;:::i;:::-;2691:39;;2749:38;2783:2;2772:9;2768:18;2749:38;:::i;:::-;2739:48;;2533:260;;;;;:::o;2798:380::-;2877:1;2873:12;;;;2920;;;2941:61;;2995:4;2987:6;2983:17;2973:27;;2941:61;3048:2;3040:6;3037:14;3017:18;3014:38;3011:161;;3094:10;3089:3;3085:20;3082:1;3075:31;3129:4;3126:1;3119:15;3157:4;3154:1;3147:15;3011:161;;2798:380;;;:::o;3866:277::-;3933:6;3986:2;3974:9;3965:7;3961:23;3957:32;3954:52;;;4002:1;3999;3992:12;3954:52;4034:9;4028:16;4087:5;4080:13;4073:21;4066:5;4063:32;4053:60;;4109:1;4106;4099:12;4148:127;4209:10;4204:3;4200:20;4197:1;4190:31;4240:4;4237:1;4230:15;4264:4;4261:1;4254:15;4280:128;4320:3;4351:1;4347:6;4344:1;4341:13;4338:39;;;4357:18;;:::i;:::-;-1:-1:-1;4393:9:5;;4280:128::o;5489:127::-;5550:10;5545:3;5541:20;5538:1;5531:31;5581:4;5578:1;5571:15;5605:4;5602:1;5595:15;5621:112;5653:1;5679;5669:35;;5684:18;;:::i;:::-;-1:-1:-1;5718:9:5;;5621:112::o;5738:125::-;5778:4;5806:1;5803;5800:8;5797:34;;;5811:18;;:::i;:::-;-1:-1:-1;5848:9:5;;5738:125::o;5868:120::-;5908:1;5934;5924:35;;5939:18;;:::i;:::-;-1:-1:-1;5973:9:5;;5868:120::o;7138:168::-;7178:7;7244:1;7240;7236:6;7232:14;7229:1;7226:21;7221:1;7214:9;7207:17;7203:45;7200:71;;;7251:18;;:::i;:::-;-1:-1:-1;7291:9:5;;7138:168::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    83,
    2879
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85E0EBAF GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xB1C17506 EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC5D01D0C EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF5111518 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xFFD45A64 EQ PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x85E0EBAF EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x8EEBFAE3 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x5EC8A5FF EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x5F316A05 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x1AD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x112F JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x414 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x178 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x590 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1F4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x18C PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x118D JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x7BF JUMP JUMPDEST PUSH2 0x178 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x118D JUMP JUMPDEST PUSH2 0x860 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x2C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0x1B5 PUSH2 0xA57 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x18C PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x355 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x381 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3E6 DUP2 DUP6 DUP6 PUSH2 0xAEA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3FE DUP6 DUP3 DUP6 PUSH2 0xC0F JUMP JUMPDEST PUSH2 0x409 DUP6 DUP6 DUP6 PUSH2 0xCA1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x481 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F207374616B65206265666F726520756E7374616B69 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x373397 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x489 PUSH2 0x590 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP3 SWAP1 SSTORE PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x3E6 SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x58B SWAP1 DUP8 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x5EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520686176656E2774207374616B656420616E797468696E672E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 CALLER PUSH2 0x9A4 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0x616 SWAP1 DUP3 PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x658 PUSH2 0x590 JUMP JUMPDEST POP PUSH9 0x3635C9ADC5DEA00000 DUP2 LT ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420656174206174206C65617374203130303020636F6F6B6965732E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x478 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820636F6F6B69657320696E2062616C616E63652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x726 PUSH9 0x3635C9ADC5DEA00000 DUP4 PUSH2 0x1279 JUMP JUMPDEST SWAP1 POP PUSH2 0x73B CALLER PUSH2 0x736 DUP4 DUP6 PUSH2 0x128D JUMP JUMPDEST PUSH2 0xF4E JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 PUSH2 0x74F DUP3 DUP5 PUSH2 0x128D JUMP JUMPDEST PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x778 SWAP1 DUP5 SWAP1 PUSH2 0x124B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP CALLER SWAP1 POP PUSH32 0x323082F42560DE16C285B305BED7B898B58BAC4DEDDDCAD2B802992135DC7ED5 PUSH2 0x7AA DUP4 DUP6 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x355 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x853 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x478 JUMP JUMPDEST PUSH2 0x409 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374207374616B65206D6F7265207468616E203020746F6B656E732E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x478 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x8CD JUMPI PUSH2 0x8CD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x924 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x948 SWAP2 SWAP1 PUSH2 0x1213 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0xA DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 ADD PUSH2 0x546 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3E6 DUP2 DUP6 DUP6 PUSH2 0xCA1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0xE10 SWAP1 PUSH2 0x9CD SWAP1 TIMESTAMP PUSH2 0x128D JUMP JUMPDEST PUSH2 0x9D9 SWAP1 PUSH2 0x3E8 PUSH2 0x12B8 JUMP JUMPDEST PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xA0C SWAP1 PUSH2 0x3E8 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x3E8 SWAP1 DUP4 SWAP1 PUSH2 0xA3A SWAP1 DUP7 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST PUSH2 0xA44 SWAP2 SWAP1 PUSH2 0x12B8 JUMP JUMPDEST PUSH2 0xA4E SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH9 0x3635C9ADC5DEA00000 SWAP1 PUSH2 0xA7B CALLER PUSH2 0x9A4 JUMP JUMPDEST PUSH2 0xA85 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST GT PUSH2 0xAD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420656174206D6F7265207468616E203130303020636F6F6B6965732E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADC PUSH2 0x590 JUMP JUMPDEST SWAP1 POP PUSH2 0xAE7 DUP2 PUSH2 0x650 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x478 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x478 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0xC9B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x478 JUMP JUMPDEST PUSH2 0xC9B DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xAEA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x478 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x478 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x478 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xE16 SWAP1 DUP5 SWAP1 PUSH2 0x124B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE62 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC9B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xEC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x478 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xF04 SWAP1 DUP5 SWAP1 PUSH2 0x124B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x478 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1022 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x478 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1051 SWAP1 DUP5 SWAP1 PUSH2 0x128D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10C1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x10A5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1121 DUP4 PUSH2 0x10E9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114D DUP5 PUSH2 0x10E9 JUMP JUMPDEST SWAP3 POP PUSH2 0x115B PUSH1 0x20 DUP6 ADD PUSH2 0x10E9 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1186 DUP3 PUSH2 0x10E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x119F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11C2 DUP4 PUSH2 0x10E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D0 PUSH1 0x20 DUP5 ADD PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x11ED JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x120D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x125E JUMPI PUSH2 0x125E PUSH2 0x1235 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1288 JUMPI PUSH2 0x1288 PUSH2 0x1263 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x129F JUMPI PUSH2 0x129F PUSH2 0x1235 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12B3 JUMPI PUSH2 0x12B3 PUSH2 0x1263 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12D2 JUMPI PUSH2 0x12D2 PUSH2 0x1235 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 DUP12 PUSH16 0xB892563B8CBB2CA927853B4F00127972 SDIV CALLDATALOAD JUMPI 0xB0 EXTCODESIZE SWAP8 0x4E 0x2B EXTCODESIZE PUSH3 0x153BD6 PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        83,
        2879
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x142"
    },
    "25": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x85E0EBAF"
    },
    "38": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "49": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "60": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B6"
    },
    "64": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB1C17506"
    },
    "71": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C9"
    },
    "75": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC5D01D0C"
    },
    "82": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DC"
    },
    "86": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E4"
    },
    "97": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF5111518"
    },
    "104": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x31D"
    },
    "108": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "110": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFD45A64"
    },
    "115": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "116": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x326"
    },
    "119": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "120": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "123": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "REVERT",
      "path": "4"
    },
    "124": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x85E0EBAF"
    },
    "131": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x255"
    },
    "135": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8EEBFAE3"
    },
    "142": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x268"
    },
    "146": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95D89B41"
    },
    "153": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x288"
    },
    "157": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA457C2D7"
    },
    "164": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x290"
    },
    "168": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA694FC3A"
    },
    "175": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "176": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A3"
    },
    "179": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "180": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "183": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "REVERT",
      "path": "4"
    },
    "184": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "185": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "GT",
      "path": "4"
    },
    "192": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10A"
    },
    "195": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "202": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B7"
    },
    "206": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x39509351"
    },
    "213": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C6"
    },
    "217": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "219": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4641257D"
    },
    "224": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "225": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D9"
    },
    "228": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "229": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "230": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5EC8A5FF"
    },
    "235": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "236": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E1"
    },
    "239": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "240": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "241": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5F316A05"
    },
    "246": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "247": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20C"
    },
    "250": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "251": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "252": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "257": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "258": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22C"
    },
    "261": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "262": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "264": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "265": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "REVERT",
      "path": "4"
    },
    "266": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "267": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "268": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6FDDE03"
    },
    "273": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "274": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x147"
    },
    "277": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "278": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "279": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "284": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "285": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x165"
    },
    "288": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "289": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "290": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x18160DDD"
    },
    "295": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "296": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x188"
    },
    "299": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "300": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "301": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "306": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "307": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x19A"
    },
    "310": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "311": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "312": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x2DEF6620"
    },
    "317": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "EQ",
      "path": "4"
    },
    "318": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AD"
    },
    "321": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "322": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "323": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "325": {
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "DUP1",
      "path": "4"
    },
    "326": {
      "first_revert": true,
      "fn": null,
      "offset": [
        83,
        2879
      ],
      "op": "REVERT",
      "path": "4"
    },
    "327": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "328": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "331": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x346"
    },
    "334": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "335": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "336": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "338": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "339": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C"
    },
    "342": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "343": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "344": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1094"
    },
    "347": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "348": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "349": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "351": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "352": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "DUP1",
      "path": "0"
    },
    "353": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "354": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SUB",
      "path": "0"
    },
    "355": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "356": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "RETURN",
      "path": "0"
    },
    "357": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "358": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178"
    },
    "361": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173"
    },
    "364": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "365": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "367": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1105"
    },
    "370": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "0"
    },
    "371": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "372": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D8"
    },
    "375": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "0"
    },
    "376": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "377": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "379": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "380": {
      "op": "SWAP1"
    },
    "381": {
      "op": "ISZERO"
    },
    "382": {
      "op": "ISZERO"
    },
    "383": {
      "op": "DUP2"
    },
    "384": {
      "op": "MSTORE"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "387": {
      "op": "ADD"
    },
    "388": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C"
    },
    "391": {
      "op": "JUMP"
    },
    "392": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "393": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x2"
    },
    "395": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "396": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "397": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "399": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "400": {
      "op": "SWAP1"
    },
    "401": {
      "op": "DUP2"
    },
    "402": {
      "op": "MSTORE"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "405": {
      "op": "ADD"
    },
    "406": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C"
    },
    "409": {
      "op": "JUMP"
    },
    "410": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "411": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178"
    },
    "414": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A8"
    },
    "417": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "418": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "420": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112F"
    },
    "423": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "0"
    },
    "424": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "425": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F0"
    },
    "428": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "0"
    },
    "429": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1180,
        1486
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "430": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1180,
        1486
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B5"
    },
    "433": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1180,
        1486
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x414"
    },
    "436": {
      "fn": "CookieCapital.unstake",
      "jump": "i",
      "offset": [
        1180,
        1486
      ],
      "op": "JUMP",
      "path": "4"
    },
    "437": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1180,
        1486
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "438": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1180,
        1486
      ],
      "op": "STOP",
      "path": "4"
    },
    "439": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "440": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "442": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "443": {
      "fn": "ERC20.decimals",
      "offset": [
        3175,
        3177
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x12"
    },
    "445": {
      "op": "DUP2"
    },
    "446": {
      "op": "MSTORE"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "449": {
      "op": "ADD"
    },
    "450": {
      "fn": "ERC20.decimals",
      "offset": [
        3093,
        3184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C"
    },
    "453": {
      "op": "JUMP"
    },
    "454": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "455": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178"
    },
    "458": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "462": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1105"
    },
    "467": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "468": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "469": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x551"
    },
    "472": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "473": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1835,
        2183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "474": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1835,
        2183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18C"
    },
    "477": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1835,
        2183
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x590"
    },
    "480": {
      "fn": "CookieCapital.harvest",
      "jump": "i",
      "offset": [
        1835,
        2183
      ],
      "op": "JUMP",
      "path": "4"
    },
    "481": {
      "offset": [
        154,
        188
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "482": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "484": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "485": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F4"
    },
    "488": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "495": {
      "op": "SHL"
    },
    "496": {
      "op": "SUB"
    },
    "497": {
      "offset": [
        154,
        188
      ],
      "op": "AND",
      "path": "4"
    },
    "498": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "DUP2",
      "path": "4"
    },
    "499": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "JUMP",
      "path": "4"
    },
    "500": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "501": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "503": {
      "fn": "CookieCapital.harvest",
      "offset": [
        154,
        188
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "508": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "510": {
      "op": "SHL"
    },
    "511": {
      "op": "SUB"
    },
    "512": {
      "op": "SWAP1"
    },
    "513": {
      "op": "SWAP2"
    },
    "514": {
      "op": "AND"
    },
    "515": {
      "op": "DUP2"
    },
    "516": {
      "op": "MSTORE"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "519": {
      "op": "ADD"
    },
    "520": {
      "offset": [
        154,
        188
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15C"
    },
    "523": {
      "op": "JUMP"
    },
    "524": {
      "offset": [
        283,
        331
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "525": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18C"
    },
    "528": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21A"
    },
    "531": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "532": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "534": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x116B"
    },
    "537": {
      "fn": "CookieCapital.harvest",
      "jump": "i",
      "offset": [
        283,
        331
      ],
      "op": "JUMP",
      "path": "4"
    },
    "538": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "539": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "541": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "543": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "544": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "546": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "547": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "DUP2",
      "path": "4"
    },
    "548": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "549": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "551": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "552": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "553": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "554": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "DUP2",
      "path": "4"
    },
    "555": {
      "fn": "CookieCapital.harvest",
      "offset": [
        283,
        331
      ],
      "op": "JUMP",
      "path": "4"
    },
    "556": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "557": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "560": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A"
    },
    "563": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "564": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "566": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116B"
    },
    "569": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "0"
    },
    "570": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "577": {
      "op": "SHL"
    },
    "578": {
      "op": "SUB"
    },
    "579": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "0",
      "statement": 2
    },
    "580": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "582": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "583": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "584": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "585": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "587": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "588": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "589": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "590": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "592": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "593": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "594": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "595": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "596": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "0"
    },
    "597": {
      "fn": "CookieCapital.eat",
      "offset": [
        2189,
        2643
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "598": {
      "fn": "CookieCapital.eat",
      "offset": [
        2189,
        2643
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B5"
    },
    "601": {
      "fn": "CookieCapital.eat",
      "offset": [
        2189,
        2643
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x263"
    },
    "604": {
      "fn": "CookieCapital.eat",
      "offset": [
        2189,
        2643
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "605": {
      "fn": "CookieCapital.eat",
      "offset": [
        2189,
        2643
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "607": {
      "fn": "CookieCapital.eat",
      "offset": [
        2189,
        2643
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x118D"
    },
    "610": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2189,
        2643
      ],
      "op": "JUMP",
      "path": "4"
    },
    "611": {
      "fn": "CookieCapital.eat",
      "offset": [
        2189,
        2643
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "612": {
      "fn": "CookieCapital.eat",
      "offset": [
        2189,
        2643
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x650"
    },
    "615": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2189,
        2643
      ],
      "op": "JUMP",
      "path": "4"
    },
    "616": {
      "offset": [
        337,
        384
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "617": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18C"
    },
    "620": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x276"
    },
    "623": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "624": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "626": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x116B"
    },
    "629": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        337,
        384
      ],
      "op": "JUMP",
      "path": "4"
    },
    "630": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "631": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "633": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "635": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "636": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "638": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "639": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "DUP2",
      "path": "4"
    },
    "640": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "641": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "643": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "644": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "645": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "646": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "DUP2",
      "path": "4"
    },
    "647": {
      "fn": "CookieCapital.eat",
      "offset": [
        337,
        384
      ],
      "op": "JUMP",
      "path": "4"
    },
    "648": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "649": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F"
    },
    "652": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BF"
    },
    "655": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMP",
      "path": "0"
    },
    "656": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "657": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178"
    },
    "660": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29E"
    },
    "663": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "664": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "666": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1105"
    },
    "669": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "670": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "671": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CE"
    },
    "674": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "675": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "676": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B5"
    },
    "679": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B1"
    },
    "682": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "683": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "685": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x118D"
    },
    "688": {
      "fn": "CookieCapital.stake",
      "jump": "i",
      "offset": [
        794,
        1174
      ],
      "op": "JUMP",
      "path": "4"
    },
    "689": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "690": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x860"
    },
    "693": {
      "fn": "CookieCapital.stake",
      "jump": "i",
      "offset": [
        794,
        1174
      ],
      "op": "JUMP",
      "path": "4"
    },
    "694": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "695": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x178"
    },
    "698": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C4"
    },
    "701": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "702": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "704": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1105"
    },
    "707": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "708": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "709": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x996"
    },
    "712": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "713": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1492,
        1829
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "714": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1492,
        1829
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18C"
    },
    "717": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1492,
        1829
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D7"
    },
    "720": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1492,
        1829
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "721": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1492,
        1829
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "723": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1492,
        1829
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x116B"
    },
    "726": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1492,
        1829
      ],
      "op": "JUMP",
      "path": "4"
    },
    "727": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1492,
        1829
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "728": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1492,
        1829
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9A4"
    },
    "731": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1492,
        1829
      ],
      "op": "JUMP",
      "path": "4"
    },
    "732": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2649,
        2877
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "733": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2649,
        2877
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B5"
    },
    "736": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2649,
        2877
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA57"
    },
    "739": {
      "fn": "CookieCapital.harvestAndEat",
      "jump": "i",
      "offset": [
        2649,
        2877
      ],
      "op": "JUMP",
      "path": "4"
    },
    "740": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "741": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18C"
    },
    "744": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F2"
    },
    "747": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "748": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "750": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A6"
    },
    "753": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "0"
    },
    "754": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 3
    },
    "764": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP3",
      "path": "0"
    },
    "765": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "0"
    },
    "766": {
      "fn": "ERC20.allowance",
      "offset": [
        4065,
        4072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "768": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "769": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "770": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "771": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "773": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "775": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "776": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "777": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "778": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "780": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "0"
    },
    "781": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "0"
    },
    "782": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "783": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "784": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "785": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "786": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "0"
    },
    "787": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP3",
      "path": "0"
    },
    "788": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "789": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "790": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "791": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "792": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "793": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "794": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "795": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "796": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "0"
    },
    "797": {
      "offset": [
        194,
        227
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "798": {
      "fn": "ERC20.allowance",
      "offset": [
        194,
        227
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18C"
    },
    "801": {
      "fn": "ERC20.allowance",
      "offset": [
        194,
        227
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "803": {
      "fn": "ERC20.allowance",
      "offset": [
        194,
        227
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "804": {
      "fn": "ERC20.allowance",
      "offset": [
        194,
        227
      ],
      "op": "DUP2",
      "path": "4"
    },
    "805": {
      "fn": "ERC20.allowance",
      "offset": [
        194,
        227
      ],
      "op": "JUMP",
      "path": "4"
    },
    "806": {
      "offset": [
        234,
        277
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "807": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18C"
    },
    "810": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x334"
    },
    "813": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "814": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "816": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x116B"
    },
    "819": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        234,
        277
      ],
      "op": "JUMP",
      "path": "4"
    },
    "820": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "821": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "823": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "825": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "826": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "828": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "829": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "DUP2",
      "path": "4"
    },
    "830": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "831": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "833": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "834": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "835": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "836": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "DUP2",
      "path": "4"
    },
    "837": {
      "fn": "ERC20.allowance",
      "offset": [
        234,
        277
      ],
      "op": "JUMP",
      "path": "4"
    },
    "838": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "839": {
      "fn": "ERC20.name",
      "offset": [
        2210,
        2223
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "841": {
      "fn": "ERC20.name",
      "offset": [
        2242,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x3"
    },
    "843": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "844": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "845": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x355"
    },
    "848": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "849": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D9"
    },
    "852": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "0"
    },
    "853": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "854": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "855": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "857": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "858": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "860": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "861": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "862": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "0"
    },
    "863": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "0"
    },
    "864": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "866": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "867": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "869": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "870": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "871": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "0"
    },
    "872": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "873": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "875": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "876": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "877": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "878": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "879": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "880": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "0"
    },
    "881": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "0"
    },
    "882": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "883": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "885": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "886": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "0"
    },
    "887": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "888": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "889": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x381"
    },
    "892": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "893": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D9"
    },
    "896": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "0"
    },
    "897": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "898": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "899": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "900": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "903": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "904": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "905": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "907": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "LT",
      "path": "0"
    },
    "908": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A3"
    },
    "911": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "912": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "915": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "916": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "0"
    },
    "917": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "918": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DIV",
      "path": "0"
    },
    "919": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MUL",
      "path": "0"
    },
    "920": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "0"
    },
    "921": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "922": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "923": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "925": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "926": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "927": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "930": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMP",
      "path": "0"
    },
    "931": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "932": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "0"
    },
    "933": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "934": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "935": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "936": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "938": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "939": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "941": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "943": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "944": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "945": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "946": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "0"
    },
    "947": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "948": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP2",
      "path": "0"
    },
    "949": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "950": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "951": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "953": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "954": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "955": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "957": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "958": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP1",
      "path": "0"
    },
    "959": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP4",
      "path": "0"
    },
    "960": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "GT",
      "path": "0"
    },
    "961": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B1"
    },
    "964": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "965": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "0"
    },
    "966": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "967": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SUB",
      "path": "0"
    },
    "968": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "970": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "AND",
      "path": "0"
    },
    "971": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "DUP3",
      "path": "0"
    },
    "972": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "ADD",
      "path": "0"
    },
    "973": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "974": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "975": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "0"
    },
    "976": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "0"
    },
    "977": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "0"
    },
    "978": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "0"
    },
    "979": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "0"
    },
    "980": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "981": {
      "fn": "ERC20.name",
      "offset": [
        2235,
        2247
      ],
      "op": "POP",
      "path": "0"
    },
    "982": {
      "fn": "ERC20.name",
      "offset": [
        2156,
        2254
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "983": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2156,
        2254
      ],
      "op": "JUMP",
      "path": "0"
    },
    "984": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "985": {
      "fn": "ERC20.approve",
      "offset": [
        4516,
        4520
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "987": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 5
    },
    "988": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x3E6"
    },
    "991": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "992": {
      "fn": "ERC20.approve",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP6",
      "path": "0"
    },
    "993": {
      "fn": "ERC20.approve",
      "offset": [
        4595,
        4601
      ],
      "op": "DUP6",
      "path": "0"
    },
    "994": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4578
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAEA"
    },
    "997": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMP",
      "path": "0"
    },
    "998": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "999": {
      "op": "POP"
    },
    "1000": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "1002": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1003": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1008": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1009": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5319,
        5323
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1011": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1012": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x3FE"
    },
    "1015": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5391,
        5395
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1016": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1017": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5406,
        5412
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1018": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5390
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0F"
    },
    "1021": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1022": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1023": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 9,
      "value": "0x409"
    },
    "1026": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5433,
        5437
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1027": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5439,
        5441
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1028": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5443,
        5449
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1029": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5432
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA1"
    },
    "1032": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1033": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1034": {
      "op": "POP"
    },
    "1035": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x1"
    },
    "1037": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1038": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1039": {
      "op": "POP"
    },
    "1040": {
      "op": "POP"
    },
    "1041": {
      "op": "POP"
    },
    "1042": {
      "op": "POP"
    },
    "1043": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1044": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1180,
        1486
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1045": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1232,
        1242
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 11
    },
    "1046": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1246,
        1247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1048": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1049": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1050": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1051": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1231
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1053": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1055": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1056": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1058": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1059": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1060": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1224,
        1243
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1061": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x481"
    },
    "1064": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1065": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1067": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1068": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1074": {
      "op": "SHL"
    },
    "1075": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1076": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1079": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1081": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1082": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "ADD",
      "path": "4"
    },
    "1083": {
      "op": "MSTORE"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1088": {
      "op": "DUP3"
    },
    "1089": {
      "op": "ADD"
    },
    "1090": {
      "op": "MSTORE"
    },
    "1091": {
      "op": "PUSH32",
      "value": "0x596F75206E65656420746F207374616B65206265666F726520756E7374616B69"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1126": {
      "op": "DUP3"
    },
    "1127": {
      "op": "ADD"
    },
    "1128": {
      "op": "MSTORE"
    },
    "1129": {
      "op": "PUSH3",
      "value": "0x373397"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "1135": {
      "op": "SHL"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1138": {
      "op": "DUP3"
    },
    "1139": {
      "op": "ADD"
    },
    "1140": {
      "op": "MSTORE"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1143": {
      "op": "ADD"
    },
    "1144": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1145": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1147": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1148": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1149": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1150": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "SUB",
      "path": "4"
    },
    "1151": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1152": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "1153": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1216,
        1287
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1154": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1297,
        1306
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 12,
      "value": "0x489"
    },
    "1157": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x590"
    },
    "1160": {
      "fn": "CookieCapital.unstake",
      "jump": "i",
      "offset": [
        1297,
        1306
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1161": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1297,
        1306
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1162": {
      "op": "POP"
    },
    "1163": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1341,
        1351
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1164": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1316,
        1330
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1166": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1167": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1168": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1169": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1340
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1171": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1173": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1174": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1176": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1177": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1178": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1179": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1180": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1181": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1362,
        1385
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 13
    },
    "1182": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1362,
        1385
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1183": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1362,
        1385
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1184": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1407
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 14,
      "value": "0x5"
    },
    "1186": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1407
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1187": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1188": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1189": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1196": {
      "op": "SHL"
    },
    "1197": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1198": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1199": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1201": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1202": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "ADD",
      "path": "4"
    },
    "1203": {
      "op": "SWAP4"
    },
    "1204": {
      "op": "SWAP1"
    },
    "1205": {
      "op": "SWAP4"
    },
    "1206": {
      "op": "MSTORE"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1209": {
      "op": "DUP4"
    },
    "1210": {
      "op": "ADD"
    },
    "1211": {
      "op": "DUP3"
    },
    "1212": {
      "op": "SWAP1"
    },
    "1213": {
      "op": "MSTORE"
    },
    "1214": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1215": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1333,
        1352
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1222": {
      "op": "SHL"
    },
    "1223": {
      "op": "SUB"
    },
    "1224": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1407
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1225": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1407
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1226": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1407
      ],
      "op": "AND",
      "path": "4"
    },
    "1227": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1407
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1228": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1416
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1233": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1416
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1236": {
      "op": "ADD"
    },
    "1237": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1239": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1241": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1242": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1243": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1244": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "SUB",
      "path": "4"
    },
    "1245": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1246": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1248": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1249": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "GAS",
      "path": "4"
    },
    "1250": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "CALL",
      "path": "4"
    },
    "1251": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1252": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1253": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1254": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F3"
    },
    "1257": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1258": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1259": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1261": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1262": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1263": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1264": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1266": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1267": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1268": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "POP",
      "path": "4"
    },
    "1269": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "POP",
      "path": "4"
    },
    "1270": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "POP",
      "path": "4"
    },
    "1271": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "POP",
      "path": "4"
    },
    "1272": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1274": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1275": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1276": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1278": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "NOT",
      "path": "4"
    },
    "1279": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1281": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1282": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "ADD",
      "path": "4"
    },
    "1283": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "AND",
      "path": "4"
    },
    "1284": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1285": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "ADD",
      "path": "4"
    },
    "1286": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1287": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1289": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1290": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "POP",
      "path": "4"
    },
    "1291": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1292": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "ADD",
      "path": "4"
    },
    "1293": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1294": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x517"
    },
    "1297": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1298": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1299": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1213"
    },
    "1302": {
      "fn": "CookieCapital.unstake",
      "jump": "i",
      "offset": [
        1395,
        1436
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1303": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1395,
        1436
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1304": {
      "op": "POP"
    },
    "1305": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 15,
      "value": "0x40"
    },
    "1307": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1308": {
      "op": "DUP2"
    },
    "1309": {
      "op": "DUP2"
    },
    "1310": {
      "op": "MSTORE"
    },
    "1311": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1460,
        1470
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1312": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1460,
        1470
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1313": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
    },
    "1346": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1349": {
      "op": "ADD"
    },
    "1350": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1351": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1353": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1354": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1355": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1356": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "SUB",
      "path": "4"
    },
    "1357": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1358": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1451,
        1479
      ],
      "op": "LOG2",
      "path": "4"
    },
    "1359": {
      "fn": "CookieCapital.unstake",
      "offset": [
        1206,
        1486
      ],
      "op": "POP",
      "path": "4"
    },
    "1360": {
      "fn": "CookieCapital.unstake",
      "jump": "o",
      "offset": [
        1180,
        1486
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1361": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1362": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1363": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1365": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 16
    },
    "1366": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1367": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1368": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1370": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1372": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1373": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1374": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1375": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1377": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1378": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1379": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1386": {
      "op": "SHL"
    },
    "1387": {
      "op": "SUB"
    },
    "1388": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1389": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "AND",
      "path": "0"
    },
    "1390": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1391": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1392": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1393": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1394": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1395": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1396": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1397": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1398": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1399": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1400": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1401": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E6"
    },
    "1404": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1405": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1406": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1407": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1408": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1409": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58B"
    },
    "1412": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1413": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1414": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1415": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124B"
    },
    "1418": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1419": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1420": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAEA"
    },
    "1423": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6015,
        6081
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1424": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1835,
        2183
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1425": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1919,
        1929
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 17
    },
    "1426": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1870,
        1891
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1428": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1429": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1911,
        1930
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1430": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1911,
        1930
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1431": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1911,
        1918
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "1433": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1911,
        1930
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1435": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1911,
        1930
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1436": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1911,
        1930
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1438": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1911,
        1930
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1439": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1911,
        1930
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1440": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1911,
        1930
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1441": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1903,
        1967
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5EC"
    },
    "1444": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1903,
        1967
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1445": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1903,
        1967
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1447": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1903,
        1967
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1454": {
      "op": "SHL"
    },
    "1455": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1903,
        1967
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1456": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1903,
        1967
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1459": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1903,
        1967
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1461": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1903,
        1967
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1462": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1903,
        1967
      ],
      "op": "ADD",
      "path": "4"
    },
    "1463": {
      "op": "MSTORE"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1468": {
      "op": "DUP3"
    },
    "1469": {
      "op": "ADD"
    },
    "1470": {
      "op": "MSTORE"
    },
    "1471": {
      "op": "PUSH32",
      "value": "0x596F7520686176656E2774207374616B656420616E797468696E672E00000000"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1506": {
      "op": "DUP3"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "op": "MSTORE"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1511": {
      "op": "ADD"
    },
    "1512": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1903,
        1967
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x478"
    },
    "1515": {
      "op": "JUMP"
    },
    "1516": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1903,
        1967
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1517": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1977,
        1992
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1519": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1995,
        2022
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5F7"
    },
    "1522": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2011,
        2021
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1523": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1995,
        2010
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9A4"
    },
    "1526": {
      "fn": "CookieCapital.harvest",
      "jump": "i",
      "offset": [
        1995,
        2022
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1527": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1995,
        2022
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1528": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2044,
        2054
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 18
    },
    "1529": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2032,
        2055
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1531": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2032,
        2055
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1532": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2032,
        2055
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1533": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2032,
        2055
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1534": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2032,
        2043
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "1536": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2032,
        2055
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1538": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2032,
        2055
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1539": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2032,
        2055
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1541": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2032,
        2055
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1542": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2032,
        2055
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1543": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2058,
        2073
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "1544": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2032,
        2073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1545": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2032,
        2073
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1546": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1977,
        2022
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1547": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1977,
        2022
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1548": {
      "op": "POP"
    },
    "1549": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2083,
        2109
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 19,
      "value": "0x616"
    },
    "1552": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2083,
        2109
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1553": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1977,
        2022
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1554": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2083,
        2088
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE6F"
    },
    "1557": {
      "fn": "CookieCapital.harvest",
      "jump": "i",
      "offset": [
        2083,
        2109
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1558": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2083,
        2109
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1559": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2124,
        2152
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 20,
      "value": "0x40"
    },
    "1561": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2124,
        2152
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1562": {
      "op": "DUP2"
    },
    "1563": {
      "op": "DUP2"
    },
    "1564": {
      "op": "MSTORE"
    },
    "1565": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2132,
        2142
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1566": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2132,
        2142
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1567": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2124,
        2152
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xC9695243A805ADB74C91F28311176C65B417E842D5699893CEF56D18BFA48CBA"
    },
    "1600": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2124,
        2152
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1603": {
      "op": "ADD"
    },
    "1604": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2124,
        2152
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1606": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2124,
        2152
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1607": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2124,
        2152
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1608": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2124,
        2152
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1609": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2124,
        2152
      ],
      "op": "SUB",
      "path": "4"
    },
    "1610": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2124,
        2152
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1611": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2124,
        2152
      ],
      "op": "LOG2",
      "path": "4"
    },
    "1612": {
      "fn": "CookieCapital.harvest",
      "offset": [
        2169,
        2176
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 21
    },
    "1613": {
      "fn": "CookieCapital.harvest",
      "offset": [
        1835,
        2183
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1614": {
      "op": "POP"
    },
    "1615": {
      "fn": "CookieCapital.harvest",
      "jump": "o",
      "offset": [
        1835,
        2183
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1616": {
      "fn": "CookieCapital.eat",
      "offset": [
        2189,
        2643
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1617": {
      "fn": "CookieCapital.eat",
      "offset": [
        2235,
        2244
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 22,
      "value": "0x658"
    },
    "1620": {
      "fn": "CookieCapital.eat",
      "offset": [
        2235,
        2242
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x590"
    },
    "1623": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2235,
        2244
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1624": {
      "fn": "CookieCapital.eat",
      "offset": [
        2235,
        2244
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1625": {
      "fn": "CookieCapital.eat",
      "offset": [
        2235,
        2244
      ],
      "op": "POP",
      "path": "4"
    },
    "1626": {
      "fn": "CookieCapital.eat",
      "offset": [
        2273,
        2286
      ],
      "op": "PUSH9",
      "path": "4",
      "statement": 23,
      "value": "0x3635C9ADC5DEA00000"
    },
    "1636": {
      "fn": "CookieCapital.eat",
      "offset": [
        2262,
        2268
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1637": {
      "fn": "CookieCapital.eat",
      "offset": [
        2262,
        2287
      ],
      "op": "LT",
      "path": "4"
    },
    "1638": {
      "branch": 62,
      "fn": "CookieCapital.eat",
      "offset": [
        2262,
        2287
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1639": {
      "fn": "CookieCapital.eat",
      "offset": [
        2254,
        2323
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6B2"
    },
    "1642": {
      "branch": 62,
      "fn": "CookieCapital.eat",
      "offset": [
        2254,
        2323
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1643": {
      "fn": "CookieCapital.eat",
      "offset": [
        2254,
        2323
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1645": {
      "fn": "CookieCapital.eat",
      "offset": [
        2254,
        2323
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1646": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "fn": "CookieCapital.eat",
      "offset": [
        2254,
        2323
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1654": {
      "fn": "CookieCapital.eat",
      "offset": [
        2254,
        2323
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1657": {
      "fn": "CookieCapital.eat",
      "offset": [
        2254,
        2323
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1659": {
      "fn": "CookieCapital.eat",
      "offset": [
        2254,
        2323
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1660": {
      "fn": "CookieCapital.eat",
      "offset": [
        2254,
        2323
      ],
      "op": "ADD",
      "path": "4"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1666": {
      "op": "DUP3"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH32",
      "value": "0x4D75737420656174206174206C65617374203130303020636F6F6B6965732E00"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1704": {
      "op": "DUP3"
    },
    "1705": {
      "op": "ADD"
    },
    "1706": {
      "op": "MSTORE"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1709": {
      "op": "ADD"
    },
    "1710": {
      "fn": "CookieCapital.eat",
      "offset": [
        2254,
        2323
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x478"
    },
    "1713": {
      "op": "JUMP"
    },
    "1714": {
      "fn": "CookieCapital.eat",
      "offset": [
        2254,
        2323
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1715": {
      "fn": "CookieCapital.eat",
      "offset": [
        2351,
        2361
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 24
    },
    "1716": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1718": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1719": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1720": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1721": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1723": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1724": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1725": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1726": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1728": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1729": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1730": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1731": {
      "fn": "CookieCapital.eat",
      "offset": [
        2366,
        2372
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1732": {
      "op": "GT"
    },
    "1733": {
      "branch": 63,
      "fn": "CookieCapital.eat",
      "offset": [
        2341,
        2372
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1734": {
      "fn": "CookieCapital.eat",
      "offset": [
        2333,
        2407
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x711"
    },
    "1737": {
      "branch": 63,
      "fn": "CookieCapital.eat",
      "offset": [
        2333,
        2407
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1738": {
      "fn": "CookieCapital.eat",
      "offset": [
        2333,
        2407
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1740": {
      "fn": "CookieCapital.eat",
      "offset": [
        2333,
        2407
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1741": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1747": {
      "op": "SHL"
    },
    "1748": {
      "fn": "CookieCapital.eat",
      "offset": [
        2333,
        2407
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1749": {
      "fn": "CookieCapital.eat",
      "offset": [
        2333,
        2407
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1752": {
      "fn": "CookieCapital.eat",
      "offset": [
        2333,
        2407
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1754": {
      "fn": "CookieCapital.eat",
      "offset": [
        2333,
        2407
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1755": {
      "fn": "CookieCapital.eat",
      "offset": [
        2333,
        2407
      ],
      "op": "ADD",
      "path": "4"
    },
    "1756": {
      "op": "MSTORE"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1761": {
      "op": "DUP3"
    },
    "1762": {
      "op": "ADD"
    },
    "1763": {
      "op": "MSTORE"
    },
    "1764": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F75676820636F6F6B69657320696E2062616C616E63652E0000"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1799": {
      "op": "DUP3"
    },
    "1800": {
      "op": "ADD"
    },
    "1801": {
      "op": "MSTORE"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1804": {
      "op": "ADD"
    },
    "1805": {
      "fn": "CookieCapital.eat",
      "offset": [
        2333,
        2407
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x478"
    },
    "1808": {
      "op": "JUMP"
    },
    "1809": {
      "fn": "CookieCapital.eat",
      "offset": [
        2333,
        2407
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1810": {
      "fn": "CookieCapital.eat",
      "offset": [
        2417,
        2434
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1812": {
      "fn": "CookieCapital.eat",
      "offset": [
        2437,
        2461
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x726"
    },
    "1815": {
      "fn": "CookieCapital.eat",
      "offset": [
        2447,
        2460
      ],
      "op": "PUSH9",
      "path": "4",
      "value": "0x3635C9ADC5DEA00000"
    },
    "1825": {
      "fn": "CookieCapital.eat",
      "offset": [
        2437,
        2443
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1826": {
      "fn": "CookieCapital.eat",
      "offset": [
        2437,
        2461
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1279"
    },
    "1829": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2437,
        2461
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1830": {
      "fn": "CookieCapital.eat",
      "offset": [
        2437,
        2461
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1831": {
      "fn": "CookieCapital.eat",
      "offset": [
        2417,
        2461
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1832": {
      "op": "POP"
    },
    "1833": {
      "fn": "CookieCapital.eat",
      "offset": [
        2471,
        2508
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 25,
      "value": "0x73B"
    },
    "1836": {
      "fn": "CookieCapital.eat",
      "offset": [
        2477,
        2487
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1837": {
      "fn": "CookieCapital.eat",
      "offset": [
        2489,
        2507
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x736"
    },
    "1840": {
      "fn": "CookieCapital.eat",
      "offset": [
        2417,
        2461
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1841": {
      "fn": "CookieCapital.eat",
      "offset": [
        2489,
        2495
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1842": {
      "fn": "CookieCapital.eat",
      "offset": [
        2489,
        2507
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x128D"
    },
    "1845": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2489,
        2507
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1846": {
      "fn": "CookieCapital.eat",
      "offset": [
        2489,
        2507
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1847": {
      "fn": "CookieCapital.eat",
      "offset": [
        2471,
        2476
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF4E"
    },
    "1850": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2471,
        2508
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1851": {
      "fn": "CookieCapital.eat",
      "offset": [
        2471,
        2508
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1852": {
      "fn": "CookieCapital.eat",
      "offset": [
        2570,
        2583
      ],
      "op": "PUSH9",
      "path": "4",
      "statement": 26,
      "value": "0x3635C9ADC5DEA00000"
    },
    "1862": {
      "fn": "CookieCapital.eat",
      "offset": [
        2547,
        2565
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x74F"
    },
    "1865": {
      "fn": "CookieCapital.eat",
      "offset": [
        2556,
        2565
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1866": {
      "fn": "CookieCapital.eat",
      "offset": [
        2547,
        2553
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1867": {
      "fn": "CookieCapital.eat",
      "offset": [
        2547,
        2565
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x128D"
    },
    "1870": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2547,
        2565
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1871": {
      "fn": "CookieCapital.eat",
      "offset": [
        2547,
        2565
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1872": {
      "fn": "CookieCapital.eat",
      "offset": [
        2546,
        2584
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x759"
    },
    "1875": {
      "fn": "CookieCapital.eat",
      "offset": [
        2546,
        2584
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1876": {
      "fn": "CookieCapital.eat",
      "offset": [
        2546,
        2584
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1877": {
      "fn": "CookieCapital.eat",
      "offset": [
        2546,
        2584
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12A4"
    },
    "1880": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2546,
        2584
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1881": {
      "fn": "CookieCapital.eat",
      "offset": [
        2546,
        2584
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1882": {
      "fn": "CookieCapital.eat",
      "offset": [
        2531,
        2541
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1883": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2542
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1885": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2542
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1886": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2542
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1887": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2542
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1888": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2530
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "1890": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2542
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1892": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2542
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1893": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2542
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1895": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2542
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1896": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2542
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1897": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2584
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1898": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2584
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1899": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2542
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1900": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2542
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1901": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2542
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1902": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2584
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x778"
    },
    "1905": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2584
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1906": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2584
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1907": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2584
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1908": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2584
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x124B"
    },
    "1911": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2518,
        2584
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1912": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2584
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1913": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2584
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1914": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2584
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1915": {
      "fn": "CookieCapital.eat",
      "offset": [
        2518,
        2584
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1916": {
      "op": "POP"
    },
    "1917": {
      "fn": "CookieCapital.eat",
      "offset": [
        2603,
        2613
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 27
    },
    "1918": {
      "fn": "CookieCapital.eat",
      "offset": [
        2603,
        2613
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1919": {
      "op": "POP"
    },
    "1920": {
      "fn": "CookieCapital.eat",
      "offset": [
        2599,
        2636
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x323082F42560DE16C285B305BED7B898B58BAC4DEDDDCAD2B802992135DC7ED5"
    },
    "1953": {
      "fn": "CookieCapital.eat",
      "offset": [
        2616,
        2634
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7AA"
    },
    "1956": {
      "fn": "CookieCapital.eat",
      "offset": [
        2625,
        2634
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1957": {
      "fn": "CookieCapital.eat",
      "offset": [
        2616,
        2622
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1958": {
      "fn": "CookieCapital.eat",
      "offset": [
        2616,
        2634
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x128D"
    },
    "1961": {
      "fn": "CookieCapital.eat",
      "jump": "i",
      "offset": [
        2616,
        2634
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1962": {
      "fn": "CookieCapital.eat",
      "offset": [
        2616,
        2634
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1963": {
      "fn": "CookieCapital.eat",
      "offset": [
        2599,
        2636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1965": {
      "fn": "CookieCapital.eat",
      "offset": [
        2599,
        2636
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1966": {
      "op": "SWAP1"
    },
    "1967": {
      "op": "DUP2"
    },
    "1968": {
      "op": "MSTORE"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1971": {
      "op": "ADD"
    },
    "1972": {
      "fn": "CookieCapital.eat",
      "offset": [
        2599,
        2636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1974": {
      "fn": "CookieCapital.eat",
      "offset": [
        2599,
        2636
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1975": {
      "fn": "CookieCapital.eat",
      "offset": [
        2599,
        2636
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1976": {
      "fn": "CookieCapital.eat",
      "offset": [
        2599,
        2636
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1977": {
      "fn": "CookieCapital.eat",
      "offset": [
        2599,
        2636
      ],
      "op": "SUB",
      "path": "4"
    },
    "1978": {
      "fn": "CookieCapital.eat",
      "offset": [
        2599,
        2636
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1979": {
      "fn": "CookieCapital.eat",
      "offset": [
        2599,
        2636
      ],
      "op": "LOG2",
      "path": "4"
    },
    "1980": {
      "fn": "CookieCapital.eat",
      "offset": [
        2225,
        2643
      ],
      "op": "POP",
      "path": "4"
    },
    "1981": {
      "fn": "CookieCapital.eat",
      "offset": [
        2189,
        2643
      ],
      "op": "POP",
      "path": "4"
    },
    "1982": {
      "fn": "CookieCapital.eat",
      "jump": "o",
      "offset": [
        2189,
        2643
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1983": {
      "fn": "ERC20.symbol",
      "offset": [
        2367,
        2469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1984": {
      "fn": "ERC20.symbol",
      "offset": [
        2423,
        2436
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1986": {
      "fn": "ERC20.symbol",
      "offset": [
        2455,
        2462
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x4"
    },
    "1988": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1989": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1990": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x355"
    },
    "1993": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1994": {
      "fn": "ERC20.symbol",
      "offset": [
        2448,
        2462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D9"
    },
    "1997": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2448,
        2462
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1998": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1999": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2000": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2002": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2003": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2004": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2005": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2007": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2009": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2010": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2011": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2012": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2014": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2015": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2016": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2023": {
      "op": "SHL"
    },
    "2024": {
      "op": "SUB"
    },
    "2025": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2026": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "AND",
      "path": "0"
    },
    "2027": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2028": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2029": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2030": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2031": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2032": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2033": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2034": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2035": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2036": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2037": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2038": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 29
    },
    "2039": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2040": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "LT",
      "path": "0"
    },
    "2041": {
      "branch": 67,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2042": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x853"
    },
    "2045": {
      "branch": 67,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2046": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2048": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2055": {
      "op": "SHL"
    },
    "2056": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2057": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2060": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2063": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "ADD",
      "path": "0"
    },
    "2064": {
      "op": "MSTORE"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2069": {
      "op": "DUP3"
    },
    "2070": {
      "op": "ADD"
    },
    "2071": {
      "op": "MSTORE"
    },
    "2072": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2107": {
      "op": "DUP3"
    },
    "2108": {
      "op": "ADD"
    },
    "2109": {
      "op": "MSTORE"
    },
    "2110": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2118": {
      "op": "SHL"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2121": {
      "op": "DUP3"
    },
    "2122": {
      "op": "ADD"
    },
    "2123": {
      "op": "MSTORE"
    },
    "2124": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "2130": {
      "op": "JUMP"
    },
    "2131": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2132": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0x409"
    },
    "2135": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6935,
        6940
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2136": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6942,
        6949
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2137": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6970,
        6985
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2138": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6967
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2139": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6985
      ],
      "op": "SUB",
      "path": "0"
    },
    "2140": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAEA"
    },
    "2143": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2144": {
      "fn": "CookieCapital.stake",
      "offset": [
        794,
        1174
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2145": {
      "fn": "CookieCapital.stake",
      "offset": [
        859,
        860
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 31,
      "value": "0x0"
    },
    "2147": {
      "fn": "CookieCapital.stake",
      "offset": [
        850,
        856
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2148": {
      "branch": 64,
      "fn": "CookieCapital.stake",
      "offset": [
        850,
        860
      ],
      "op": "GT",
      "path": "4"
    },
    "2149": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8B0"
    },
    "2152": {
      "branch": 64,
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2153": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2155": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2156": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2162": {
      "op": "SHL"
    },
    "2163": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2164": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2167": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2169": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2170": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "ADD",
      "path": "4"
    },
    "2171": {
      "op": "MSTORE"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2176": {
      "op": "DUP3"
    },
    "2177": {
      "op": "ADD"
    },
    "2178": {
      "op": "MSTORE"
    },
    "2179": {
      "op": "PUSH32",
      "value": "0x4D757374207374616B65206D6F7265207468616E203020746F6B656E732E0000"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2214": {
      "op": "DUP3"
    },
    "2215": {
      "op": "ADD"
    },
    "2216": {
      "op": "MSTORE"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2219": {
      "op": "ADD"
    },
    "2220": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x478"
    },
    "2223": {
      "op": "JUMP"
    },
    "2224": {
      "fn": "CookieCapital.stake",
      "offset": [
        842,
        895
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2225": {
      "fn": "CookieCapital.stake",
      "offset": [
        917,
        927
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2226": {
      "fn": "CookieCapital.stake",
      "offset": [
        931,
        932
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2228": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2229": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2230": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2231": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2233": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2235": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2236": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2238": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2239": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2240": {
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        928
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2241": {
      "branch": 65,
      "fn": "CookieCapital.stake",
      "offset": [
        909,
        932
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2242": {
      "fn": "CookieCapital.stake",
      "offset": [
        905,
        968
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8CD"
    },
    "2245": {
      "branch": 65,
      "fn": "CookieCapital.stake",
      "offset": [
        905,
        968
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2246": {
      "fn": "CookieCapital.stake",
      "offset": [
        948,
        957
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 32,
      "value": "0x8CD"
    },
    "2249": {
      "fn": "CookieCapital.stake",
      "offset": [
        948,
        955
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x414"
    },
    "2252": {
      "fn": "CookieCapital.stake",
      "jump": "i",
      "offset": [
        948,
        957
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2253": {
      "fn": "CookieCapital.stake",
      "offset": [
        948,
        957
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2254": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        989
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 33,
      "value": "0x5"
    },
    "2256": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        989
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2257": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2259": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2260": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2267": {
      "op": "SHL"
    },
    "2268": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2269": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2270": {
      "fn": "CookieCapital.stake",
      "offset": [
        1003,
        1013
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2271": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2273": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2274": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "ADD",
      "path": "4"
    },
    "2275": {
      "op": "MSTORE"
    },
    "2276": {
      "fn": "CookieCapital.stake",
      "offset": [
        1023,
        1027
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "2277": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2279": {
      "op": "DUP3"
    },
    "2280": {
      "op": "ADD"
    },
    "2281": {
      "op": "MSTORE"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2284": {
      "op": "DUP2"
    },
    "2285": {
      "op": "ADD"
    },
    "2286": {
      "op": "DUP4"
    },
    "2287": {
      "op": "SWAP1"
    },
    "2288": {
      "op": "MSTORE"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2295": {
      "op": "SHL"
    },
    "2296": {
      "op": "SUB"
    },
    "2297": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        989
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2298": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        989
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2299": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        989
      ],
      "op": "AND",
      "path": "4"
    },
    "2300": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        989
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2301": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1002
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "2306": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1002
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2309": {
      "op": "ADD"
    },
    "2310": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2312": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2314": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2315": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2316": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2317": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "SUB",
      "path": "4"
    },
    "2318": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2319": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2321": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2322": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "GAS",
      "path": "4"
    },
    "2323": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "CALL",
      "path": "4"
    },
    "2324": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2325": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2326": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2327": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x924"
    },
    "2330": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2331": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2332": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2334": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2335": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2336": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2337": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2339": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2340": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2341": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "POP",
      "path": "4"
    },
    "2342": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "POP",
      "path": "4"
    },
    "2343": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "POP",
      "path": "4"
    },
    "2344": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "POP",
      "path": "4"
    },
    "2345": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2347": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2348": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2349": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2351": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "NOT",
      "path": "4"
    },
    "2352": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2354": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2355": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "ADD",
      "path": "4"
    },
    "2356": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "AND",
      "path": "4"
    },
    "2357": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2358": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "ADD",
      "path": "4"
    },
    "2359": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2360": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2362": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2363": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "POP",
      "path": "4"
    },
    "2364": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2365": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "ADD",
      "path": "4"
    },
    "2366": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2367": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x948"
    },
    "2370": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2371": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2372": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1213"
    },
    "2375": {
      "fn": "CookieCapital.stake",
      "jump": "i",
      "offset": [
        977,
        1037
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2376": {
      "fn": "CookieCapital.stake",
      "offset": [
        977,
        1037
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2377": {
      "op": "POP"
    },
    "2378": {
      "fn": "CookieCapital.stake",
      "offset": [
        1055,
        1065
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 34
    },
    "2379": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2381": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2382": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2383": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2384": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2386": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2388": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2389": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2390": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2391": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2393": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2394": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2395": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1066
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2396": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1075
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2397": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1075
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2398": {
      "fn": "CookieCapital.stake",
      "offset": [
        1047,
        1075
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2399": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1096
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 35,
      "value": "0xA"
    },
    "2401": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1108
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2402": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1108
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2403": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1108
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2404": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1108
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2405": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1108
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2406": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1108
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2407": {
      "fn": "CookieCapital.stake",
      "offset": [
        1111,
        1126
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "2408": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1126
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2409": {
      "fn": "CookieCapital.stake",
      "offset": [
        1085,
        1126
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2410": {
      "fn": "CookieCapital.stake",
      "offset": [
        1141,
        1167
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 36
    },
    "2411": {
      "fn": "CookieCapital.stake",
      "offset": [
        1141,
        1167
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2412": {
      "op": "DUP4"
    },
    "2413": {
      "op": "DUP2"
    },
    "2414": {
      "op": "MSTORE"
    },
    "2415": {
      "fn": "CookieCapital.stake",
      "offset": [
        1141,
        1167
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
    },
    "2448": {
      "fn": "CookieCapital.stake",
      "offset": [
        1141,
        1167
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2449": {
      "op": "ADD"
    },
    "2450": {
      "fn": "CookieCapital.stake",
      "offset": [
        1141,
        1167
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x546"
    },
    "2453": {
      "op": "JUMP"
    },
    "2454": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2455": {
      "fn": "ERC20.transfer",
      "offset": [
        3808,
        3812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2457": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2458": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3890
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 37,
      "value": "0x3E6"
    },
    "2461": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2462": {
      "fn": "ERC20.transfer",
      "offset": [
        3879,
        3881
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2463": {
      "fn": "ERC20.transfer",
      "offset": [
        3883,
        3889
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2464": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3871
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA1"
    },
    "2467": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3862,
        3890
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2468": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1492,
        1829
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "op": "SUB"
    },
    "2477": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1619,
        1636
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2478": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1619,
        1636
      ],
      "op": "AND",
      "path": "4"
    },
    "2479": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1552,
        1566
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2481": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1619,
        1636
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2482": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1619,
        1636
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2483": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1619,
        1636
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2484": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1619,
        1630
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "2486": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1619,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2488": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1619,
        1636
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2489": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1619,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2491": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1619,
        1636
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2492": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1619,
        1636
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2493": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1619,
        1636
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2494": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1552,
        1566
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2495": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1552,
        1566
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2496": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1648,
        1652
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE10"
    },
    "2499": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1648,
        1652
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2500": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1601,
        1636
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9CD"
    },
    "2503": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1601,
        1636
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2504": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1601,
        1616
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "2505": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1601,
        1636
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x128D"
    },
    "2508": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1601,
        1636
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2509": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1601,
        1636
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2510": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1600,
        1644
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D9"
    },
    "2513": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1600,
        1644
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2514": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1640,
        1644
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E8"
    },
    "2517": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1600,
        1644
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12B8"
    },
    "2520": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1600,
        1644
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2521": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1600,
        1644
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2522": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1599,
        1652
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9E3"
    },
    "2525": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1599,
        1652
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2526": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1599,
        1652
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2527": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1599,
        1652
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12A4"
    },
    "2530": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1599,
        1652
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2531": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1599,
        1652
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2538": {
      "op": "SHL"
    },
    "2539": {
      "op": "SUB"
    },
    "2540": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1697,
        1715
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2541": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1697,
        1715
      ],
      "op": "AND",
      "path": "4"
    },
    "2542": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1662,
        1686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2544": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1697,
        1715
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2545": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1697,
        1715
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2546": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1697,
        1715
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2547": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1697,
        1709
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "2549": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1697,
        1715
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2551": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1697,
        1715
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2552": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1697,
        1715
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2554": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1697,
        1715
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2555": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1697,
        1715
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2556": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1697,
        1715
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2557": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1578,
        1652
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2558": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1578,
        1652
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2559": {
      "op": "POP"
    },
    "2560": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1662,
        1686
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2561": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1690,
        1715
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA0C"
    },
    "2564": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1690,
        1715
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2565": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1690,
        1694
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E8"
    },
    "2568": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1690,
        1715
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x124B"
    },
    "2571": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1690,
        1715
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2572": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1690,
        1715
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2579": {
      "op": "SHL"
    },
    "2580": {
      "op": "SUB"
    },
    "2581": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1758
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2582": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1758
      ],
      "op": "AND",
      "path": "4"
    },
    "2583": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1726,
        1741
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2585": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1758
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2586": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1758
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2587": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1758
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2588": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1752
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2590": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1758
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2592": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1758
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2593": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1758
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2595": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1758
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2596": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1758
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2597": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1758
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2598": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1662,
        1716
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2599": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1662,
        1716
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1726,
        1741
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2602": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1794,
        1798
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E8"
    },
    "2605": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1794,
        1798
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2606": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1662,
        1716
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2607": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1662,
        1716
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2608": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1771
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA3A"
    },
    "2611": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1771
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2612": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1761,
        1771
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2613": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1761,
        1771
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2614": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1771
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12B8"
    },
    "2617": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1745,
        1771
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2618": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1771
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2619": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1790
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA44"
    },
    "2622": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1790
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2623": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1790
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2624": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1790
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12B8"
    },
    "2627": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1745,
        1790
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2628": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1745,
        1790
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2629": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1744,
        1798
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA4E"
    },
    "2632": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1744,
        1798
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2633": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1744,
        1798
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2634": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1744,
        1798
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12A4"
    },
    "2637": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "i",
      "offset": [
        1744,
        1798
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2638": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1744,
        1798
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2639": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1726,
        1798
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "2640": {
      "fn": "CookieCapital.calculateProfit",
      "offset": [
        1492,
        1829
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "2641": {
      "op": "POP"
    },
    "2642": {
      "op": "POP"
    },
    "2643": {
      "op": "POP"
    },
    "2644": {
      "op": "POP"
    },
    "2645": {
      "op": "POP"
    },
    "2646": {
      "fn": "CookieCapital.calculateProfit",
      "jump": "o",
      "offset": [
        1492,
        1829
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2647": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2649,
        2877
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2648": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2740,
        2750
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 38
    },
    "2649": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2651": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2652": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2653": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2654": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2656": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2657": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2658": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2659": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2661": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2662": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2663": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2664": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2756,
        2769
      ],
      "op": "PUSH9",
      "path": "4",
      "value": "0x3635C9ADC5DEA00000"
    },
    "2674": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2756,
        2769
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2675": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2700,
        2727
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA7B"
    },
    "2678": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2716,
        2726
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2679": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2700,
        2715
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9A4"
    },
    "2682": {
      "fn": "CookieCapital.harvestAndEat",
      "jump": "i",
      "offset": [
        2700,
        2727
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2683": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2700,
        2727
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2684": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2700,
        2751
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA85"
    },
    "2687": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2700,
        2751
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2688": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2700,
        2751
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2689": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2700,
        2751
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x124B"
    },
    "2692": {
      "fn": "CookieCapital.harvestAndEat",
      "jump": "i",
      "offset": [
        2700,
        2751
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2693": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2700,
        2751
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2694": {
      "branch": 66,
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2699,
        2770
      ],
      "op": "GT",
      "path": "4"
    },
    "2695": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2691,
        2807
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD2"
    },
    "2698": {
      "branch": 66,
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2691,
        2807
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2699": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2691,
        2807
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2701": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2691,
        2807
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2702": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2708": {
      "op": "SHL"
    },
    "2709": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2691,
        2807
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2710": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2691,
        2807
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2713": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2691,
        2807
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2715": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2691,
        2807
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2716": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2691,
        2807
      ],
      "op": "ADD",
      "path": "4"
    },
    "2717": {
      "op": "DUP2"
    },
    "2718": {
      "op": "SWAP1"
    },
    "2719": {
      "op": "MSTORE"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2722": {
      "op": "DUP3"
    },
    "2723": {
      "op": "ADD"
    },
    "2724": {
      "op": "MSTORE"
    },
    "2725": {
      "op": "PUSH32",
      "value": "0x4D75737420656174206D6F7265207468616E203130303020636F6F6B6965732E"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2760": {
      "op": "DUP3"
    },
    "2761": {
      "op": "ADD"
    },
    "2762": {
      "op": "MSTORE"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2765": {
      "op": "ADD"
    },
    "2766": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2691,
        2807
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x478"
    },
    "2769": {
      "op": "JUMP"
    },
    "2770": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2691,
        2807
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2771": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2817,
        2834
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2773": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2837,
        2846
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xADC"
    },
    "2776": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2837,
        2844
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x590"
    },
    "2779": {
      "fn": "CookieCapital.harvestAndEat",
      "jump": "i",
      "offset": [
        2837,
        2846
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2780": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2837,
        2846
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2781": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2817,
        2846
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2782": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2817,
        2846
      ],
      "op": "POP",
      "path": "4"
    },
    "2783": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2856,
        2870
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 39,
      "value": "0xAE7"
    },
    "2786": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2860,
        2869
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2787": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2856,
        2859
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x650"
    },
    "2790": {
      "fn": "CookieCapital.harvestAndEat",
      "jump": "i",
      "offset": [
        2856,
        2870
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2791": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2856,
        2870
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2792": {
      "fn": "CookieCapital.harvestAndEat",
      "offset": [
        2681,
        2877
      ],
      "op": "POP",
      "path": "4"
    },
    "2793": {
      "fn": "CookieCapital.harvestAndEat",
      "jump": "o",
      "offset": [
        2649,
        2877
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2794": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2801": {
      "op": "SHL"
    },
    "2802": {
      "op": "SUB"
    },
    "2803": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 40
    },
    "2804": {
      "branch": 68,
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "AND",
      "path": "0"
    },
    "2805": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4C"
    },
    "2808": {
      "branch": 68,
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2809": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2811": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2820": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2823": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2825": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2826": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "ADD",
      "path": "0"
    },
    "2827": {
      "op": "MSTORE"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2830": {
      "op": "DUP1"
    },
    "2831": {
      "op": "DUP3"
    },
    "2832": {
      "op": "ADD"
    },
    "2833": {
      "op": "MSTORE"
    },
    "2834": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2869": {
      "op": "DUP3"
    },
    "2870": {
      "op": "ADD"
    },
    "2871": {
      "op": "MSTORE"
    },
    "2872": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2877": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2879": {
      "op": "SHL"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2882": {
      "op": "DUP3"
    },
    "2883": {
      "op": "ADD"
    },
    "2884": {
      "op": "MSTORE"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2887": {
      "op": "ADD"
    },
    "2888": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "2891": {
      "op": "JUMP"
    },
    "2892": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2899": {
      "op": "SHL"
    },
    "2900": {
      "op": "SUB"
    },
    "2901": {
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 41
    },
    "2902": {
      "branch": 69,
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "AND",
      "path": "0"
    },
    "2903": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBAD"
    },
    "2906": {
      "branch": 69,
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2907": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2909": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2910": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2916": {
      "op": "SHL"
    },
    "2917": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2918": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2921": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2923": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2924": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "ADD",
      "path": "0"
    },
    "2925": {
      "op": "MSTORE"
    },
    "2926": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2930": {
      "op": "DUP3"
    },
    "2931": {
      "op": "ADD"
    },
    "2932": {
      "op": "MSTORE"
    },
    "2933": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2968": {
      "op": "DUP3"
    },
    "2969": {
      "op": "ADD"
    },
    "2970": {
      "op": "MSTORE"
    },
    "2971": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2979": {
      "op": "DUP3"
    },
    "2980": {
      "op": "ADD"
    },
    "2981": {
      "op": "MSTORE"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2984": {
      "op": "ADD"
    },
    "2985": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "2988": {
      "op": "JUMP"
    },
    "2989": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2996": {
      "op": "SHL"
    },
    "2997": {
      "op": "SUB"
    },
    "2998": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 42
    },
    "2999": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3000": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "AND",
      "path": "0"
    },
    "3001": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3003": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3004": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3005": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3006": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3008": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3010": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3011": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3012": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3013": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3015": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3016": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3017": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3018": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3019": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3020": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "AND",
      "path": "0"
    },
    "3021": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3022": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3023": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3024": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3025": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3026": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3027": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3028": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3029": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3030": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3031": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3032": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3033": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3034": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 43
    },
    "3035": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3036": {
      "op": "DUP5"
    },
    "3037": {
      "op": "DUP2"
    },
    "3038": {
      "op": "MSTORE"
    },
    "3039": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3072": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3073": {
      "op": "ADD"
    },
    "3074": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3075": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3077": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3078": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3079": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3080": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SUB",
      "path": "0"
    },
    "3081": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3082": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3083": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "0"
    },
    "3084": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "0"
    },
    "3085": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "0"
    },
    "3086": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3087": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3094": {
      "op": "SHL"
    },
    "3095": {
      "op": "SUB"
    },
    "3096": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3097": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3098": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "0"
    },
    "3099": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3101": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3102": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3103": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3104": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3106": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3108": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3109": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3110": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3111": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3113": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3114": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3115": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3116": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3117": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3118": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "0"
    },
    "3119": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3120": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3121": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3122": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3123": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3124": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3125": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3128": {
      "op": "NOT"
    },
    "3129": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3130": {
      "branch": 70,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "EQ",
      "path": "0"
    },
    "3131": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9B"
    },
    "3134": {
      "branch": 70,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3135": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11047,
        11053
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 44
    },
    "3136": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11043
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3137": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "LT",
      "path": "0"
    },
    "3138": {
      "branch": 71,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3139": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8E"
    },
    "3142": {
      "branch": 71,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3143": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3145": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3146": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3152": {
      "op": "SHL"
    },
    "3153": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3154": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3157": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3159": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3160": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "ADD",
      "path": "0"
    },
    "3161": {
      "op": "MSTORE"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3166": {
      "op": "DUP3"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "MSTORE"
    },
    "3169": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3204": {
      "op": "DUP3"
    },
    "3205": {
      "op": "ADD"
    },
    "3206": {
      "op": "MSTORE"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3209": {
      "op": "ADD"
    },
    "3210": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "3213": {
      "op": "JUMP"
    },
    "3214": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3215": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0xC9B"
    },
    "3218": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11138,
        11143
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3219": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11145,
        11152
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3220": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11173,
        11179
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3221": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11170
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3222": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11179
      ],
      "op": "SUB",
      "path": "0"
    },
    "3223": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11137
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAEA"
    },
    "3226": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3227": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3228": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10890,
        11211
      ],
      "op": "POP",
      "path": "0"
    },
    "3229": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "0"
    },
    "3230": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "0"
    },
    "3231": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "POP",
      "path": "0"
    },
    "3232": {
      "fn": "ERC20._spendAllowance",
      "jump": "o",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3233": {
      "fn": "ERC20._transfer",
      "offset": [
        7488,
        8139
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3240": {
      "op": "SHL"
    },
    "3241": {
      "op": "SUB"
    },
    "3242": {
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 46
    },
    "3243": {
      "branch": 72,
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "AND",
      "path": "0"
    },
    "3244": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD05"
    },
    "3247": {
      "branch": 72,
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3248": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3250": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3251": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3257": {
      "op": "SHL"
    },
    "3258": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3259": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3262": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3264": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3265": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "ADD",
      "path": "0"
    },
    "3266": {
      "op": "MSTORE"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3271": {
      "op": "DUP3"
    },
    "3272": {
      "op": "ADD"
    },
    "3273": {
      "op": "MSTORE"
    },
    "3274": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3309": {
      "op": "DUP3"
    },
    "3310": {
      "op": "ADD"
    },
    "3311": {
      "op": "MSTORE"
    },
    "3312": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "3320": {
      "op": "SHL"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3323": {
      "op": "DUP3"
    },
    "3324": {
      "op": "ADD"
    },
    "3325": {
      "op": "MSTORE"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3328": {
      "op": "ADD"
    },
    "3329": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "3332": {
      "op": "JUMP"
    },
    "3333": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3340": {
      "op": "SHL"
    },
    "3341": {
      "op": "SUB"
    },
    "3342": {
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 47
    },
    "3343": {
      "branch": 73,
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "0"
    },
    "3344": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD67"
    },
    "3347": {
      "branch": 73,
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3348": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3350": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3351": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3357": {
      "op": "SHL"
    },
    "3358": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3359": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3362": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3364": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3365": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "ADD",
      "path": "0"
    },
    "3366": {
      "op": "MSTORE"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3371": {
      "op": "DUP3"
    },
    "3372": {
      "op": "ADD"
    },
    "3373": {
      "op": "MSTORE"
    },
    "3374": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3409": {
      "op": "DUP3"
    },
    "3410": {
      "op": "ADD"
    },
    "3411": {
      "op": "MSTORE"
    },
    "3412": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3418": {
      "op": "SHL"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3421": {
      "op": "DUP3"
    },
    "3422": {
      "op": "ADD"
    },
    "3423": {
      "op": "MSTORE"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3426": {
      "op": "ADD"
    },
    "3427": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "3430": {
      "op": "JUMP"
    },
    "3431": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3438": {
      "op": "SHL"
    },
    "3439": {
      "op": "SUB"
    },
    "3440": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3441": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "AND",
      "path": "0"
    },
    "3442": {
      "fn": "ERC20._transfer",
      "offset": [
        7808,
        7827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3444": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3445": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3446": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3447": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3449": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3450": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3451": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3452": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3454": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3455": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3456": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3457": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 48
    },
    "3458": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3459": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "LT",
      "path": "0"
    },
    "3460": {
      "branch": 74,
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3461": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDF"
    },
    "3464": {
      "branch": 74,
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3465": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3467": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3468": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3474": {
      "op": "SHL"
    },
    "3475": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3476": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3479": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3481": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3482": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "ADD",
      "path": "0"
    },
    "3483": {
      "op": "MSTORE"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3488": {
      "op": "DUP3"
    },
    "3489": {
      "op": "ADD"
    },
    "3490": {
      "op": "MSTORE"
    },
    "3491": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3526": {
      "op": "DUP3"
    },
    "3527": {
      "op": "ADD"
    },
    "3528": {
      "op": "MSTORE"
    },
    "3529": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3538": {
      "op": "SHL"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3541": {
      "op": "DUP3"
    },
    "3542": {
      "op": "ADD"
    },
    "3543": {
      "op": "MSTORE"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3546": {
      "op": "ADD"
    },
    "3547": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "3550": {
      "op": "JUMP"
    },
    "3551": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3558": {
      "op": "SHL"
    },
    "3559": {
      "op": "SUB"
    },
    "3560": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 49
    },
    "3561": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3562": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "AND",
      "path": "0"
    },
    "3563": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3565": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3566": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3567": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3568": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3570": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3571": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3572": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3573": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3575": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3576": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3577": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3578": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3579": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3580": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "SUB",
      "path": "0"
    },
    "3581": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3582": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3583": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 50
    },
    "3584": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3585": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "AND",
      "path": "0"
    },
    "3586": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3587": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3588": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3589": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3590": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3591": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3592": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3593": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3594": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3595": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3596": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE16"
    },
    "3599": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3600": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3601": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3602": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124B"
    },
    "3605": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3606": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3607": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3608": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "0"
    },
    "3609": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "0"
    },
    "3610": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3611": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3612": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3613": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "0"
    },
    "3614": {
      "fn": "ERC20._transfer",
      "offset": [
        8073,
        8075
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 51
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3621": {
      "op": "SHL"
    },
    "3622": {
      "op": "SUB"
    },
    "3623": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "0"
    },
    "3624": {
      "fn": "ERC20._transfer",
      "offset": [
        8067,
        8071
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3631": {
      "op": "SHL"
    },
    "3632": {
      "op": "SUB"
    },
    "3633": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "0"
    },
    "3634": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3667": {
      "fn": "ERC20._transfer",
      "offset": [
        8077,
        8083
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3668": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3670": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3671": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE62"
    },
    "3674": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3675": {
      "op": "DUP2"
    },
    "3676": {
      "op": "MSTORE"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3679": {
      "op": "ADD"
    },
    "3680": {
      "op": "SWAP1"
    },
    "3681": {
      "op": "JUMP"
    },
    "3682": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3683": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3685": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3686": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3687": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3688": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SUB",
      "path": "0"
    },
    "3689": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3690": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3691": {
      "fn": "ERC20._transfer",
      "offset": [
        8095,
        8132
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 52,
      "value": "0xC9B"
    },
    "3694": {
      "fn": "ERC20._burn",
      "offset": [
        9124,
        9700
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3695": {
      "fn": "ERC20._mint",
      "offset": [
        8415,
        8804
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3702": {
      "op": "SHL"
    },
    "3703": {
      "op": "SUB"
    },
    "3704": {
      "fn": "ERC20._mint",
      "offset": [
        8498,
        8519
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 53
    },
    "3705": {
      "branch": 75,
      "fn": "ERC20._mint",
      "offset": [
        8498,
        8519
      ],
      "op": "AND",
      "path": "0"
    },
    "3706": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC5"
    },
    "3709": {
      "branch": 75,
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3710": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3712": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3713": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3719": {
      "op": "SHL"
    },
    "3720": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3721": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3724": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3726": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3727": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "ADD",
      "path": "0"
    },
    "3728": {
      "op": "MSTORE"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3733": {
      "op": "DUP3"
    },
    "3734": {
      "op": "ADD"
    },
    "3735": {
      "op": "MSTORE"
    },
    "3736": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3771": {
      "op": "DUP3"
    },
    "3772": {
      "op": "ADD"
    },
    "3773": {
      "op": "MSTORE"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3776": {
      "op": "ADD"
    },
    "3777": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "3780": {
      "op": "JUMP"
    },
    "3781": {
      "fn": "ERC20._mint",
      "offset": [
        8490,
        8555
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3782": {
      "fn": "ERC20._mint",
      "offset": [
        8642,
        8648
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 54
    },
    "3783": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3785": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3787": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3788": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3789": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3790": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED7"
    },
    "3793": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3794": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3795": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124B"
    },
    "3798": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8626,
        8648
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3799": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3800": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3801": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3802": {
      "fn": "ERC20._mint",
      "offset": [
        8626,
        8648
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3803": {
      "op": "POP"
    },
    "3804": {
      "op": "POP"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3811": {
      "op": "SHL"
    },
    "3812": {
      "op": "SUB"
    },
    "3813": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 55
    },
    "3814": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "AND",
      "path": "0"
    },
    "3815": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3817": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3818": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3819": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3820": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3822": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3823": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3824": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3825": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3827": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3828": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8676
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3829": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3830": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3831": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3832": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3833": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8667
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3834": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF04"
    },
    "3837": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3838": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3839": {
      "fn": "ERC20._mint",
      "offset": [
        8680,
        8686
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3840": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124B"
    },
    "3843": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8658,
        8686
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3844": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3845": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3846": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3847": {
      "fn": "ERC20._mint",
      "offset": [
        8658,
        8686
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3848": {
      "op": "POP"
    },
    "3849": {
      "op": "POP"
    },
    "3850": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 56,
      "value": "0x40"
    },
    "3852": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3853": {
      "op": "DUP2"
    },
    "3854": {
      "op": "DUP2"
    },
    "3855": {
      "op": "MSTORE"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3862": {
      "op": "SHL"
    },
    "3863": {
      "op": "SUB"
    },
    "3864": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3865": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "AND",
      "path": "0"
    },
    "3866": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3867": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8719
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3869": {
      "fn": "ERC20._mint",
      "offset": [
        8718,
        8719
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3870": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3903": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3906": {
      "op": "ADD"
    },
    "3907": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3909": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3910": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3911": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3912": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SUB",
      "path": "0"
    },
    "3913": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3914": {
      "fn": "ERC20._mint",
      "offset": [
        8701,
        8738
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3915": {
      "fn": "ERC20._mint",
      "offset": [
        8415,
        8804
      ],
      "op": "POP",
      "path": "0"
    },
    "3916": {
      "fn": "ERC20._mint",
      "offset": [
        8415,
        8804
      ],
      "op": "POP",
      "path": "0"
    },
    "3917": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        8415,
        8804
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3918": {
      "fn": "ERC20._burn",
      "offset": [
        9124,
        9700
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3925": {
      "op": "SHL"
    },
    "3926": {
      "op": "SUB"
    },
    "3927": {
      "fn": "ERC20._burn",
      "offset": [
        9207,
        9228
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 57
    },
    "3928": {
      "branch": 76,
      "fn": "ERC20._burn",
      "offset": [
        9207,
        9228
      ],
      "op": "AND",
      "path": "0"
    },
    "3929": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFAE"
    },
    "3932": {
      "branch": 76,
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3933": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3935": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3936": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3942": {
      "op": "SHL"
    },
    "3943": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3944": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3947": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3949": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3950": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "ADD",
      "path": "0"
    },
    "3951": {
      "op": "MSTORE"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3956": {
      "op": "DUP3"
    },
    "3957": {
      "op": "ADD"
    },
    "3958": {
      "op": "MSTORE"
    },
    "3959": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3994": {
      "op": "DUP3"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "op": "MSTORE"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4001": {
      "op": "SHL"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4004": {
      "op": "DUP3"
    },
    "4005": {
      "op": "ADD"
    },
    "4006": {
      "op": "MSTORE"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4009": {
      "op": "ADD"
    },
    "4010": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "4013": {
      "op": "JUMP"
    },
    "4014": {
      "fn": "ERC20._burn",
      "offset": [
        9199,
        9266
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4021": {
      "op": "SHL"
    },
    "4022": {
      "op": "SUB"
    },
    "4023": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4024": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "AND",
      "path": "0"
    },
    "4025": {
      "fn": "ERC20._burn",
      "offset": [
        9337,
        9359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4027": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4028": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4029": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4030": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4032": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4033": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4034": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4035": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4037": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4038": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4039": {
      "fn": "ERC20._burn",
      "offset": [
        9362,
        9380
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4040": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 58
    },
    "4041": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4042": {
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "LT",
      "path": "0"
    },
    "4043": {
      "branch": 77,
      "fn": "ERC20._burn",
      "offset": [
        9398,
        9422
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4044": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1022"
    },
    "4047": {
      "branch": 77,
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4048": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4050": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4051": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4057": {
      "op": "SHL"
    },
    "4058": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4059": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4062": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4064": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4065": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "ADD",
      "path": "0"
    },
    "4066": {
      "op": "MSTORE"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4071": {
      "op": "DUP3"
    },
    "4072": {
      "op": "ADD"
    },
    "4073": {
      "op": "MSTORE"
    },
    "4074": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4109": {
      "op": "DUP3"
    },
    "4110": {
      "op": "ADD"
    },
    "4111": {
      "op": "MSTORE"
    },
    "4112": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4117": {
      "op": "SHL"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4120": {
      "op": "DUP3"
    },
    "4121": {
      "op": "ADD"
    },
    "4122": {
      "op": "MSTORE"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4125": {
      "op": "ADD"
    },
    "4126": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "4129": {
      "op": "JUMP"
    },
    "4130": {
      "fn": "ERC20._burn",
      "offset": [
        9390,
        9461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4137": {
      "op": "SHL"
    },
    "4138": {
      "op": "SUB"
    },
    "4139": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 59
    },
    "4140": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "AND",
      "path": "0"
    },
    "4141": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9504
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4143": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4144": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4145": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4146": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4148": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4149": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4150": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4151": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4153": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4154": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9513
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4155": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4156": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4157": {
      "fn": "ERC20._burn",
      "offset": [
        9516,
        9539
      ],
      "op": "SUB",
      "path": "0"
    },
    "4158": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9539
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4159": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9539
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4160": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9571
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 60,
      "value": "0x2"
    },
    "4162": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4163": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4164": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4165": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4166": {
      "fn": "ERC20._burn",
      "offset": [
        9495,
        9504
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4167": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1051"
    },
    "4170": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4171": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4172": {
      "fn": "ERC20._burn",
      "offset": [
        9533,
        9539
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4173": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x128D"
    },
    "4176": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        9559,
        9581
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4177": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4178": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4179": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4180": {
      "fn": "ERC20._burn",
      "offset": [
        9559,
        9581
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4181": {
      "op": "POP"
    },
    "4182": {
      "op": "POP"
    },
    "4183": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 61,
      "value": "0x40"
    },
    "4185": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4186": {
      "op": "DUP3"
    },
    "4187": {
      "op": "DUP2"
    },
    "4188": {
      "op": "MSTORE"
    },
    "4189": {
      "fn": "ERC20._burn",
      "offset": [
        9623,
        9624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4191": {
      "fn": "ERC20._burn",
      "offset": [
        9623,
        9624
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4198": {
      "op": "SHL"
    },
    "4199": {
      "op": "SUB"
    },
    "4200": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4201": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "AND",
      "path": "0"
    },
    "4202": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4203": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4236": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4239": {
      "op": "ADD"
    },
    "4240": {
      "fn": "ERC20._burn",
      "offset": [
        9597,
        9634
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC02"
    },
    "4243": {
      "op": "JUMP"
    },
    "4244": {
      "op": "JUMPDEST"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4249": {
      "op": "DUP1"
    },
    "4250": {
      "op": "DUP4"
    },
    "4251": {
      "op": "MSTORE"
    },
    "4252": {
      "op": "DUP4"
    },
    "4253": {
      "op": "MLOAD"
    },
    "4254": {
      "op": "DUP1"
    },
    "4255": {
      "op": "DUP3"
    },
    "4256": {
      "op": "DUP6"
    },
    "4257": {
      "op": "ADD"
    },
    "4258": {
      "op": "MSTORE"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4261": {
      "op": "JUMPDEST"
    },
    "4262": {
      "op": "DUP2"
    },
    "4263": {
      "op": "DUP2"
    },
    "4264": {
      "op": "LT"
    },
    "4265": {
      "op": "ISZERO"
    },
    "4266": {
      "op": "PUSH2",
      "value": "0x10C1"
    },
    "4269": {
      "op": "JUMPI"
    },
    "4270": {
      "op": "DUP6"
    },
    "4271": {
      "op": "DUP2"
    },
    "4272": {
      "op": "ADD"
    },
    "4273": {
      "op": "DUP4"
    },
    "4274": {
      "op": "ADD"
    },
    "4275": {
      "op": "MLOAD"
    },
    "4276": {
      "op": "DUP6"
    },
    "4277": {
      "op": "DUP3"
    },
    "4278": {
      "op": "ADD"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4281": {
      "op": "ADD"
    },
    "4282": {
      "op": "MSTORE"
    },
    "4283": {
      "op": "DUP3"
    },
    "4284": {
      "op": "ADD"
    },
    "4285": {
      "op": "PUSH2",
      "value": "0x10A5"
    },
    "4288": {
      "op": "JUMP"
    },
    "4289": {
      "op": "JUMPDEST"
    },
    "4290": {
      "op": "DUP2"
    },
    "4291": {
      "op": "DUP2"
    },
    "4292": {
      "op": "GT"
    },
    "4293": {
      "op": "ISZERO"
    },
    "4294": {
      "op": "PUSH2",
      "value": "0x10D3"
    },
    "4297": {
      "op": "JUMPI"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4302": {
      "op": "DUP4"
    },
    "4303": {
      "op": "DUP8"
    },
    "4304": {
      "op": "ADD"
    },
    "4305": {
      "op": "ADD"
    },
    "4306": {
      "op": "MSTORE"
    },
    "4307": {
      "op": "JUMPDEST"
    },
    "4308": {
      "op": "POP"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4311": {
      "op": "ADD"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4314": {
      "op": "NOT"
    },
    "4315": {
      "op": "AND"
    },
    "4316": {
      "op": "SWAP3"
    },
    "4317": {
      "op": "SWAP1"
    },
    "4318": {
      "op": "SWAP3"
    },
    "4319": {
      "op": "ADD"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4322": {
      "op": "ADD"
    },
    "4323": {
      "op": "SWAP4"
    },
    "4324": {
      "op": "SWAP3"
    },
    "4325": {
      "op": "POP"
    },
    "4326": {
      "op": "POP"
    },
    "4327": {
      "op": "POP"
    },
    "4328": {
      "jump": "o",
      "op": "JUMP"
    },
    "4329": {
      "op": "JUMPDEST"
    },
    "4330": {
      "op": "DUP1"
    },
    "4331": {
      "op": "CALLDATALOAD"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4338": {
      "op": "SHL"
    },
    "4339": {
      "op": "SUB"
    },
    "4340": {
      "op": "DUP2"
    },
    "4341": {
      "op": "AND"
    },
    "4342": {
      "op": "DUP2"
    },
    "4343": {
      "op": "EQ"
    },
    "4344": {
      "op": "PUSH2",
      "value": "0x1100"
    },
    "4347": {
      "op": "JUMPI"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4350": {
      "op": "DUP1"
    },
    "4351": {
      "op": "REVERT"
    },
    "4352": {
      "op": "JUMPDEST"
    },
    "4353": {
      "op": "SWAP2"
    },
    "4354": {
      "op": "SWAP1"
    },
    "4355": {
      "op": "POP"
    },
    "4356": {
      "jump": "o",
      "op": "JUMP"
    },
    "4357": {
      "op": "JUMPDEST"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4360": {
      "op": "DUP1"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4363": {
      "op": "DUP4"
    },
    "4364": {
      "op": "DUP6"
    },
    "4365": {
      "op": "SUB"
    },
    "4366": {
      "op": "SLT"
    },
    "4367": {
      "op": "ISZERO"
    },
    "4368": {
      "op": "PUSH2",
      "value": "0x1118"
    },
    "4371": {
      "op": "JUMPI"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4374": {
      "op": "DUP1"
    },
    "4375": {
      "op": "REVERT"
    },
    "4376": {
      "op": "JUMPDEST"
    },
    "4377": {
      "op": "PUSH2",
      "value": "0x1121"
    },
    "4380": {
      "op": "DUP4"
    },
    "4381": {
      "op": "PUSH2",
      "value": "0x10E9"
    },
    "4384": {
      "jump": "i",
      "op": "JUMP"
    },
    "4385": {
      "op": "JUMPDEST"
    },
    "4386": {
      "op": "SWAP5"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4389": {
      "op": "SWAP4"
    },
    "4390": {
      "op": "SWAP1"
    },
    "4391": {
      "op": "SWAP4"
    },
    "4392": {
      "op": "ADD"
    },
    "4393": {
      "op": "CALLDATALOAD"
    },
    "4394": {
      "op": "SWAP4"
    },
    "4395": {
      "op": "POP"
    },
    "4396": {
      "op": "POP"
    },
    "4397": {
      "op": "POP"
    },
    "4398": {
      "jump": "o",
      "op": "JUMP"
    },
    "4399": {
      "op": "JUMPDEST"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4402": {
      "op": "DUP1"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4407": {
      "op": "DUP5"
    },
    "4408": {
      "op": "DUP7"
    },
    "4409": {
      "op": "SUB"
    },
    "4410": {
      "op": "SLT"
    },
    "4411": {
      "op": "ISZERO"
    },
    "4412": {
      "op": "PUSH2",
      "value": "0x1144"
    },
    "4415": {
      "op": "JUMPI"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4418": {
      "op": "DUP1"
    },
    "4419": {
      "op": "REVERT"
    },
    "4420": {
      "op": "JUMPDEST"
    },
    "4421": {
      "op": "PUSH2",
      "value": "0x114D"
    },
    "4424": {
      "op": "DUP5"
    },
    "4425": {
      "op": "PUSH2",
      "value": "0x10E9"
    },
    "4428": {
      "jump": "i",
      "op": "JUMP"
    },
    "4429": {
      "op": "JUMPDEST"
    },
    "4430": {
      "op": "SWAP3"
    },
    "4431": {
      "op": "POP"
    },
    "4432": {
      "op": "PUSH2",
      "value": "0x115B"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4437": {
      "op": "DUP6"
    },
    "4438": {
      "op": "ADD"
    },
    "4439": {
      "op": "PUSH2",
      "value": "0x10E9"
    },
    "4442": {
      "jump": "i",
      "op": "JUMP"
    },
    "4443": {
      "op": "JUMPDEST"
    },
    "4444": {
      "op": "SWAP2"
    },
    "4445": {
      "op": "POP"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4448": {
      "op": "DUP5"
    },
    "4449": {
      "op": "ADD"
    },
    "4450": {
      "op": "CALLDATALOAD"
    },
    "4451": {
      "op": "SWAP1"
    },
    "4452": {
      "op": "POP"
    },
    "4453": {
      "op": "SWAP3"
    },
    "4454": {
      "op": "POP"
    },
    "4455": {
      "op": "SWAP3"
    },
    "4456": {
      "op": "POP"
    },
    "4457": {
      "op": "SWAP3"
    },
    "4458": {
      "jump": "o",
      "op": "JUMP"
    },
    "4459": {
      "op": "JUMPDEST"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4464": {
      "op": "DUP3"
    },
    "4465": {
      "op": "DUP5"
    },
    "4466": {
      "op": "SUB"
    },
    "4467": {
      "op": "SLT"
    },
    "4468": {
      "op": "ISZERO"
    },
    "4469": {
      "op": "PUSH2",
      "value": "0x117D"
    },
    "4472": {
      "op": "JUMPI"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4475": {
      "op": "DUP1"
    },
    "4476": {
      "op": "REVERT"
    },
    "4477": {
      "op": "JUMPDEST"
    },
    "4478": {
      "op": "PUSH2",
      "value": "0x1186"
    },
    "4481": {
      "op": "DUP3"
    },
    "4482": {
      "op": "PUSH2",
      "value": "0x10E9"
    },
    "4485": {
      "jump": "i",
      "op": "JUMP"
    },
    "4486": {
      "op": "JUMPDEST"
    },
    "4487": {
      "op": "SWAP4"
    },
    "4488": {
      "op": "SWAP3"
    },
    "4489": {
      "op": "POP"
    },
    "4490": {
      "op": "POP"
    },
    "4491": {
      "op": "POP"
    },
    "4492": {
      "jump": "o",
      "op": "JUMP"
    },
    "4493": {
      "op": "JUMPDEST"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4498": {
      "op": "DUP3"
    },
    "4499": {
      "op": "DUP5"
    },
    "4500": {
      "op": "SUB"
    },
    "4501": {
      "op": "SLT"
    },
    "4502": {
      "op": "ISZERO"
    },
    "4503": {
      "op": "PUSH2",
      "value": "0x119F"
    },
    "4506": {
      "op": "JUMPI"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4509": {
      "op": "DUP1"
    },
    "4510": {
      "op": "REVERT"
    },
    "4511": {
      "op": "JUMPDEST"
    },
    "4512": {
      "op": "POP"
    },
    "4513": {
      "op": "CALLDATALOAD"
    },
    "4514": {
      "op": "SWAP2"
    },
    "4515": {
      "op": "SWAP1"
    },
    "4516": {
      "op": "POP"
    },
    "4517": {
      "jump": "o",
      "op": "JUMP"
    },
    "4518": {
      "op": "JUMPDEST"
    },
    "4519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4521": {
      "op": "DUP1"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4524": {
      "op": "DUP4"
    },
    "4525": {
      "op": "DUP6"
    },
    "4526": {
      "op": "SUB"
    },
    "4527": {
      "op": "SLT"
    },
    "4528": {
      "op": "ISZERO"
    },
    "4529": {
      "op": "PUSH2",
      "value": "0x11B9"
    },
    "4532": {
      "op": "JUMPI"
    },
    "4533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4535": {
      "op": "DUP1"
    },
    "4536": {
      "op": "REVERT"
    },
    "4537": {
      "op": "JUMPDEST"
    },
    "4538": {
      "op": "PUSH2",
      "value": "0x11C2"
    },
    "4541": {
      "op": "DUP4"
    },
    "4542": {
      "op": "PUSH2",
      "value": "0x10E9"
    },
    "4545": {
      "jump": "i",
      "op": "JUMP"
    },
    "4546": {
      "op": "JUMPDEST"
    },
    "4547": {
      "op": "SWAP2"
    },
    "4548": {
      "op": "POP"
    },
    "4549": {
      "op": "PUSH2",
      "value": "0x11D0"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4554": {
      "op": "DUP5"
    },
    "4555": {
      "op": "ADD"
    },
    "4556": {
      "op": "PUSH2",
      "value": "0x10E9"
    },
    "4559": {
      "jump": "i",
      "op": "JUMP"
    },
    "4560": {
      "op": "JUMPDEST"
    },
    "4561": {
      "op": "SWAP1"
    },
    "4562": {
      "op": "POP"
    },
    "4563": {
      "op": "SWAP3"
    },
    "4564": {
      "op": "POP"
    },
    "4565": {
      "op": "SWAP3"
    },
    "4566": {
      "op": "SWAP1"
    },
    "4567": {
      "op": "POP"
    },
    "4568": {
      "jump": "o",
      "op": "JUMP"
    },
    "4569": {
      "op": "JUMPDEST"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4572": {
      "op": "DUP2"
    },
    "4573": {
      "op": "DUP2"
    },
    "4574": {
      "op": "SHR"
    },
    "4575": {
      "op": "SWAP1"
    },
    "4576": {
      "op": "DUP3"
    },
    "4577": {
      "op": "AND"
    },
    "4578": {
      "op": "DUP1"
    },
    "4579": {
      "op": "PUSH2",
      "value": "0x11ED"
    },
    "4582": {
      "op": "JUMPI"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4585": {
      "op": "DUP3"
    },
    "4586": {
      "op": "AND"
    },
    "4587": {
      "op": "SWAP2"
    },
    "4588": {
      "op": "POP"
    },
    "4589": {
      "op": "JUMPDEST"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4592": {
      "op": "DUP3"
    },
    "4593": {
      "op": "LT"
    },
    "4594": {
      "op": "DUP2"
    },
    "4595": {
      "op": "SUB"
    },
    "4596": {
      "op": "PUSH2",
      "value": "0x120D"
    },
    "4599": {
      "op": "JUMPI"
    },
    "4600": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4607": {
      "op": "SHL"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4610": {
      "op": "MSTORE"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4615": {
      "op": "MSTORE"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4620": {
      "op": "REVERT"
    },
    "4621": {
      "op": "JUMPDEST"
    },
    "4622": {
      "op": "POP"
    },
    "4623": {
      "op": "SWAP2"
    },
    "4624": {
      "op": "SWAP1"
    },
    "4625": {
      "op": "POP"
    },
    "4626": {
      "jump": "o",
      "op": "JUMP"
    },
    "4627": {
      "op": "JUMPDEST"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4632": {
      "op": "DUP3"
    },
    "4633": {
      "op": "DUP5"
    },
    "4634": {
      "op": "SUB"
    },
    "4635": {
      "op": "SLT"
    },
    "4636": {
      "op": "ISZERO"
    },
    "4637": {
      "op": "PUSH2",
      "value": "0x1225"
    },
    "4640": {
      "op": "JUMPI"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4643": {
      "op": "DUP1"
    },
    "4644": {
      "op": "REVERT"
    },
    "4645": {
      "op": "JUMPDEST"
    },
    "4646": {
      "op": "DUP2"
    },
    "4647": {
      "op": "MLOAD"
    },
    "4648": {
      "op": "DUP1"
    },
    "4649": {
      "op": "ISZERO"
    },
    "4650": {
      "op": "ISZERO"
    },
    "4651": {
      "op": "DUP2"
    },
    "4652": {
      "op": "EQ"
    },
    "4653": {
      "op": "PUSH2",
      "value": "0x1186"
    },
    "4656": {
      "op": "JUMPI"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4659": {
      "op": "DUP1"
    },
    "4660": {
      "op": "REVERT"
    },
    "4661": {
      "op": "JUMPDEST"
    },
    "4662": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4669": {
      "op": "SHL"
    },
    "4670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4672": {
      "op": "MSTORE"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4677": {
      "op": "MSTORE"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4682": {
      "op": "REVERT"
    },
    "4683": {
      "op": "JUMPDEST"
    },
    "4684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4686": {
      "op": "DUP3"
    },
    "4687": {
      "op": "NOT"
    },
    "4688": {
      "op": "DUP3"
    },
    "4689": {
      "op": "GT"
    },
    "4690": {
      "op": "ISZERO"
    },
    "4691": {
      "op": "PUSH2",
      "value": "0x125E"
    },
    "4694": {
      "op": "JUMPI"
    },
    "4695": {
      "op": "PUSH2",
      "value": "0x125E"
    },
    "4698": {
      "op": "PUSH2",
      "value": "0x1235"
    },
    "4701": {
      "jump": "i",
      "op": "JUMP"
    },
    "4702": {
      "op": "JUMPDEST"
    },
    "4703": {
      "op": "POP"
    },
    "4704": {
      "op": "ADD"
    },
    "4705": {
      "op": "SWAP1"
    },
    "4706": {
      "jump": "o",
      "op": "JUMP"
    },
    "4707": {
      "op": "JUMPDEST"
    },
    "4708": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4715": {
      "op": "SHL"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4718": {
      "op": "MSTORE"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4721": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4723": {
      "op": "MSTORE"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4728": {
      "op": "REVERT"
    },
    "4729": {
      "op": "JUMPDEST"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4732": {
      "op": "DUP3"
    },
    "4733": {
      "op": "PUSH2",
      "value": "0x1288"
    },
    "4736": {
      "op": "JUMPI"
    },
    "4737": {
      "op": "PUSH2",
      "value": "0x1288"
    },
    "4740": {
      "op": "PUSH2",
      "value": "0x1263"
    },
    "4743": {
      "jump": "i",
      "op": "JUMP"
    },
    "4744": {
      "op": "JUMPDEST"
    },
    "4745": {
      "op": "POP"
    },
    "4746": {
      "op": "MOD"
    },
    "4747": {
      "op": "SWAP1"
    },
    "4748": {
      "jump": "o",
      "op": "JUMP"
    },
    "4749": {
      "op": "JUMPDEST"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4752": {
      "op": "DUP3"
    },
    "4753": {
      "op": "DUP3"
    },
    "4754": {
      "op": "LT"
    },
    "4755": {
      "op": "ISZERO"
    },
    "4756": {
      "op": "PUSH2",
      "value": "0x129F"
    },
    "4759": {
      "op": "JUMPI"
    },
    "4760": {
      "op": "PUSH2",
      "value": "0x129F"
    },
    "4763": {
      "op": "PUSH2",
      "value": "0x1235"
    },
    "4766": {
      "jump": "i",
      "op": "JUMP"
    },
    "4767": {
      "op": "JUMPDEST"
    },
    "4768": {
      "op": "POP"
    },
    "4769": {
      "op": "SUB"
    },
    "4770": {
      "op": "SWAP1"
    },
    "4771": {
      "jump": "o",
      "op": "JUMP"
    },
    "4772": {
      "op": "JUMPDEST"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4775": {
      "op": "DUP3"
    },
    "4776": {
      "op": "PUSH2",
      "value": "0x12B3"
    },
    "4779": {
      "op": "JUMPI"
    },
    "4780": {
      "op": "PUSH2",
      "value": "0x12B3"
    },
    "4783": {
      "op": "PUSH2",
      "value": "0x1263"
    },
    "4786": {
      "jump": "i",
      "op": "JUMP"
    },
    "4787": {
      "op": "JUMPDEST"
    },
    "4788": {
      "op": "POP"
    },
    "4789": {
      "op": "DIV"
    },
    "4790": {
      "op": "SWAP1"
    },
    "4791": {
      "jump": "o",
      "op": "JUMP"
    },
    "4792": {
      "op": "JUMPDEST"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4795": {
      "op": "DUP2"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4798": {
      "op": "NOT"
    },
    "4799": {
      "op": "DIV"
    },
    "4800": {
      "op": "DUP4"
    },
    "4801": {
      "op": "GT"
    },
    "4802": {
      "op": "DUP3"
    },
    "4803": {
      "op": "ISZERO"
    },
    "4804": {
      "op": "ISZERO"
    },
    "4805": {
      "op": "AND"
    },
    "4806": {
      "op": "ISZERO"
    },
    "4807": {
      "op": "PUSH2",
      "value": "0x12D2"
    },
    "4810": {
      "op": "JUMPI"
    },
    "4811": {
      "op": "PUSH2",
      "value": "0x12D2"
    },
    "4814": {
      "op": "PUSH2",
      "value": "0x1235"
    },
    "4817": {
      "jump": "i",
      "op": "JUMP"
    },
    "4818": {
      "op": "JUMPDEST"
    },
    "4819": {
      "op": "POP"
    },
    "4820": {
      "op": "MUL"
    },
    "4821": {
      "op": "SWAP1"
    },
    "4822": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a112ae90e4109e69611105aed73ffe5bc447ce53",
  "source": "pragma solidity ^0.8.14;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract CookieCapital is ERC20 {\n\n    ERC20 private _stakedToken;\n    address public _stakedTokenAddress;\n    uint256 public _totalCookiesEaten;\n\n    mapping (address => uint256) public _staked;\n    mapping (address => uint256) public _cookiePower;\n    mapping (address => uint256) public _lastStaked;\n\n    event Staked(address indexed user, uint256 amount);\n    event Unstaked(address indexed user, uint256 amount);\n    event Harvest(address indexed user, uint256 amount);\n    event Eat(address indexed user, uint256 amount);\n\n    constructor (address stakedTokenAddress) ERC20(\"Cookies\", \"COK\") {\n        _stakedTokenAddress = stakedTokenAddress;\n        _stakedToken = ERC20(stakedTokenAddress);\n    }\n\n    function stake(uint256 amount) public {\n        require(amount > 0, \"Must stake more than 0 tokens.\");\n        if (_staked[msg.sender] > 0) {\n            unstake();\n        }\n        _stakedToken.transferFrom(msg.sender, address(this), amount);\n        _staked[msg.sender] = amount;\n        _lastStaked[msg.sender] = block.timestamp;\n        emit Staked(msg.sender, amount);\n    }\n\n    function unstake() public {\n        require(_staked[msg.sender] > 0, \"You need to stake before unstaking.\");\n        harvest();\n        uint256 staked = _staked[msg.sender];\n        _staked[msg.sender] = 0;\n        _stakedToken.transfer(msg.sender, staked);\n        emit Unstaked(msg.sender, staked);\n    }\n\n    function calculateProfit(address addr) public view returns (uint256 profit) {\n        uint256 hoursSpent = ((block.timestamp - _lastStaked[addr]) * 1000) / 3600;\n        uint256 cookieMultiplier = (1000 + _cookiePower[addr]);\n        uint256 cookies = (_staked[addr] * hoursSpent * cookieMultiplier) / 1000;\n        return cookies;\n    }\n\n    function harvest() public returns (uint256 earnedCookies) {\n        require(_staked[msg.sender] > 0, \"You haven't staked anything.\");\n        uint256 cookies = calculateProfit(msg.sender);\n        _lastStaked[msg.sender] = block.timestamp;\n        _mint(msg.sender, cookies);\n        emit Harvest(msg.sender, cookies);\n        return cookies;\n    }\n\n    function eat(uint256 amount) public {\n        harvest();\n        require(amount >= (1000 * 10**18), \"Must eat at least 1000 cookies.\");\n        require(balanceOf(msg.sender) >= amount, \"Not enough cookies in balance.\");\n        uint256 remaining = amount % (1000 * 10**18);\n        _burn(msg.sender, amount - remaining);\n        _cookiePower[msg.sender] += (amount - remaining) / (1000 * 10**18);\n        emit Eat(msg.sender, (amount - remaining));\n    }\n\n    function harvestAndEat() public {\n        require((calculateProfit(msg.sender) + balanceOf(msg.sender)) > (1000 * 10**18), \"Must eat more than 1000 cookies.\");\n        uint256 harvested = harvest();\n        eat(harvested);\n    }\n}",
  "sourceMap": "83:2796:4:-:0;;;616:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:0;;;;;;;;;;;;;-1:-1:-1;;;1978:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:0;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2067:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;691:19:4::1;:40:::0;;-1:-1:-1;;;;;691:40:4;;::::1;-1:-1:-1::0;;;;;;691:40:4;;::::1;::::0;::::1;::::0;;;741:12:::1;:40:::0;;;;::::1;;::::0;;;-1:-1:-1;83:2796:4;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;83:2796:4;;;-1:-1:-1;83:2796:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;309:380::-;388:1;384:12;;;;431;;;452:61;;506:4;498:6;494:17;484:27;;452:61;559:2;551:6;548:14;528:18;525:38;522:161;;605:10;600:3;596:20;593:1;586:31;640:4;637:1;630:15;668:4;665:1;658:15;522:161;;309:380;;;:::o;:::-;83:2796:4;;;;;;",
  "sourcePath": "contracts/cookie.sol",
  "type": "contract"
}